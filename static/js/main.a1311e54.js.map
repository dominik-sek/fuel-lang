{"version":3,"file":"static/js/main.a1311e54.js","mappings":"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AAAA,IAK9B23D,EAAmB,SAAnBA,IAAmB,OAAaD,EAAqB13D,EAAK98C,EAASipG,GAAAA,WAAAA,EAAAA,aAAAA,OAGzEwL,EAAiBC,WAAa,YAAA1tG,OAC5ButG,EAAqBC,EAAsB13D,EAAAA,EAAAA,GAAU98C,EAAAA,GAAYgH,KAGnEytG,EAAiBpC,MAAQ,YAAAA,OACvBkC,EAAqBC,EAAsB13D,EAAAA,EAAAA,GACtC98C,EAAAA,CACHqyG,MAAOpsH,MAAMyB,UAAUqlE,OAAO/sD,EAAQqyG,MAAOA,GAAOp6G,OAAOlM,aAGxD0oH,EDzBO33D,CAAqC63D,GAAiB73D,IDJvD,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAGA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,WACA,SCnIUtrD,SAAQ,YAClB8iH,GAAOM,GAAcN,GAAOM,OELTC,WAAAA,SAAAA,EAOPrM,EAAgBqE,GAAAA,KACrBrE,MAAQA,EAAAA,KACRqE,YAAcA,EAAAA,KACdG,SAAWN,GAAclE,GAI9BgD,GAAWI,WA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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/regenerator/index.js","parser/Visitor.ts","ANTLRInputStream.ts","BailErrorStrategy.ts","BufferedTokenStream.ts","CharStreams.ts","CodePointBuffer.ts","CodePointCharStream.ts","CommonToken.ts","CommonTokenFactory.ts","CommonTokenStream.ts","ConsoleErrorListener.ts","Decorators.ts","DefaultErrorStrategy.ts","Dependents.ts","DiagnosticErrorListener.ts","FailedPredicateException.ts","InputMismatchException.ts","IntStream.ts","InterpreterRuleContext.ts","Lexer.ts","LexerInterpreter.ts","LexerNoViableAltException.ts","ListTokenSource.ts","NoViableAltException.ts","Parser.ts","ParserInterpreter.ts","ParserRuleContext.ts","ProxyErrorListener.ts","ProxyParserErrorListener.ts","RecognitionException.ts","Recognizer.ts","RuleContext.ts","RuleContextWithAltNum.ts","RuleDependency.ts","RuleVersion.ts","Token.ts","TokenStreamRewriter.ts","VocabularyImpl.ts","atn/ATN.ts","atn/ATNConfig.ts","atn/ATNConfigSet.ts","atn/ATNDeserializationOptions.ts","atn/ATNDeserializer.ts","atn/ATNSimulator.ts","atn/ATNState.ts","atn/ATNStateType.ts","atn/AbstractPredicateTransition.ts","atn/ActionTransition.ts","atn/AmbiguityInfo.ts","atn/AtomTransition.ts","atn/BasicBlockStartState.ts","atn/BasicState.ts","atn/BlockEndState.ts","atn/BlockStartState.ts","atn/ConflictInfo.ts","atn/ContextSensitivityInfo.ts","atn/DecisionEventInfo.ts","atn/DecisionInfo.ts","atn/DecisionState.ts","atn/EpsilonTransition.ts","atn/ErrorInfo.ts","atn/InvalidState.ts","atn/LL1Analyzer.ts","atn/LexerATNSimulator.ts","atn/LexerActionExecutor.ts","atn/LexerChannelAction.ts","atn/LexerCustomAction.ts","atn/LexerIndexedCustomAction.ts","atn/LexerModeAction.ts","atn/LexerMoreAction.ts","atn/LexerPopModeAction.ts","atn/LexerPushModeAction.ts","atn/LexerSkipAction.ts","atn/LexerTypeAction.ts","atn/LookaheadEventInfo.ts","atn/LoopEndState.ts","atn/NotSetTransition.ts","atn/OrderedATNConfigSet.ts","atn/ParseInfo.ts","atn/ParserATNSimulator.ts","atn/PlusBlockStartState.ts","atn/PlusLoopbackState.ts","atn/PrecedencePredicateTransition.ts","atn/PredicateEvalInfo.ts","atn/PredicateTransition.ts","atn/PredictionContext.ts","atn/PredictionContextCache.ts","atn/PredictionMode.ts","atn/ProfilingATNSimulator.ts","atn/RangeTransition.ts","atn/RuleStartState.ts","atn/RuleStopState.ts","atn/RuleTransition.ts","atn/SemanticContext.ts","atn/SetTransition.ts","atn/SimulatorState.ts","atn/StarBlockStartState.ts","atn/StarLoopEntryState.ts","atn/StarLoopbackState.ts","atn/TokensStartState.ts","atn/Transition.ts","atn/WildcardTransition.ts","dfa/AcceptStateInfo.ts","dfa/DFA.ts","dfa/DFASerializer.ts","dfa/DFAState.ts","dfa/LexerDFASerializer.ts","index.ts","misc/Array2DHashMap.ts","misc/Array2DHashSet.ts","misc/ArrayEqualityComparator.ts","misc/Arrays.ts","misc/BitSet.ts","misc/Character.ts","misc/DefaultEqualityComparator.ts","misc/IntegerList.ts","misc/IntegerStack.ts","misc/Interval.ts","misc/IntervalSet.ts","misc/MultiMap.ts","misc/MurmurHash.ts","misc/ObjectEqualityComparator.ts","misc/ParseCancellationException.ts","misc/UUID.ts","misc/Utils.ts","tree/ErrorNode.ts","tree/RuleNode.ts","tree/TerminalNode.ts","tree/Trees.ts","tree/pattern/Chunk.ts","tree/pattern/ParseTreeMatch.ts","tree/pattern/ParseTreePattern.ts","tree/pattern/ParseTreePatternMatcher.ts","tree/pattern/RuleTagToken.ts","tree/pattern/TagChunk.ts","tree/pattern/TextChunk.ts","tree/pattern/TokenTagToken.ts","tree/xpath/XPath.ts","tree/xpath/XPathElement.ts","tree/xpath/XPathLexer.ts","tree/xpath/XPathLexerErrorListener.ts","tree/xpath/XPathRuleAnywhereElement.ts","tree/xpath/XPathRuleElement.ts","tree/xpath/XPathTokenAnywhereElement.ts","tree/xpath/XPathTokenElement.ts","tree/xpath/XPathWildcardAnywhereElement.ts","tree/xpath/XPathWildcardElement.ts","../node_modules/assert/assert.js","../node_modules/assert/node_modules/inherits/inherits_browser.js","../node_modules/assert/node_modules/util/support/isBufferBrowser.js","../node_modules/assert/node_modules/util/util.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/object-assign/index.js","../node_modules/prismjs/components/prism-clike.js","../node_modules/prismjs/components/prism-core.js","../node_modules/prismjs/components/prism-javascript.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/react-simple-code-editor/src/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/shallowequal/index.js","../node_modules/util/node_modules/inherits/inherits_browser.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/util.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","../node_modules/styled-components/src/utils/interleave.js","../node_modules/styled-components/src/utils/isPlainObject.js","../node_modules/styled-components/src/utils/empties.js","../node_modules/styled-components/src/utils/isFunction.js","../node_modules/styled-components/src/utils/getComponentName.js","../node_modules/styled-components/src/utils/isStyledComponent.js","../node_modules/styled-components/src/constants.js","../node_modules/styled-components/src/utils/error.js","../node_modules/styled-components/src/sheet/GroupedTag.js","../node_modules/styled-components/src/sheet/GroupIDAllocator.js","../node_modules/styled-components/src/sheet/Rehydration.js","../node_modules/styled-components/src/utils/nonce.js","../node_modules/styled-components/src/sheet/dom.js","../node_modules/styled-components/src/sheet/Tag.js","../node_modules/styled-components/src/sheet/Sheet.js","../node_modules/styled-components/src/utils/generateAlphabeticName.js","../node_modules/styled-components/src/utils/hash.js","../node_modules/styled-components/src/utils/isStaticRules.js","../node_modules/styled-components/src/models/ComponentStyle.js","../node_modules/styled-components/src/utils/stylis.js","../node_modules/styled-components/src/utils/stylisPluginInsertRule.js","../node_modules/styled-components/src/models/StyleSheetManager.js","../node_modules/styled-components/src/models/Keyframes.js","../node_modules/styled-components/src/utils/hyphenateStyleName.js","../node_modules/styled-components/src/utils/flatten.js","../node_modules/styled-components/src/utils/isStatelessFunction.js","../node_modules/styled-components/src/utils/addUnitIfNeeded.js","../node_modules/styled-components/src/constructors/css.js","../node_modules/styled-components/src/utils/checkDynamicCreation.js","../node_modules/styled-components/src/utils/determineTheme.js","../node_modules/styled-components/src/utils/escape.js","../node_modules/styled-components/src/utils/generateComponentId.js","../node_modules/styled-components/src/utils/isTag.js","../node_modules/styled-components/src/utils/mixinDeep.js","../node_modules/styled-components/src/models/ThemeProvider.js","../node_modules/styled-components/src/models/StyledComponent.js","../node_modules/styled-components/src/utils/generateDisplayName.js","../node_modules/styled-components/src/utils/joinStrings.js","../node_modules/styled-components/src/utils/domElements.js","../node_modules/styled-components/src/constructors/styled.js","../node_modules/styled-components/src/constructors/constructWithOptions.js","../node_modules/styled-components/src/models/GlobalStyle.js","../node_modules/styled-components/src/models/ServerStyleSheet.js","../node_modules/styled-components/src/constructors/keyframes.js","../node_modules/styled-components/src/base.js","components/Terminal.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","parser/FireLexer.ts","parser/FireParser.ts","components/TerminalLine.js","parser/FireErrorListener.ts","App.js","reportWebVitals.js","index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"regenerator-runtime\");\n","import { ErrorNode } from \"antlr4ts/tree/ErrorNode\";\r\nimport { ParseTree } from \"antlr4ts/tree/ParseTree\";\r\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\r\nimport { ObjectChildReferenceContext } from \"./FireParser\";\r\nimport { CompilationUnitContext, StmtContext, RelationStmtContext, AssignStmtContext, PrintStmtContext, JsonContext, JsonObjectContext, VariableNameContext, KeyValuePairContext, PrimitiveEntityContext, ValueContext, ArrContext, BoolContext, IfThenDoStmtContext } from \"./FireParser\";\r\nimport { FireVisitor } from \"./FireVisitor\";\r\n\r\nexport default class Visitor implements FireVisitor<any> {\r\n    visitCompilationUnit?: (ctx: CompilationUnitContext) => any;\r\n    visitStmt?: (ctx: StmtContext) => any;\r\n    // visitRelationStmt?: (ctx: RelationStmtContext) => any;\r\n    // visitAssignStmt?: (ctx: AssignStmtContext) => any;\r\n    // visitPrintStmt?: (ctx: PrintStmtContext) => any;\r\n    visitJson?: (ctx: JsonContext) => any;\r\n    visitJsonObject?: (ctx: JsonObjectContext) => any;\r\n    visitVariableName?: (ctx: VariableNameContext) => any;\r\n    visitKeyValuePair?: (ctx: KeyValuePairContext) => any;\r\n    // visitPrimitiveEntity?: (ctx: PrimitiveEntityContext) => any;\r\n    visitValue?: (ctx: ValueContext) => any;\r\n    visitArr?: (ctx: ArrContext) => any;\r\n    visitBool?: (ctx: BoolContext) => any;\r\n    visitObjectChildReference?: (ctx: ObjectChildReferenceContext) => any;\r\n    visit(tree: ParseTree) {\r\n        return tree.accept(this);\r\n    }\r\n    visitTerminal(node: TerminalNode) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    visitErrorNode(node: ErrorNode) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    objects = {};\r\n    relations = {};\r\n    arrays = {};\r\n\r\n    printables = [];\r\n    defineErrors = [];\r\n    alertInvocations = [];\r\n\r\n    private checkIfValueIsDefined(subjectName: ParseTree) {\r\n        if (this.objects[subjectName?.text] || this.arrays[subjectName?.text] || this.relations[subjectName?.text]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    private getLineNumber(ctx?: ParseTree) {\r\n        return ctx?.start?.line;\r\n    }\r\n\r\n    visitAssignStmt(ctx: AssignStmtContext) {\r\n        let prefix = ctx?.children[0];\r\n        let objName = ctx?.children[1];\r\n        let objValues = ctx?.children[3];\r\n        console.log(\"trying to assign with\", prefix, objValues.constructor.name);\r\n\r\n        if (!prefix || !objName || !objValues) {\r\n            console.log(\"error: \", prefix, objName, objValues);\r\n            return;\r\n        }\r\n\r\n        if (prefix.constructor.name === 'PrimitiveEntityContext') {\r\n            let obj = {\r\n                name: objName.text,\r\n                type: prefix.text,\r\n                values: JSON.parse(objValues.text)\r\n            }\r\n            this.objects[objName.text] = obj;\r\n        }\r\n\r\n        if (objValues.constructor.name === 'ArrContext') {\r\n            console.log(\"found array\");\r\n            let arrValues = objValues.text.slice(1, -1).split(',');\r\n            console.log(`${objName.text} = ${arrValues}`);\r\n\r\n            let arr = {\r\n                name: objName.text,\r\n                type: \"array\",\r\n                values: arrValues.map(value => {\r\n                    console.log(\"trying to map: \", value);\r\n                    if (this.objects[value]) {\r\n                        console.log(\"found object: \", this.objects[value]);\r\n                        return this.objects[value].values;\r\n                    }\r\n                    if (this.arrays[value]) {\r\n                        console.log(\"found array: \", this.arrays[value]);\r\n                        return this.arrays[value].values;\r\n                    }\r\n                    if (this.relations[value]) {\r\n                        console.log(\"found relation: \", this.relations[value]);\r\n                        return this.relations[value].values;\r\n                    }\r\n                    if (value.includes('\"')) {\r\n                        console.log(\"found string: \", value);\r\n                        return value.slice(1, -1);\r\n                    }\r\n                    if (value.includes(\"\")) {\r\n                        return value;\r\n                    }\r\n                    console.log(\"found primitive: \", value);\r\n                    return value;\r\n                })\r\n            }\r\n            this.arrays[objName.text] = arr;\r\n        }\r\n\r\n    }\r\n    visitIfThenDoStmt(ctx: IfThenDoStmtContext) {\r\n        let ifIndex = ctx.children.findIndex(child => child.text === 'IF');\r\n        let doIndex = ctx.children.findIndex(child => child.text === 'DO');\r\n\r\n        let ifSubject = ctx.children[ifIndex + 1];\r\n        let ifFieldReference = ctx.children[ifIndex + 2].text.substring(1);\r\n        //==========================================================\r\n        let operatorNumberPair = ctx.children[3];\r\n        let operator = operatorNumberPair.children[0].text;\r\n        let number = operatorNumberPair.children[1].text;\r\n\r\n        //==========================================================\r\n        let doSubject = ctx.children[doIndex + 1];\r\n        // let doFieldReference = ctx.children[doIndex + 2].text.substring(1);\r\n\r\n        let subjects = [ifSubject, doSubject];\r\n\r\n\r\n        subjects?.forEach(subject => {\r\n            if (subject) {\r\n                let line = this?.getLineNumber(subject);\r\n                if (!this.checkIfValueIsDefined(subject)) {\r\n                    this.defineErrors.push(`at line ${line} \"${subject.text}\" is not defined`);\r\n                    return;\r\n                }\r\n            }\r\n            // return;\r\n        });\r\n\r\n        let ifSubjectObject = this?.objects[ifSubject?.text];\r\n        let doSubjectObject = this?.objects[doSubject?.text];\r\n\r\n        if (eval(ifSubjectObject?.values[ifFieldReference] + operator + number)) {\r\n            let desc: string;\r\n            for (const relation of Object.entries(this.relations)) {\r\n                if (ifSubjectObject.values.entity === relation[1].entity1) {\r\n                    desc = relation[1].values.name\r\n                }\r\n            }\r\n            let invocation = {\r\n                invoker: ifSubjectObject.values.entity,\r\n                activity: ifSubjectObject.name,\r\n                event: doSubjectObject.values.name,\r\n                eventGoal: doSubjectObject.values.goal,\r\n                eventLocation: doSubjectObject.values.location,\r\n                invokerDesc: desc,\r\n            }\r\n            this.alertInvocations.push(invocation);\r\n        }\r\n\r\n    }\r\n    visitRelationStmt(ctx: RelationStmtContext) {\r\n        let prefix = ctx?.children[0];\r\n        let relationENT1 = ctx?.children[1];\r\n        // let relationType = ctx?.children[2];\r\n        let relationENT2 = ctx?.children[3];\r\n        let relationName = ctx?.children[5];\r\n        let relationValue = ctx?.children[7];\r\n\r\n        let variables = [relationENT1, relationENT2];\r\n        variables.forEach(variable => {\r\n            if (variable) {\r\n                let line = this?.getLineNumber(variable);\r\n                if (!this.checkIfValueIsDefined(variable)) {\r\n                    this.defineErrors.push(`at line ${line} \"${variable.text}\" is not defined`);\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n\r\n        let relation = {\r\n            name: relationName?.text,\r\n            type: prefix?.text,\r\n            entity1: relationENT1?.text,\r\n            entity2: relationENT2?.text,\r\n            values: JSON.parse(relationValue?.text)\r\n        }\r\n        this.relations[relationName.text] = relation;\r\n    }\r\n    visitPrintStmt(ctx: PrintStmtContext) {\r\n        let printValue = ctx?.children[1];\r\n        console.log(\"printing: \", printValue?.text);\r\n\r\n        if (!this.checkIfValueIsDefined(printValue)) {\r\n            console.log(\"print value is not defined\");\r\n            if (printValue) {\r\n                console.log(`checking if val is string: ${printValue.text}`);\r\n                if (printValue.text[0] === '\"') {\r\n                    console.log(\"print value is string\");\r\n                    this.setPrintables({\r\n                        type: \"string\",\r\n                        value: printValue.text.slice(1, -1)\r\n                    });\r\n                } else {\r\n                    this.defineErrors.push(`at line ${this?.getLineNumber(printValue)} \"${printValue.text}\" is not defined`);\r\n                    return;\r\n                }\r\n\r\n            }\r\n            return\r\n        }\r\n\r\n        if (this.objects[printValue.text]) {\r\n            console.log(\"printing object: \", this.objects[printValue.text]);\r\n            this.setPrintables(this.objects[printValue.text]);\r\n        }\r\n        if (this.relations[printValue.text]) {\r\n            console.log(\"printing relation: \", this.relations[printValue.text]);\r\n            this.setPrintables(this.relations[printValue.text]);\r\n        }\r\n        if (this.arrays[printValue.text]) {\r\n            console.log(\"printing array: \", this.arrays[printValue.text]);\r\n            this.setPrintables(this.arrays[printValue.text]);\r\n        }\r\n\r\n    }\r\n    visitPrimitiveEntity(ctx: PrimitiveEntityContext) {\r\n        console.log(\"visiting primitive\")\r\n        console.log(ctx)\r\n    }\r\n\r\n\r\n\r\n    visitChildren(ctx) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n        if (ctx.children) {\r\n            return ctx.children.map(child => {\r\n                if (child.children && child.children.length !== 0) {\r\n                    return child.accept(this);\r\n                } else {\r\n                    return child.text;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getObjects() {\r\n        return this.objects;\r\n    }\r\n    getRelations() {\r\n        return this.relations;\r\n    }\r\n    getArrays() {\r\n        return this.arrays;\r\n    }\r\n    getAlertInvocations() {\r\n        return this.alertInvocations;\r\n    }\r\n    getPrintables() {\r\n        return this.printables;\r\n    }\r\n    getDefineErrors() {\r\n        return this.defineErrors;\r\n    }\r\n    setPrintables(printable) {\r\n        this.printables.push(printable);\r\n    }\r\n\r\n}","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n// ConvertTo-TS run at 2016-10-04T11:26:49.0828748-07:00\r\n\r\nimport * as assert from \"assert\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { Arrays } from \"./misc/Arrays\";\r\nimport { Override } from \"./Decorators\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { Interval } from \"./misc/Interval\";\r\n\r\nconst READ_BUFFER_SIZE: number = 1024;\r\nconst INITIAL_BUFFER_SIZE: number = 1024;\r\n\r\n/**\r\n * Vacuum all input from a {@link Reader}/{@link InputStream} and then treat it\r\n * like a `char[]` buffer. Can also pass in a {@link String} or\r\n * `char[]` to use.\r\n *\r\n * If you need encoding, pass in stream/reader with correct encoding.\r\n *\r\n * @deprecated as of 4.7, please use `CharStreams` interface.\r\n */\r\nexport class ANTLRInputStream implements CharStream {\r\n\t/** The data being scanned */\r\n\tprotected data: string;\r\n\r\n\t/** How many characters are actually in the buffer */\r\n\tprotected n: number;\r\n\r\n\t/** 0..n-1 index into string of next char */\r\n\tprotected p: number = 0;\r\n\r\n\t/** What is name or source of this char stream? */\r\n\tpublic name?: string;\r\n\r\n\t/** Copy data in string to a local char array */\r\n\tconstructor(input: string) {\r\n\t\tthis.data = input;\r\n\t\tthis.n = input.length;\r\n\t}\r\n\r\n\t/** Reset the stream so that it's in the same state it was\r\n\t *  when the object was created *except* the data array is not\r\n\t *  touched.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.p = 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic consume(): void {\r\n\t\tif (this.p >= this.n) {\r\n\t\t\tassert(this.LA(1) === IntStream.EOF);\r\n\t\t\tthrow new Error(\"cannot consume EOF\");\r\n\t\t}\r\n\r\n\t\t//System.out.println(\"prev p=\"+p+\", c=\"+(char)data[p]);\r\n\t\tif (this.p < this.n) {\r\n\t\t\tthis.p++;\r\n\t\t\t//System.out.println(\"p moves to \"+p+\" (c='\"+(char)data[p]+\"')\");\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic LA(i: number): number {\r\n\t\tif (i === 0) {\r\n\t\t\treturn 0; // undefined\r\n\t\t}\r\n\t\tif (i < 0) {\r\n\t\t\ti++; // e.g., translate LA(-1) to use offset i=0; then data[p+0-1]\r\n\t\t\tif ((this.p + i - 1) < 0) {\r\n\t\t\t\treturn IntStream.EOF; // invalid; no char before first char\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((this.p + i - 1) >= this.n) {\r\n\t\t\t//System.out.println(\"char LA(\"+i+\")=EOF; p=\"+p);\r\n\t\t\treturn IntStream.EOF;\r\n\t\t}\r\n\t\t//System.out.println(\"char LA(\"+i+\")=\"+(char)data[p+i-1]+\"; p=\"+p);\r\n\t\t//System.out.println(\"LA(\"+i+\"); p=\"+p+\" n=\"+n+\" data.length=\"+data.length);\r\n\t\treturn this.data.charCodeAt(this.p + i - 1);\r\n\t}\r\n\r\n\tpublic LT(i: number): number {\r\n\t\treturn this.LA(i);\r\n\t}\r\n\r\n\t/** Return the current input symbol index 0..n where n indicates the\r\n\t *  last symbol has been read.  The index is the index of char to\r\n\t *  be returned from LA(1).\r\n\t */\r\n\t@Override\r\n\tget index(): number {\r\n\t\treturn this.p;\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn this.n;\r\n\t}\r\n\r\n\t/** mark/release do nothing; we have entire buffer */\r\n\t@Override\r\n\tpublic mark(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic release(marker: number): void {\r\n\t\t// No default implementation since this stream buffers the entire input\r\n\t}\r\n\r\n\t/** consume() ahead until p==index; can't just set p=index as we must\r\n\t *  update line and charPositionInLine. If we seek backwards, just set p\r\n\t */\r\n\t@Override\r\n\tpublic seek(index: number): void {\r\n\t\tif (index <= this.p) {\r\n\t\t\tthis.p = index; // just jump; don't update stream state (line, ...)\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// seek forward, consume until p hits index or n (whichever comes first)\r\n\t\tindex = Math.min(index, this.n);\r\n\t\twhile (this.p < index) {\r\n\t\t\tthis.consume();\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getText(interval: Interval): string {\r\n\t\tlet start: number = interval.a;\r\n\t\tlet stop: number = interval.b;\r\n\t\tif (stop >= this.n) {\r\n\t\t\tstop = this.n - 1;\r\n\t\t}\r\n\t\tlet count: number = stop - start + 1;\r\n\t\tif (start >= this.n) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\t// System.err.println(\"data: \"+Arrays.toString(data)+\", n=\"+n+\r\n\t\t// \t\t\t\t   \", start=\"+start+\r\n\t\t// \t\t\t\t   \", stop=\"+stop);\r\n\t\treturn this.data.substr(start, count);\r\n\t}\r\n\r\n\t@Override\r\n\tget sourceName(): string {\r\n\t\tif (!this.name) {\r\n\t\t\treturn IntStream.UNKNOWN_SOURCE_NAME;\r\n\t\t}\r\n\t\treturn this.name;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString() { return this.data; }\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:49.2855056-07:00\r\n\r\nimport { DefaultErrorStrategy } from \"./DefaultErrorStrategy\";\r\nimport { Parser } from \"./Parser\";\r\nimport { InputMismatchException } from \"./InputMismatchException\";\r\nimport { Override } from \"./Decorators\";\r\nimport { ParseCancellationException } from \"./misc/ParseCancellationException\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Token } from \"./Token\";\r\n\r\n/**\r\n * This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\r\n * by immediately canceling the parse operation with a\r\n * {@link ParseCancellationException}. The implementation ensures that the\r\n * {@link ParserRuleContext#exception} field is set for all parse tree nodes\r\n * that were not completed prior to encountering the error.\r\n *\r\n * This error strategy is useful in the following scenarios.\r\n *\r\n * * **Two-stage parsing:** This error strategy allows the first\r\n *   stage of two-stage parsing to immediately terminate if an error is\r\n *   encountered, and immediately fall back to the second stage. In addition to\r\n *   avoiding wasted work by attempting to recover from errors here, the empty\r\n *   implementation of {@link BailErrorStrategy#sync} improves the performance of\r\n *   the first stage.\r\n * * **Silent validation:** When syntax errors are not being\r\n *   reported or logged, and the parse result is simply ignored if errors occur,\r\n *   the {@link BailErrorStrategy} avoids wasting work on recovering from errors\r\n *   when the result will be ignored either way.\r\n *\r\n * ```\r\n * myparser.errorHandler = new BailErrorStrategy();\r\n * ```\r\n *\r\n * @see Parser.errorHandler\r\n */\r\nexport class BailErrorStrategy extends DefaultErrorStrategy {\r\n\t/** Instead of recovering from exception `e`, re-throw it wrapped\r\n\t *  in a {@link ParseCancellationException} so it is not caught by the\r\n\t *  rule function catches.  Use {@link Exception#getCause()} to get the\r\n\t *  original {@link RecognitionException}.\r\n\t */\r\n\t@Override\r\n\tpublic recover(recognizer: Parser, e: RecognitionException): void {\r\n\t\tfor (let context: ParserRuleContext | undefined = recognizer.context; context; context = context.parent) {\r\n\t\t\tcontext.exception = e;\r\n\t\t}\r\n\r\n\t\tthrow new ParseCancellationException(e);\r\n\t}\r\n\r\n\t/** Make sure we don't attempt to recover inline; if the parser\r\n\t *  successfully recovers, it won't throw an exception.\r\n\t */\r\n\t@Override\r\n\tpublic recoverInline(recognizer: Parser): Token {\r\n\t\tlet e = new InputMismatchException(recognizer);\r\n\t\tfor (let context: ParserRuleContext | undefined = recognizer.context; context; context = context.parent) {\r\n\t\t\tcontext.exception = e;\r\n\t\t}\r\n\r\n\t\tthrow new ParseCancellationException(e);\r\n\t}\r\n\r\n\t/** Make sure we don't attempt to recover from problems in subrules. */\r\n\t@Override\r\n\tpublic sync(recognizer: Parser): void {\r\n\t\t// intentionally empty\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:49.6074365-07:00\r\n\r\nimport * as assert from \"assert\";\r\nimport { CommonToken } from \"./CommonToken\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Lexer } from \"./Lexer\";\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenSource } from \"./TokenSource\";\r\nimport { TokenStream } from \"./TokenStream\";\r\nimport { WritableToken } from \"./WritableToken\";\r\n\r\n/**\r\n * This implementation of {@link TokenStream} loads tokens from a\r\n * {@link TokenSource} on-demand, and places the tokens in a buffer to provide\r\n * access to any previous token by index.\r\n *\r\n * This token stream ignores the value of {@link Token#getChannel}. If your\r\n * parser requires the token stream filter tokens to only those on a particular\r\n * channel, such as {@link Token#DEFAULT_CHANNEL} or\r\n * {@link Token#HIDDEN_CHANNEL}, use a filtering token stream such a\r\n * {@link CommonTokenStream}.\r\n */\r\nexport class BufferedTokenStream implements TokenStream {\r\n\t/**\r\n\t * The {@link TokenSource} from which tokens for this stream are fetched.\r\n\t */\r\n\t@NotNull\r\n\tprivate _tokenSource: TokenSource;\r\n\r\n\t/**\r\n\t * A collection of all tokens fetched from the token source. The list is\r\n\t * considered a complete view of the input once {@link #fetchedEOF} is set\r\n\t * to `true`.\r\n\t */\r\n\tprotected tokens: Token[] = [];\r\n\r\n\t/**\r\n\t * The index into {@link #tokens} of the current token (next token to\r\n\t * {@link #consume}). {@link #tokens}`[`{@link #p}`]` should be\r\n\t * {@link #LT LT(1)}.\r\n\t *\r\n\t * This field is set to -1 when the stream is first constructed or when\r\n\t * {@link #setTokenSource} is called, indicating that the first token has\r\n\t * not yet been fetched from the token source. For additional information,\r\n\t * see the documentation of {@link IntStream} for a description of\r\n\t * Initializing Methods.\r\n\t */\r\n\tprotected p: number = -1;\r\n\r\n\t/**\r\n\t * Indicates whether the {@link Token#EOF} token has been fetched from\r\n\t * {@link #tokenSource} and added to {@link #tokens}. This field improves\r\n\t * performance for the following cases:\r\n\t *\r\n\t * * {@link #consume}: The lookahead check in {@link #consume} to prevent\r\n\t *   consuming the EOF symbol is optimized by checking the values of\r\n\t *   {@link #fetchedEOF} and {@link #p} instead of calling {@link #LA}.\r\n\t * * {@link #fetch}: The check to prevent adding multiple EOF symbols into\r\n\t *   {@link #tokens} is trivial with this field.\r\n\t */\r\n\tprotected fetchedEOF: boolean = false;\r\n\r\n\tconstructor(@NotNull tokenSource: TokenSource) {\r\n\t\tif (tokenSource == null) {\r\n\t\t\tthrow new Error(\"tokenSource cannot be null\");\r\n\t\t}\r\n\r\n\t\tthis._tokenSource = tokenSource;\r\n\t}\r\n\r\n\t@Override\r\n\tget tokenSource(): TokenSource {\r\n\t\treturn this._tokenSource;\r\n\t}\r\n\r\n\t/** Reset this token stream by setting its token source. */\r\n\tset tokenSource(tokenSource: TokenSource) {\r\n\t\tthis._tokenSource = tokenSource;\r\n\t\tthis.tokens.length = 0;\r\n\t\tthis.p = -1;\r\n\t\tthis.fetchedEOF = false;\r\n\t}\r\n\r\n\t@Override\r\n\tget index(): number {\r\n\t\treturn this.p;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic mark(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic release(marker: number): void {\r\n\t\t// no resources to release\r\n\t}\r\n\r\n\t@Override\r\n\tpublic seek(index: number): void {\r\n\t\tthis.lazyInit();\r\n\t\tthis.p = this.adjustSeekIndex(index);\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn this.tokens.length;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic consume(): void {\r\n\t\tlet skipEofCheck: boolean;\r\n\t\tif (this.p >= 0) {\r\n\t\t\tif (this.fetchedEOF) {\r\n\t\t\t\t// the last token in tokens is EOF. skip check if p indexes any\r\n\t\t\t\t// fetched token except the last.\r\n\t\t\t\tskipEofCheck = this.p < this.tokens.length - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\r\n\t\t\t\tskipEofCheck = this.p < this.tokens.length;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// not yet initialized\r\n\t\t\tskipEofCheck = false;\r\n\t\t}\r\n\r\n\t\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\r\n\t\t\tthrow new Error(\"cannot consume EOF\");\r\n\t\t}\r\n\r\n\t\tif (this.sync(this.p + 1)) {\r\n\t\t\tthis.p = this.adjustSeekIndex(this.p + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Make sure index `i` in tokens has a token.\r\n\t *\r\n\t * @returns `true` if a token is located at index `i`, otherwise\r\n\t *    `false`.\r\n\t * @see #get(int i)\r\n\t */\r\n\tprotected sync(i: number): boolean {\r\n\t\tassert(i >= 0);\r\n\t\tlet n: number = i - this.tokens.length + 1; // how many more elements we need?\r\n\t\t//System.out.println(\"sync(\"+i+\") needs \"+n);\r\n\t\tif (n > 0) {\r\n\t\t\tlet fetched: number = this.fetch(n);\r\n\t\t\treturn fetched >= n;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/** Add `n` elements to buffer.\r\n\t *\r\n\t * @returns The actual number of elements added to the buffer.\r\n\t */\r\n\tprotected fetch(n: number): number {\r\n\t\tif (this.fetchedEOF) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet t: Token = this.tokenSource.nextToken();\r\n\t\t\tif (this.isWritableToken(t)) {\r\n\t\t\t\tt.tokenIndex = this.tokens.length;\r\n\t\t\t}\r\n\r\n\t\t\tthis.tokens.push(t);\r\n\t\t\tif (t.type === Token.EOF) {\r\n\t\t\t\tthis.fetchedEOF = true;\r\n\t\t\t\treturn i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn n;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic get(i: number): Token {\r\n\t\tif (i < 0 || i >= this.tokens.length) {\r\n\t\t\tthrow new RangeError(\"token index \" + i + \" out of range 0..\" + (this.tokens.length - 1));\r\n\t\t}\r\n\r\n\t\treturn this.tokens[i];\r\n\t}\r\n\r\n\t/** Get all tokens from start..stop inclusively. */\r\n\tpublic getRange(start: number, stop: number): Token[] {\r\n\t\tif (start < 0 || stop < 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tthis.lazyInit();\r\n\t\tlet subset: Token[] = new Array<Token>();\r\n\t\tif (stop >= this.tokens.length) {\r\n\t\t\tstop = this.tokens.length - 1;\r\n\t\t}\r\n\r\n\t\tfor (let i = start; i <= stop; i++) {\r\n\t\t\tlet t: Token = this.tokens[i];\r\n\t\t\tif (t.type === Token.EOF) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tsubset.push(t);\r\n\t\t}\r\n\r\n\t\treturn subset;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic LA(i: number): number {\r\n\t\tlet token = this.LT(i);\r\n\t\tif (!token) {\r\n\t\t\treturn Token.INVALID_TYPE;\r\n\t\t}\r\n\r\n\t\treturn token.type;\r\n\t}\r\n\r\n\tprotected tryLB(k: number): Token | undefined {\r\n\t\tif ((this.p - k) < 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn this.tokens[this.p - k];\r\n\t}\r\n\r\n\t@NotNull\r\n\t@Override\r\n\tpublic LT(k: number): Token {\r\n\t\tlet result = this.tryLT(k);\r\n\t\tif (result === undefined) {\r\n\t\t\tthrow new RangeError(\"requested lookback index out of range\");\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic tryLT(k: number): Token | undefined {\r\n\t\tthis.lazyInit();\r\n\t\tif (k === 0) {\r\n\t\t\tthrow new RangeError(\"0 is not a valid lookahead index\");\r\n\t\t}\r\n\r\n\t\tif (k < 0) {\r\n\t\t\treturn this.tryLB(-k);\r\n\t\t}\r\n\r\n\t\tlet i: number = this.p + k - 1;\r\n\t\tthis.sync(i);\r\n\t\tif (i >= this.tokens.length) {\r\n\t\t\t// return EOF token\r\n\t\t\t// EOF must be last token\r\n\t\t\treturn this.tokens[this.tokens.length - 1];\r\n\t\t}\r\n\r\n\t\t//\t\tif ( i>range ) range = i;\r\n\t\treturn this.tokens[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Allowed derived classes to modify the behavior of operations which change\r\n\t * the current stream position by adjusting the target token index of a seek\r\n\t * operation. The default implementation simply returns `i`. If an\r\n\t * exception is thrown in this method, the current stream index should not be\r\n\t * changed.\r\n\t *\r\n\t * For example, {@link CommonTokenStream} overrides this method to ensure that\r\n\t * the seek target is always an on-channel token.\r\n\t *\r\n\t * @param i The target token index.\r\n\t * @returns The adjusted target token index.\r\n\t */\r\n\tprotected adjustSeekIndex(i: number): number {\r\n\t\treturn i;\r\n\t}\r\n\r\n\tprotected lazyInit(): void {\r\n\t\tif (this.p === -1) {\r\n\t\t\tthis.setup();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setup(): void {\r\n\t\tthis.sync(0);\r\n\t\tthis.p = this.adjustSeekIndex(0);\r\n\t}\r\n\r\n\tpublic getTokens(): Token[];\r\n\r\n\tpublic getTokens(start: number, stop: number): Token[];\r\n\r\n\tpublic getTokens(start: number, stop: number, types: Set<number>): Token[];\r\n\r\n\tpublic getTokens(start: number, stop: number, ttype: number): Token[];\r\n\r\n\t/** Given a start and stop index, return a `List` of all tokens in\r\n\t *  the token type `BitSet`.  Return an empty array if no tokens were found.  This\r\n\t *  method looks at both on and off channel tokens.\r\n\t */\r\n\tpublic getTokens(start?: number, stop?: number, types?: Set<number> | number): Token[] {\r\n\t\tthis.lazyInit();\r\n\r\n\t\tif (start === undefined) {\r\n\t\t\tassert(stop === undefined && types === undefined);\r\n\t\t\treturn this.tokens;\r\n\t\t} else if (stop === undefined) {\r\n\t\t\tstop = this.tokens.length - 1;\r\n\t\t}\r\n\r\n\t\tif (start < 0 || stop >= this.tokens.length || stop < 0 || start >= this.tokens.length) {\r\n\t\t\tthrow new RangeError(\"start \" + start + \" or stop \" + stop + \" not in 0..\" + (this.tokens.length - 1));\r\n\t\t}\r\n\r\n\t\tif (start > stop) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tif (types === undefined) {\r\n\t\t\treturn this.tokens.slice(start, stop + 1);\r\n\t\t} else if (typeof types === \"number\") {\r\n\t\t\ttypes = new Set<number>().add(types);\r\n\t\t}\r\n\r\n\t\tlet typesSet = types;\r\n\r\n\t\t// list = tokens[start:stop]:{T t, t.type in types}\r\n\t\tlet filteredTokens: Token[] = this.tokens.slice(start, stop + 1);\r\n\t\tfilteredTokens = filteredTokens.filter((value) => typesSet.has(value.type));\r\n\r\n\t\treturn filteredTokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a starting index, return the index of the next token on channel.\r\n\t * Return `i` if `tokens[i]` is on channel. Return the index of\r\n\t * the EOF token if there are no tokens on channel between `i` and\r\n\t * EOF.\r\n\t */\r\n\tprotected nextTokenOnChannel(i: number, channel: number): number {\r\n\t\tthis.sync(i);\r\n\t\tif (i >= this.size) {\r\n\t\t\treturn this.size - 1;\r\n\t\t}\r\n\r\n\t\tlet token: Token = this.tokens[i];\r\n\t\twhile (token.channel !== channel) {\r\n\t\t\tif (token.type === Token.EOF) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\t\t\tthis.sync(i);\r\n\t\t\ttoken = this.tokens[i];\r\n\t\t}\r\n\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a starting index, return the index of the previous token on\r\n\t * channel. Return `i` if `tokens[i]` is on channel. Return -1\r\n\t * if there are no tokens on channel between `i` and 0.\r\n\t *\r\n\t * If `i` specifies an index at or after the EOF token, the EOF token\r\n\t * index is returned. This is due to the fact that the EOF token is treated\r\n\t * as though it were on every channel.\r\n\t */\r\n\tprotected previousTokenOnChannel(i: number, channel: number): number {\r\n\t\tthis.sync(i);\r\n\t\tif (i >= this.size) {\r\n\t\t\t// the EOF token is on every channel\r\n\t\t\treturn this.size - 1;\r\n\t\t}\r\n\r\n\t\twhile (i >= 0) {\r\n\t\t\tlet token: Token = this.tokens[i];\r\n\t\t\tif (token.type === Token.EOF || token.channel === channel) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\r\n\t\t\ti--;\r\n\t\t}\r\n\r\n\t\treturn i;\r\n\t}\r\n\r\n\t/** Collect all tokens on specified channel to the right of\r\n\t *  the current token up until we see a token on {@link Lexer#DEFAULT_TOKEN_CHANNEL} or\r\n\t *  EOF. If `channel` is `-1`, find any non default channel token.\r\n\t */\r\n\tpublic getHiddenTokensToRight(tokenIndex: number, channel: number = -1): Token[] {\r\n\t\tthis.lazyInit();\r\n\t\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\r\n\t\t\tthrow new RangeError(tokenIndex + \" not in 0..\" + (this.tokens.length - 1));\r\n\t\t}\r\n\r\n\t\tlet nextOnChannel: number = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\r\n\t\tlet to: number;\r\n\t\tlet from: number = tokenIndex + 1;\r\n\t\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\r\n\t\tif (nextOnChannel === -1) {\r\n\t\t\tto = this.size - 1;\r\n\t\t} else {\r\n\t\t\tto = nextOnChannel;\r\n\t\t}\r\n\r\n\t\treturn this.filterForChannel(from, to, channel);\r\n\t}\r\n\r\n\t/** Collect all tokens on specified channel to the left of\r\n\t *  the current token up until we see a token on {@link Lexer#DEFAULT_TOKEN_CHANNEL}.\r\n\t *  If `channel` is `-1`, find any non default channel token.\r\n\t */\r\n\tpublic getHiddenTokensToLeft(tokenIndex: number, channel: number = -1): Token[] {\r\n\t\tthis.lazyInit();\r\n\t\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\r\n\t\t\tthrow new RangeError(tokenIndex + \" not in 0..\" + (this.tokens.length - 1));\r\n\t\t}\r\n\r\n\t\tif (tokenIndex === 0) {\r\n\t\t\t// obviously no tokens can appear before the first token\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet prevOnChannel: number = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\r\n\t\tif (prevOnChannel === tokenIndex - 1) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// if none onchannel to left, prevOnChannel=-1 then from=0\r\n\t\tlet from: number = prevOnChannel + 1;\r\n\t\tlet to: number = tokenIndex - 1;\r\n\r\n\t\treturn this.filterForChannel(from, to, channel);\r\n\t}\r\n\r\n\tprotected filterForChannel(from: number, to: number, channel: number): Token[] {\r\n\t\tlet hidden: Token[] = new Array<Token>();\r\n\t\tfor (let i = from; i <= to; i++) {\r\n\t\t\tlet t: Token = this.tokens[i];\r\n\t\t\tif (channel === -1) {\r\n\t\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\r\n\t\t\t\t\thidden.push(t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (t.channel === channel) {\r\n\t\t\t\t\thidden.push(t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn hidden;\r\n\t}\r\n\r\n\t@Override\r\n\tget sourceName(): string {\r\n\t\treturn this.tokenSource.sourceName;\r\n\t}\r\n\r\n\t/** Get the text of all tokens in this buffer. */\r\n\tpublic getText(): string;\r\n\tpublic getText(interval: Interval): string;\r\n\tpublic getText(context: RuleContext): string;\r\n\t@NotNull\r\n\t@Override\r\n\tpublic getText(interval?: Interval | RuleContext): string {\r\n\t\tif (interval === undefined) {\r\n\t\t\tinterval = Interval.of(0, this.size - 1);\r\n\t\t} else if (!(interval instanceof Interval)) {\r\n\t\t\t// Note: the more obvious check for 'instanceof RuleContext' results in a circular dependency problem\r\n\t\t\tinterval = interval.sourceInterval;\r\n\t\t}\r\n\r\n\t\tlet start: number = interval.a;\r\n\t\tlet stop: number = interval.b;\r\n\t\tif (start < 0 || stop < 0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tthis.fill();\r\n\t\tif (stop >= this.tokens.length) {\r\n\t\t\tstop = this.tokens.length - 1;\r\n\t\t}\r\n\r\n\t\tlet buf: string = \"\";\r\n\t\tfor (let i = start; i <= stop; i++) {\r\n\t\t\tlet t: Token = this.tokens[i];\r\n\t\t\tif (t.type === Token.EOF) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tbuf += t.text;\r\n\t\t}\r\n\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\t@NotNull\r\n\t@Override\r\n\tpublic getTextFromRange(start: any, stop: any): string {\r\n\t\tif (this.isToken(start) && this.isToken(stop)) {\r\n\t\t\treturn this.getText(Interval.of(start.tokenIndex, stop.tokenIndex));\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/** Get all tokens from lexer until EOF. */\r\n\tpublic fill(): void {\r\n\t\tthis.lazyInit();\r\n\t\tconst blockSize: number = 1000;\r\n\t\twhile (true) {\r\n\t\t\tlet fetched: number = this.fetch(blockSize);\r\n\t\t\tif (fetched < blockSize) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO: Figure out a way to make this more flexible?\r\n\tprivate isWritableToken(t: Token): t is WritableToken {\r\n\t\treturn t instanceof CommonToken;\r\n\t}\r\n\r\n\t// TODO: Figure out a way to make this more flexible?\r\n\tprivate isToken(t: any): t is Token {\r\n\t\treturn t instanceof CommonToken;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport { CodePointBuffer } from \"./CodePointBuffer\";\r\nimport { CodePointCharStream } from \"./CodePointCharStream\";\r\nimport { IntStream } from \"./IntStream\";\r\n\r\n// const DEFAULT_BUFFER_SIZE: number = 4096;\r\n\r\n/** This class represents the primary interface for creating {@link CharStream}s\r\n *  from a variety of sources as of 4.7.  The motivation was to support\r\n *  Unicode code points > U+FFFF.  {@link ANTLRInputStream} and\r\n *  {@link ANTLRFileStream} are now deprecated in favor of the streams created\r\n *  by this interface.\r\n *\r\n *  DEPRECATED: {@code new ANTLRFileStream(\"myinputfile\")}\r\n *  NEW:        {@code CharStreams.fromFileName(\"myinputfile\")}\r\n *\r\n *  WARNING: If you use both the deprecated and the new streams, you will see\r\n *  a nontrivial performance degradation. This speed hit is because the\r\n *  {@link Lexer}'s internal code goes from a monomorphic to megamorphic\r\n *  dynamic dispatch to get characters from the input stream. Java's\r\n *  on-the-fly compiler (JIT) is unable to perform the same optimizations\r\n *  so stick with either the old or the new streams, if performance is\r\n *  a primary concern. See the extreme debugging and spelunking\r\n *  needed to identify this issue in our timing rig:\r\n *\r\n *      https://github.com/antlr/antlr4/pull/1781\r\n *\r\n *  The ANTLR character streams still buffer all the input when you create\r\n *  the stream, as they have done for ~20 years. If you need unbuffered\r\n *  access, please note that it becomes challenging to create\r\n *  parse trees. The parse tree has to point to tokens which will either\r\n *  point into a stale location in an unbuffered stream or you have to copy\r\n *  the characters out of the buffer into the token. That defeats the purpose\r\n *  of unbuffered input. Per the ANTLR book, unbuffered streams are primarily\r\n *  useful for processing infinite streams *during the parse.*\r\n *\r\n *  The new streams also use 8-bit buffers when possible so this new\r\n *  interface supports character streams that use half as much memory\r\n *  as the old {@link ANTLRFileStream}, which assumed 16-bit characters.\r\n *\r\n *  A big shout out to Ben Hamilton (github bhamiltoncx) for his superhuman\r\n *  efforts across all targets to get true Unicode 3.1 support for U+10FFFF.\r\n *\r\n *  @since 4.7\r\n */\r\nexport namespace CharStreams {\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given a path to a UTF-8\r\n\t//  * encoded file on disk.\r\n\t//  *\r\n\t//  * Reads the entire contents of the file into the result before returning.\r\n\t//  */\r\n\t// export function fromFile(file: File): CharStream;\r\n\t// export function fromFile(file: File, charset: Charset): CharStream;\r\n\t// export function fromFile(file: File, charset?: Charset): CharStream {\r\n\t// \tif (charset === undefined) {\r\n\t// \t\tcharset = Charset.forName(\"UTF-8\");\r\n\t// \t}\r\n\r\n\t// \tlet size: number = file.length();\r\n\t// \treturn fromStream(new FileInputStream(file), charset, file.toString(), size);\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given a string containing a\r\n\t//  * path to a UTF-8 file on disk.\r\n\t//  *\r\n\t//  * Reads the entire contents of the file into the result before returning.\r\n\t//  */\r\n\t// export function fromFileName(fileName: string): CharStream;\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given a string containing a\r\n\t//  * path to a file on disk and the charset of the bytes\r\n\t//  * contained in the file.\r\n\t//  *\r\n\t//  * Reads the entire contents of the file into the result before returning.\r\n\t//  */\r\n\t// export function fromFileName(fileName: string, charset: Charset): CharStream;\r\n\t// export function fromFileName(fileName: string, charset?: Charset): CharStream {\r\n\t// \tif (charset === undefined) {\r\n\t// \t\tcharset = Charset.forName(\"UTF-8\");\r\n\t// \t}\r\n\r\n\t// \treturn fromFile(new File(fileName), charset);\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given an opened {@link InputStream}\r\n\t//  * containing UTF-8 bytes.\r\n\t//  *\r\n\t//  * Reads the entire contents of the {@code InputStream} into\r\n\t//  * the result before returning, then closes the {@code InputStream}.\r\n\t//  */\r\n\t// export function fromStream(is: InputStream): CharStream;\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given an opened {@link InputStream} and the\r\n\t//  * charset of the bytes contained in the stream.\r\n\t//  *\r\n\t//  * Reads the entire contents of the {@code InputStream} into\r\n\t//  * the result before returning, then closes the {@code InputStream}.\r\n\t//  */\r\n\t// export function fromStream(is: InputStream, charset: Charset): CharStream;\r\n\r\n\t// export function fromStream(is: InputStream, charset: Charset, sourceName: string, inputSize: number): CharStream;\r\n\t// export function fromStream(is: InputStream, charset?: Charset, sourceName?: string, inputSize?: number): CharStream {\r\n\t// \tif (charset === undefined) {\r\n\t// \t\tcharset = Charset.forName(\"UTF-8\");\r\n\t// \t}\r\n\r\n\t// \tif (sourceName === undefined) {\r\n\t// \t\tsourceName = IntStream.UNKNOWN_SOURCE_NAME;\r\n\t// \t}\r\n\r\n\t// \tif (inputSize === undefined) {\r\n\t// \t\tinputSize = -1;\r\n\t// \t}\r\n\r\n\t// \treturn fromChannel(\r\n\t// \t\tChannels.newChannel(is),\r\n\t// \t\tcharset,\r\n\t// \t\tDEFAULT_BUFFER_SIZE,\r\n\t// \t\tCodingErrorAction.REPLACE,\r\n\t// \t\tsourceName,\r\n\t// \t\tinputSize);\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given an opened {@link ReadableByteChannel}\r\n\t//  * containing UTF-8 bytes.\r\n\t//  *\r\n\t//  * Reads the entire contents of the {@code channel} into\r\n\t//  * the result before returning, then closes the {@code channel}.\r\n\t//  */\r\n\t// export function fromChannel(channel: ReadableByteChannel): CharStream;\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given an opened {@link ReadableByteChannel} and the\r\n\t//  * charset of the bytes contained in the channel.\r\n\t//  *\r\n\t//  * Reads the entire contents of the {@code channel} into\r\n\t//  * the result before returning, then closes the {@code channel}.\r\n\t//  */\r\n\t// export function fromChannel(channel: ReadableByteChannel, charset: Charset): CharStream;\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given an opened {@link ReadableByteChannel}\r\n\t//  * containing UTF-8 bytes.\r\n\t//  *\r\n\t//  * Reads the entire contents of the {@code channel} into\r\n\t//  * the result before returning, then closes the {@code channel}.\r\n\t//  */\r\n\t// export function fromChannel(\r\n\t// \tchannel: ReadableByteChannel,\r\n\t// \tcharset: Charset,\r\n\t// \tbufferSize: number,\r\n\t// \tdecodingErrorAction: CodingErrorAction,\r\n\t// \tsourceName: string): CodePointCharStream;\r\n\r\n\t// export function fromChannel(\r\n\t// \tchannel: ReadableByteChannel,\r\n\t// \tcharset: Charset,\r\n\t// \tbufferSize: number,\r\n\t// \tdecodingErrorAction: CodingErrorAction,\r\n\t// \tsourceName: string,\r\n\t// \tinputSize: number): CodePointCharStream;\r\n\t// export function fromChannel(\r\n\t// \tchannel: ReadableByteChannel,\r\n\t// \tcharset?: Charset,\r\n\t// \tbufferSize?: number,\r\n\t// \tdecodingErrorAction?: CodingErrorAction,\r\n\t// \tsourceName?: string,\r\n\t// \tinputSize?: number): CodePointCharStream\r\n\t// {\r\n\t// \tif (charset === undefined) {\r\n\t// \t\tcharset = Charset.forName(\"UTF-8\");\r\n\t// \t}\r\n\r\n\t// \tif (bufferSize === undefined) {\r\n\t// \t\tbufferSize = DEFAULT_BUFFER_SIZE;\r\n\t// \t}\r\n\r\n\t// \tif (decodingErrorAction === undefined) {\r\n\t// \t\tdecodingErrorAction = CodingErrorAction.REPLACE;\r\n\t// \t}\r\n\r\n\t// \tif (sourceName === undefined || sourceName.length === 0) {\r\n\t// \t\tsourceName = IntStream.UNKNOWN_SOURCE_NAME;\r\n\t// \t}\r\n\r\n\t// \tif (inputSize === undefined) {\r\n\t// \t\tinputSize = -1;\r\n\t// \t}\r\n\r\n\t// \tlet codePointBuffer: CodePointBuffer = bufferFromChannel(channel, charset, bufferSize, decodingErrorAction, inputSize);\r\n\t// \treturn CodePointCharStream.fromBuffer(codePointBuffer, sourceName);\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given a {@link Reader}. Closes\r\n\t//  * the reader before returning.\r\n\t//  */\r\n\t// export function fromReader(r: Reader): CodePointCharStream;\r\n\r\n\t// /**\r\n\t//  * Creates a {@link CharStream} given a {@link Reader} and its\r\n\t//  * source name. Closes the reader before returning.\r\n\t//  */\r\n\t// export function fromReader(r: Reader, sourceName: string): CodePointCharStream;\r\n\t// export function fromReader(r: Reader, sourceName?: string): CodePointCharStream {\r\n\t// \tif (sourceName === undefined) {\r\n\t// \t\tsourceName = IntStream.UNKNOWN_SOURCE_NAME;\r\n\t// \t}\r\n\r\n\t// \ttry {\r\n\t// \t\tlet codePointBufferBuilder: CodePointBuffer.Builder = CodePointBuffer.builder(DEFAULT_BUFFER_SIZE);\r\n\t// \t\tlet charBuffer: CharBuffer = CharBuffer.allocate(DEFAULT_BUFFER_SIZE);\r\n\t// \t\twhile ((r.read(charBuffer)) !== -1) {\r\n\t// \t\t\tcharBuffer.flip();\r\n\t// \t\t\tcodePointBufferBuilder.append(charBuffer);\r\n\t// \t\t\tcharBuffer.compact();\r\n\t// \t\t}\r\n\r\n\t// \t\treturn CodePointCharStream.fromBuffer(codePointBufferBuilder.build(), sourceName);\r\n\t// \t} finally {\r\n\t// \t\tr.close();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * Creates a {@link CharStream} given a {@link String}.\r\n\t */\r\n\texport function fromString(s: string): CodePointCharStream;\r\n\r\n\t/**\r\n\t * Creates a {@link CharStream} given a {@link String} and the {@code sourceName}\r\n\t * from which it came.\r\n\t */\r\n\texport function fromString(s: string, sourceName: string): CodePointCharStream;\r\n\texport function fromString(s: string, sourceName?: string): CodePointCharStream {\r\n\t\tif (sourceName === undefined || sourceName.length === 0) {\r\n\t\t\tsourceName = IntStream.UNKNOWN_SOURCE_NAME;\r\n\t\t}\r\n\r\n\t\t// Initial guess assumes no code points > U+FFFF: one code\r\n\t\t// point for each code unit in the string\r\n\t\tlet codePointBufferBuilder: CodePointBuffer.Builder = CodePointBuffer.builder(s.length);\r\n\r\n\t\t// TODO: CharBuffer.wrap(String) rightfully returns a read-only buffer\r\n\t\t// which doesn't expose its array, so we make a copy.\r\n\t\tlet cb: Uint16Array = new Uint16Array(s.length);\r\n\t\tfor (let i = 0; i < s.length; i++) {\r\n\t\t\tcb[i] = s.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\tcodePointBufferBuilder.append(cb);\r\n\t\treturn CodePointCharStream.fromBuffer(codePointBufferBuilder.build(), sourceName);\r\n\t}\r\n\r\n\t// export function bufferFromChannel(\r\n\t// \tchannel: ReadableByteChannel,\r\n\t// \tcharset: Charset,\r\n\t// \tbufferSize: number,\r\n\t// \tdecodingErrorAction: CodingErrorAction,\r\n\t// \tinputSize: number): CodePointBuffer {\r\n\t// \ttry {\r\n\t// \t\tlet utf8BytesIn: Uint8Array = new Uint8Array(bufferSize);\r\n\t// \t\tlet utf16CodeUnitsOut: Uint16Array = new Uint16Array(bufferSize);\r\n\t// \t\tif (inputSize === -1) {\r\n\t// \t\t\tinputSize = bufferSize;\r\n\t// \t\t} else if (inputSize > Integer.MAX_VALUE) {\r\n\t// \t\t\t// ByteBuffer et al don't support long sizes\r\n\t// \t\t\tthrow new RangeError(`inputSize ${inputSize} larger than max ${Integer.MAX_VALUE}`);\r\n\t// \t\t}\r\n\r\n\t// \t\tlet codePointBufferBuilder: CodePointBuffer.Builder = CodePointBuffer.builder(inputSize);\r\n\t// \t\tlet decoder: CharsetDecoder = charset\r\n\t// \t\t\t\t.newDecoder()\r\n\t// \t\t\t\t.onMalformedInput(decodingErrorAction)\r\n\t// \t\t\t\t.onUnmappableCharacter(decodingErrorAction);\r\n\r\n\t// \t\tlet endOfInput: boolean = false;\r\n\t// \t\twhile (!endOfInput) {\r\n\t// \t\t\tlet bytesRead: number = channel.read(utf8BytesIn);\r\n\t// \t\t\tendOfInput = (bytesRead === -1);\r\n\t// \t\t\tutf8BytesIn.flip();\r\n\t// \t\t\tlet result: CoderResult = decoder.decode(\r\n\t// \t\t\t\tutf8BytesIn,\r\n\t// \t\t\t\tutf16CodeUnitsOut,\r\n\t// \t\t\t\tendOfInput);\r\n\t// \t\t\tif (result.isError() && decodingErrorAction === CodingErrorAction.REPORT) {\r\n\t// \t\t\t\tresult.throwException();\r\n\t// \t\t\t}\r\n\r\n\t// \t\t\tutf16CodeUnitsOut.flip();\r\n\t// \t\t\tcodePointBufferBuilder.append(utf16CodeUnitsOut);\r\n\t// \t\t\tutf8BytesIn.compact();\r\n\t// \t\t\tutf16CodeUnitsOut.compact();\r\n\t// \t\t}\r\n\t// \t\t// Handle any bytes at the end of the file which need to\r\n\t// \t\t// be represented as errors or substitution characters.\r\n\t// \t\tlet flushResult: CoderResult = decoder.flush(utf16CodeUnitsOut);\r\n\t// \t\tif (flushResult.isError() && decodingErrorAction === CodingErrorAction.REPORT) {\r\n\t// \t\t\tflushResult.throwException();\r\n\t// \t\t}\r\n\r\n\t// \t\tutf16CodeUnitsOut.flip();\r\n\t// \t\tcodePointBufferBuilder.append(utf16CodeUnitsOut);\r\n\r\n\t// \t\treturn codePointBufferBuilder.build();\r\n\t// \t}\r\n\t// \tfinally {\r\n\t// \t\tchannel.close();\r\n\t// \t}\r\n\t// }\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport * as assert from \"assert\";\r\nimport * as Character from \"./misc/Character\";\r\n\r\n/**\r\n * Wrapper for `Uint8Array` / `Uint16Array` / `Int32Array`.\r\n */\r\nexport class CodePointBuffer {\r\n\tprivate readonly buffer: Uint8Array | Uint16Array | Int32Array;\r\n\tprivate _position: number;\r\n\tprivate _size: number;\r\n\r\n\tconstructor(buffer: Uint8Array | Uint16Array | Int32Array, size: number) {\r\n\t\tthis.buffer = buffer;\r\n\t\tthis._position = 0;\r\n\t\tthis._size = size;\r\n\t}\r\n\r\n\tpublic static withArray(buffer: Uint8Array | Uint16Array | Int32Array): CodePointBuffer {\r\n\t\treturn new CodePointBuffer(buffer, buffer.length);\r\n\t}\r\n\r\n\tpublic get position(): number {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic set position(newPosition: number) {\r\n\t\tif (newPosition < 0 || newPosition > this._size) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\tthis._position = newPosition;\r\n\t}\r\n\r\n\tpublic get remaining(): number {\r\n\t\treturn this._size - this.position;\r\n\t}\r\n\r\n\tpublic get(offset: number): number {\r\n\t\treturn this.buffer[offset];\r\n\t}\r\n\r\n\tpublic array(): Uint8Array | Uint16Array | Int32Array {\r\n\t\treturn this.buffer.slice(0, this._size);\r\n\t}\r\n\r\n\tpublic static builder(initialBufferSize: number): CodePointBuffer.Builder {\r\n\t\treturn new CodePointBuffer.Builder(initialBufferSize);\r\n\t}\r\n}\r\n\r\nexport namespace CodePointBuffer {\r\n\tconst enum Type {\r\n\t\tBYTE,\r\n\t\tCHAR,\r\n\t\tINT,\r\n\t}\r\n\r\n\texport class Builder {\r\n\t\tprivate type: Type;\r\n\t\tprivate buffer: Uint8Array | Uint16Array | Int32Array;\r\n\t\tprivate prevHighSurrogate: number;\r\n\t\tprivate position: number;\r\n\r\n\t\tconstructor(initialBufferSize: number) {\r\n\t\t\tthis.type = Type.BYTE;\r\n\t\t\tthis.buffer = new Uint8Array(initialBufferSize);\r\n\t\t\tthis.prevHighSurrogate = -1;\r\n\t\t\tthis.position = 0;\r\n\t\t}\r\n\r\n\t\tpublic build(): CodePointBuffer {\r\n\t\t\treturn new CodePointBuffer(this.buffer, this.position);\r\n\t\t}\r\n\r\n\t\tprivate static roundUpToNextPowerOfTwo(i: number): number {\r\n\t\t\tlet nextPowerOfTwo: number = 32 - Math.clz32(i - 1);\r\n\t\t\treturn Math.pow(2, nextPowerOfTwo);\r\n\t\t}\r\n\r\n\t\tpublic ensureRemaining(remainingNeeded: number): void {\r\n\t\t\tswitch (this.type) {\r\n\t\t\t\tcase Type.BYTE:\r\n\t\t\t\t\tif (this.buffer.length - this.position < remainingNeeded) {\r\n\t\t\t\t\t\tlet newCapacity: number = Builder.roundUpToNextPowerOfTwo(this.buffer.length + remainingNeeded);\r\n\t\t\t\t\t\tlet newBuffer: Uint8Array = new Uint8Array(newCapacity);\r\n\t\t\t\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\t\t\t\t\t\tthis.buffer = newBuffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Type.CHAR:\r\n\t\t\t\t\tif (this.buffer.length - this.position < remainingNeeded) {\r\n\t\t\t\t\t\tlet newCapacity: number = Builder.roundUpToNextPowerOfTwo(this.buffer.length + remainingNeeded);\r\n\t\t\t\t\t\tlet newBuffer: Uint16Array = new Uint16Array(newCapacity);\r\n\t\t\t\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\t\t\t\t\t\tthis.buffer = newBuffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Type.INT:\r\n\t\t\t\t\tif (this.buffer.length - this.position < remainingNeeded) {\r\n\t\t\t\t\t\tlet newCapacity: number = Builder.roundUpToNextPowerOfTwo(this.buffer.length + remainingNeeded);\r\n\t\t\t\t\t\tlet newBuffer: Int32Array = new Int32Array(newCapacity);\r\n\t\t\t\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\t\t\t\t\t\tthis.buffer = newBuffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic append(utf16In: Uint16Array): void {\r\n\t\t\tthis.ensureRemaining(utf16In.length);\r\n\t\t\tthis.appendArray(utf16In);\r\n\t\t}\r\n\r\n\t\tprivate appendArray(utf16In: Uint16Array): void {\r\n\t\t\tswitch (this.type) {\r\n\t\t\t\tcase Type.BYTE:\r\n\t\t\t\t\tthis.appendArrayByte(utf16In);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Type.CHAR:\r\n\t\t\t\t\tthis.appendArrayChar(utf16In);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Type.INT:\r\n\t\t\t\t\tthis.appendArrayInt(utf16In);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate appendArrayByte(utf16In: Uint16Array): void {\r\n\t\t\tassert(this.prevHighSurrogate === -1);\r\n\r\n\t\t\tlet input: Uint16Array = utf16In;\r\n\t\t\tlet inOffset: number = 0;\r\n\t\t\tlet inLimit: number = utf16In.length;\r\n\r\n\t\t\tlet outByte = this.buffer;\r\n\t\t\tlet outOffset: number = this.position;\r\n\r\n\t\t\twhile (inOffset < inLimit) {\r\n\t\t\t\tlet c: number = input[inOffset];\r\n\t\t\t\tif (c <= 0xFF) {\r\n\t\t\t\t\toutByte[outOffset] = c;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tutf16In = utf16In.subarray(inOffset, inLimit);\r\n\t\t\t\t\tthis.position = outOffset;\r\n\t\t\t\t\tif (!Character.isHighSurrogate(c)) {\r\n\t\t\t\t\t\tthis.byteToCharBuffer(utf16In.length);\r\n\t\t\t\t\t\tthis.appendArrayChar(utf16In);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.byteToIntBuffer(utf16In.length);\r\n\t\t\t\t\t\tthis.appendArrayInt(utf16In);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinOffset++;\r\n\t\t\t\toutOffset++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = outOffset;\r\n\t\t}\r\n\r\n\t\tprivate appendArrayChar(utf16In: Uint16Array): void {\r\n\t\t\tassert(this.prevHighSurrogate === -1);\r\n\r\n\t\t\tlet input: Uint16Array = utf16In;\r\n\t\t\tlet inOffset: number = 0;\r\n\t\t\tlet inLimit: number = utf16In.length;\r\n\r\n\t\t\tlet outChar = this.buffer;\r\n\t\t\tlet outOffset: number = this.position;\r\n\r\n\t\t\twhile (inOffset < inLimit) {\r\n\t\t\t\tlet c: number = input[inOffset];\r\n\t\t\t\tif (!Character.isHighSurrogate(c)) {\r\n\t\t\t\t\toutChar[outOffset] = c;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tutf16In = utf16In.subarray(inOffset, inLimit);\r\n\t\t\t\t\tthis.position = outOffset;\r\n\t\t\t\t\tthis.charToIntBuffer(utf16In.length);\r\n\t\t\t\t\tthis.appendArrayInt(utf16In);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinOffset++;\r\n\t\t\t\toutOffset++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = outOffset;\r\n\t\t}\r\n\r\n\t\tprivate appendArrayInt(utf16In: Uint16Array): void {\r\n\t\t\tlet input: Uint16Array = utf16In;\r\n\t\t\tlet inOffset: number = 0;\r\n\t\t\tlet inLimit: number = utf16In.length;\r\n\r\n\t\t\tlet outInt = this.buffer;\r\n\t\t\tlet outOffset = this.position;\r\n\r\n\t\t\twhile (inOffset < inLimit) {\r\n\t\t\t\tlet c: number = input[inOffset];\r\n\t\t\t\tinOffset++;\r\n\t\t\t\tif (this.prevHighSurrogate !== -1) {\r\n\t\t\t\t\tif (Character.isLowSurrogate(c)) {\r\n\t\t\t\t\t\toutInt[outOffset] = String.fromCharCode(this.prevHighSurrogate, c).codePointAt(0)!;\r\n\t\t\t\t\t\toutOffset++;\r\n\t\t\t\t\t\tthis.prevHighSurrogate = -1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Dangling high surrogate\r\n\t\t\t\t\t\toutInt[outOffset] = this.prevHighSurrogate;\r\n\t\t\t\t\t\toutOffset++;\r\n\t\t\t\t\t\tif (Character.isHighSurrogate(c)) {\r\n\t\t\t\t\t\t\tthis.prevHighSurrogate = c;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toutInt[outOffset] = c;\r\n\t\t\t\t\t\t\toutOffset++;\r\n\t\t\t\t\t\t\tthis.prevHighSurrogate = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (Character.isHighSurrogate(c)) {\r\n\t\t\t\t\tthis.prevHighSurrogate = c;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutInt[outOffset] = c;\r\n\t\t\t\t\toutOffset++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prevHighSurrogate !== -1) {\r\n\t\t\t\t// Dangling high surrogate\r\n\t\t\t\toutInt[outOffset] = this.prevHighSurrogate;\r\n\t\t\t\toutOffset++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = outOffset;\r\n\t\t}\r\n\r\n\t\tprivate byteToCharBuffer(toAppend: number): void {\r\n\t\t\t// CharBuffers hold twice as much per unit as ByteBuffers, so start with half the capacity.\r\n\t\t\tlet newBuffer: Uint16Array = new Uint16Array(Math.max(this.position + toAppend, this.buffer.length >> 1));\r\n\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\r\n\t\t\tthis.type = Type.CHAR;\r\n\t\t\tthis.buffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tprivate byteToIntBuffer(toAppend: number): void {\r\n\t\t\t// IntBuffers hold four times as much per unit as ByteBuffers, so start with one quarter the capacity.\r\n\t\t\tlet newBuffer: Int32Array = new Int32Array(Math.max(this.position + toAppend, this.buffer.length >> 2));\r\n\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\r\n\t\t\tthis.type = Type.INT;\r\n\t\t\tthis.buffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tprivate charToIntBuffer(toAppend: number): void {\r\n\t\t\t// IntBuffers hold two times as much per unit as ByteBuffers, so start with one half the capacity.\r\n\t\t\tlet newBuffer: Int32Array = new Int32Array(Math.max(this.position + toAppend, this.buffer.length >> 1));\r\n\t\t\tnewBuffer.set(this.buffer.subarray(0, this.position), 0);\r\n\r\n\t\t\tthis.type = Type.INT;\r\n\t\t\tthis.buffer = newBuffer;\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport * as assert from \"assert\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { CodePointBuffer } from \"./CodePointBuffer\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Override } from \"./Decorators\";\r\n\r\n/**\r\n * Alternative to {@link ANTLRInputStream} which treats the input\r\n * as a series of Unicode code points, instead of a series of UTF-16\r\n * code units.\r\n *\r\n * Use this if you need to parse input which potentially contains\r\n * Unicode values > U+FFFF.\r\n */\r\nexport class CodePointCharStream implements CharStream {\r\n\tprivate readonly _array: Uint8Array | Uint16Array | Int32Array;\r\n\tprivate readonly _size: number;\r\n\tprivate readonly _name: string;\r\n\r\n\tprivate _position: number;\r\n\r\n\t// Use the factory method {@link #fromBuffer(CodePointBuffer)} to\r\n\t// construct instances of this type.\r\n\tprotected constructor(array: Uint8Array | Uint16Array | Int32Array, position: number, remaining: number, name: string) {\r\n\t\t// TODO\r\n\t\tassert(position === 0);\r\n\t\tthis._array = array;\r\n\t\tthis._size = remaining;\r\n\t\tthis._name = name;\r\n\t\tthis._position = 0;\r\n\t}\r\n\r\n\tpublic get internalStorage(): Uint8Array | Uint16Array | Int32Array {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a {@link CodePointCharStream} which provides access\r\n\t * to the Unicode code points stored in {@code codePointBuffer}.\r\n\t */\r\n\tpublic static fromBuffer(codePointBuffer: CodePointBuffer): CodePointCharStream;\r\n\r\n\t/**\r\n\t * Constructs a named {@link CodePointCharStream} which provides access\r\n\t * to the Unicode code points stored in {@code codePointBuffer}.\r\n\t */\r\n\tpublic static fromBuffer(codePointBuffer: CodePointBuffer, name: string): CodePointCharStream;\r\n\tpublic static fromBuffer(codePointBuffer: CodePointBuffer, name?: string): CodePointCharStream {\r\n\t\tif (name === undefined || name.length === 0) {\r\n\t\t\tname = IntStream.UNKNOWN_SOURCE_NAME;\r\n\t\t}\r\n\r\n\t\t// Java lacks generics on primitive types.\r\n\t\t//\r\n\t\t// To avoid lots of calls to virtual methods in the\r\n\t\t// very hot codepath of LA() below, we construct one\r\n\t\t// of three concrete subclasses.\r\n\t\t//\r\n\t\t// The concrete subclasses directly access the code\r\n\t\t// points stored in the underlying array (byte[],\r\n\t\t// char[], or int[]), so we can avoid lots of virtual\r\n\t\t// method calls to ByteBuffer.get(offset).\r\n\t\treturn new CodePointCharStream(\r\n\t\t\tcodePointBuffer.array(),\r\n\t\t\tcodePointBuffer.position,\r\n\t\t\tcodePointBuffer.remaining,\r\n\t\t\tname);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic consume(): void {\r\n\t\tif (this._size - this._position === 0) {\r\n\t\t\tassert(this.LA(1) === IntStream.EOF);\r\n\t\t\tthrow new RangeError(\"cannot consume EOF\");\r\n\t\t}\r\n\r\n\t\tthis._position++;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic get index(): number {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic get size(): number {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\t/** mark/release do nothing; we have entire buffer */\r\n\t@Override\r\n\tpublic mark(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic release(marker: number): void {\r\n\t\t// No default implementation since this stream buffers the entire input\r\n\t}\r\n\r\n\t@Override\r\n\tpublic seek(index: number): void {\r\n\t\tthis._position = index;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic get sourceName(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this.getText(Interval.of(0, this.size - 1));\r\n\t}\r\n\r\n\t@Override\r\n\tpublic LA(i: number): number {\r\n\t\tlet offset: number;\r\n\t\tswitch (Math.sign(i)) {\r\n\t\t\tcase -1:\r\n\t\t\t\toffset = this.index + i;\r\n\t\t\t\tif (offset < 0) {\r\n\t\t\t\t\treturn IntStream.EOF;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this._array[offset];\r\n\r\n\t\t\tcase 0:\r\n\t\t\t\t// Undefined\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\toffset = this.index + i - 1;\r\n\t\t\t\tif (offset >= this.size) {\r\n\t\t\t\t\treturn IntStream.EOF;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this._array[offset];\r\n\t\t}\r\n\r\n\t\tthrow new RangeError(\"Not reached\");\r\n\t}\r\n\r\n\t/** Return the UTF-16 encoded string for the given interval */\r\n\t@Override\r\n\tpublic getText(interval: Interval): string {\r\n\t\tconst startIdx: number = Math.min(interval.a, this.size);\r\n\t\tconst len: number = Math.min(interval.b - interval.a + 1, this.size - startIdx);\r\n\r\n\t\tif (this._array instanceof Int32Array) {\r\n\t\t\treturn String.fromCodePoint(...Array.from(this._array.subarray(startIdx, startIdx + len)));\r\n\t\t} else {\r\n\t\t\treturn String.fromCharCode(...Array.from(this._array.subarray(startIdx, startIdx + len)));\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:50.1614404-07:00\r\n\r\nimport { ATNSimulator } from \"./atn/ATNSimulator\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenSource } from \"./TokenSource\";\r\nimport { WritableToken } from \"./WritableToken\";\r\n\r\nexport class CommonToken implements WritableToken {\r\n\t/**\r\n\t * An empty {@link Tuple2} which is used as the default value of\r\n\t * {@link #source} for tokens that do not have a source.\r\n\t */\r\n\tprotected static readonly EMPTY_SOURCE: { source?: TokenSource, stream?: CharStream } =\r\n\t\t{ source: undefined, stream: undefined };\r\n\r\n\t/**\r\n\t * This is the backing field for `type`.\r\n\t */\r\n\tprivate _type: number;\r\n\t/**\r\n\t * This is the backing field for {@link #getLine} and {@link #setLine}.\r\n\t */\r\n\tprivate _line: number = 0;\r\n\t/**\r\n\t * This is the backing field for {@link #getCharPositionInLine} and\r\n\t * {@link #setCharPositionInLine}.\r\n\t */\r\n\tprivate _charPositionInLine: number = -1; // set to invalid position\r\n\t/**\r\n\t * This is the backing field for {@link #getChannel} and\r\n\t * {@link #setChannel}.\r\n\t */\r\n\tprivate _channel: number = Token.DEFAULT_CHANNEL;\r\n\t/**\r\n\t * This is the backing field for {@link #getTokenSource} and\r\n\t * {@link #getInputStream}.\r\n\t *\r\n\t * These properties share a field to reduce the memory footprint of\r\n\t * {@link CommonToken}. Tokens created by a {@link CommonTokenFactory} from\r\n\t * the same source and input stream share a reference to the same\r\n\t * {@link Tuple2} containing these values.\r\n\t */\r\n\t@NotNull\r\n\tprotected source: { source?: TokenSource, stream?: CharStream };\r\n\r\n\t/**\r\n\t * This is the backing field for {@link #getText} when the token text is\r\n\t * explicitly set in the constructor or via {@link #setText}.\r\n\t *\r\n\t * @see `text`\r\n\t */\r\n\tprivate _text?: string;\r\n\r\n\t/**\r\n\t * This is the backing field for `tokenIndex`.\r\n\t */\r\n\tprotected index: number = -1;\r\n\r\n\t/**\r\n\t * This is the backing field for `startIndex`.\r\n\t */\r\n\tprotected start: number;\r\n\r\n\t/**\r\n\t * This is the backing field for `stopIndex`.\r\n\t */\r\n\tprivate stop: number;\r\n\r\n\tconstructor(type: number, text?: string, @NotNull source: { source?: TokenSource, stream?: CharStream } = CommonToken.EMPTY_SOURCE, channel: number = Token.DEFAULT_CHANNEL, start: number = 0, stop: number = 0) {\r\n\t\tthis._text = text;\r\n\t\tthis._type = type;\r\n\t\tthis.source = source;\r\n\t\tthis._channel = channel;\r\n\t\tthis.start = start;\r\n\t\tthis.stop = stop;\r\n\t\tif (source.source != null) {\r\n\t\t\tthis._line = source.source.line;\r\n\t\t\tthis._charPositionInLine = source.source.charPositionInLine;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@link CommonToken} as a copy of another {@link Token}.\r\n\t *\r\n\t * If `oldToken` is also a {@link CommonToken} instance, the newly\r\n\t * constructed token will share a reference to the {@link #text} field and\r\n\t * the {@link Tuple2} stored in {@link #source}. Otherwise, {@link #text} will\r\n\t * be assigned the result of calling {@link #getText}, and {@link #source}\r\n\t * will be constructed from the result of {@link Token#getTokenSource} and\r\n\t * {@link Token#getInputStream}.\r\n\t *\r\n\t * @param oldToken The token to copy.\r\n\t */\r\n\tpublic static fromToken(@NotNull oldToken: Token): CommonToken {\r\n\t\tlet result: CommonToken = new CommonToken(oldToken.type, undefined, CommonToken.EMPTY_SOURCE, oldToken.channel, oldToken.startIndex, oldToken.stopIndex);\r\n\t\tresult._line = oldToken.line;\r\n\t\tresult.index = oldToken.tokenIndex;\r\n\t\tresult._charPositionInLine = oldToken.charPositionInLine;\r\n\r\n\t\tif (oldToken instanceof CommonToken) {\r\n\t\t\tresult._text = oldToken._text;\r\n\t\t\tresult.source = oldToken.source;\r\n\t\t} else {\r\n\t\t\tresult._text = oldToken.text;\r\n\t\t\tresult.source = { source: oldToken.tokenSource, stream: oldToken.inputStream };\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t@Override\r\n\tget type(): number {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\t// @Override\r\n\tset type(type: number) {\r\n\t\tthis._type = type;\r\n\t}\r\n\r\n\t@Override\r\n\tget line(): number {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\t// @Override\r\n\tset line(line: number) {\r\n\t\tthis._line = line;\r\n\t}\r\n\r\n\t@Override\r\n\tget text(): string | undefined {\r\n\t\tif (this._text != null) {\r\n\t\t\treturn this._text;\r\n\t\t}\r\n\r\n\t\tlet input: CharStream | undefined = this.inputStream;\r\n\t\tif (input == null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet n: number = input.size;\r\n\t\tif (this.start < n && this.stop < n) {\r\n\t\t\treturn input.getText(Interval.of(this.start, this.stop));\r\n\t\t} else {\r\n\t\t\treturn \"<EOF>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Explicitly set the text for this token. If {code text} is not\r\n\t * `undefined`, then {@link #getText} will return this value rather than\r\n\t * extracting the text from the input.\r\n\t *\r\n\t * @param text The explicit text of the token, or `undefined` if the text\r\n\t * should be obtained from the input along with the start and stop indexes\r\n\t * of the token.\r\n\t */\r\n\t// @Override\r\n\tset text(text: string | undefined) {\r\n\t\tthis._text = text;\r\n\t}\r\n\r\n\t@Override\r\n\tget charPositionInLine(): number {\r\n\t\treturn this._charPositionInLine;\r\n\t}\r\n\r\n\t// @Override\r\n\tset charPositionInLine(charPositionInLine: number) {\r\n\t\tthis._charPositionInLine = charPositionInLine;\r\n\t}\r\n\r\n\t@Override\r\n\tget channel(): number {\r\n\t\treturn this._channel;\r\n\t}\r\n\r\n\t// @Override\r\n\tset channel(channel: number) {\r\n\t\tthis._channel = channel;\r\n\t}\r\n\r\n\t@Override\r\n\tget startIndex(): number {\r\n\t\treturn this.start;\r\n\t}\r\n\r\n\tset startIndex(start: number) {\r\n\t\tthis.start = start;\r\n\t}\r\n\r\n\t@Override\r\n\tget stopIndex(): number {\r\n\t\treturn this.stop;\r\n\t}\r\n\r\n\tset stopIndex(stop: number) {\r\n\t\tthis.stop = stop;\r\n\t}\r\n\r\n\t@Override\r\n\tget tokenIndex(): number {\r\n\t\treturn this.index;\r\n\t}\r\n\r\n\t// @Override\r\n\tset tokenIndex(index: number) {\r\n\t\tthis.index = index;\r\n\t}\r\n\r\n\t@Override\r\n\tget tokenSource(): TokenSource | undefined {\r\n\t\treturn this.source.source;\r\n\t}\r\n\r\n\t@Override\r\n\tget inputStream(): CharStream | undefined {\r\n\t\treturn this.source.stream;\r\n\t}\r\n\r\n\tpublic toString(): string;\r\n\tpublic toString<TSymbol, ATNInterpreter extends ATNSimulator>(recognizer: Recognizer<TSymbol, ATNInterpreter> | undefined): string;\r\n\r\n\t@Override\r\n\tpublic toString<TSymbol, ATNInterpreter extends ATNSimulator>(recognizer?: Recognizer<TSymbol, ATNInterpreter>): string {\r\n\t\tlet channelStr: string = \"\";\r\n\t\tif (this._channel > 0) {\r\n\t\t\tchannelStr = \",channel=\" + this._channel;\r\n\t\t}\r\n\r\n\t\tlet txt: string | undefined = this.text;\r\n\t\tif (txt != null) {\r\n\t\t\ttxt = txt.replace(/\\n/g, \"\\\\n\");\r\n\t\t\ttxt = txt.replace(/\\r/g, \"\\\\r\");\r\n\t\t\ttxt = txt.replace(/\\t/g, \"\\\\t\");\r\n\t\t} else {\r\n\t\t\ttxt = \"<no text>\";\r\n\t\t}\r\n\r\n\t\tlet typeString = String(this._type);\r\n\t\tif (recognizer) {\r\n\t\t\ttypeString = recognizer.vocabulary.getDisplayName(this._type);\r\n\t\t}\r\n\r\n\t\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" + txt + \"',<\" + typeString + \">\" + channelStr + \",\" + this._line + \":\" + this.charPositionInLine + \"]\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:50.3010112-07:00\r\n\r\nimport { CharStream } from \"./CharStream\";\r\nimport { CommonToken } from \"./CommonToken\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Override } from \"./Decorators\";\r\nimport { TokenFactory } from \"./TokenFactory\";\r\nimport { TokenSource } from \"./TokenSource\";\r\n\r\n/**\r\n * This default implementation of {@link TokenFactory} creates\r\n * {@link CommonToken} objects.\r\n */\r\nexport class CommonTokenFactory implements TokenFactory {\r\n\t/**\r\n\t * Indicates whether {@link CommonToken#setText} should be called after\r\n\t * constructing tokens to explicitly set the text. This is useful for cases\r\n\t * where the input stream might not be able to provide arbitrary substrings\r\n\t * of text from the input after the lexer creates a token (e.g. the\r\n\t * implementation of {@link CharStream#getText} in\r\n\t * {@link UnbufferedCharStream}\r\n\t * {@link UnsupportedOperationException}). Explicitly setting the token text\r\n\t * allows {@link Token#getText} to be called at any time regardless of the\r\n\t * input stream implementation.\r\n\t *\r\n\t * The default value is `false` to avoid the performance and memory\r\n\t * overhead of copying text for every token unless explicitly requested.\r\n\t */\r\n\tprotected copyText: boolean;\r\n\r\n\t/**\r\n\t * Constructs a {@link CommonTokenFactory} with the specified value for\r\n\t * {@link #copyText}.\r\n\t *\r\n\t * When `copyText` is `false`, the {@link #DEFAULT} instance\r\n\t * should be used instead of constructing a new instance.\r\n\t *\r\n\t * @param copyText The value for {@link #copyText}.\r\n\t */\r\n\tconstructor(copyText: boolean = false) {\r\n\t\tthis.copyText = copyText;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic create(\r\n\t\tsource: { source?: TokenSource, stream?: CharStream },\r\n\t\ttype: number,\r\n\t\ttext: string | undefined,\r\n\t\tchannel: number,\r\n\t\tstart: number,\r\n\t\tstop: number,\r\n\t\tline: number,\r\n\t\tcharPositionInLine: number): CommonToken {\r\n\r\n\t\tlet t: CommonToken = new CommonToken(type, text, source, channel, start, stop);\r\n\t\tt.line = line;\r\n\t\tt.charPositionInLine = charPositionInLine;\r\n\t\tif (text == null && this.copyText && source.stream != null) {\r\n\t\t\tt.text = source.stream.getText(Interval.of(start, stop));\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic createSimple(type: number, text: string): CommonToken {\r\n\t\treturn new CommonToken(type, text);\r\n\t}\r\n}\r\n\r\nexport namespace CommonTokenFactory {\r\n\t/**\r\n\t * The default {@link CommonTokenFactory} instance.\r\n\t *\r\n\t * This token factory does not explicitly copy token text when constructing\r\n\t * tokens.\r\n\t */\r\n\texport const DEFAULT: TokenFactory = new CommonTokenFactory();\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:50.3953157-07:00\r\n\r\nimport { BufferedTokenStream } from \"./BufferedTokenStream\";\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenSource } from \"./TokenSource\";\r\n\r\n/**\r\n * This class extends {@link BufferedTokenStream} with functionality to filter\r\n * token streams to tokens on a particular channel (tokens where\r\n * {@link Token#getChannel} returns a particular value).\r\n *\r\n * This token stream provides access to all tokens by index or when calling\r\n * methods like {@link #getText}. The channel filtering is only used for code\r\n * accessing tokens via the lookahead methods {@link #LA}, {@link #LT}, and\r\n * {@link #LB}.\r\n *\r\n * By default, tokens are placed on the default channel\r\n * ({@link Token#DEFAULT_CHANNEL}), but may be reassigned by using the\r\n * `->channel(HIDDEN)` lexer command, or by using an embedded action to\r\n * call {@link Lexer#setChannel}.\r\n *\r\n * Note: lexer rules which use the `->skip` lexer command or call\r\n * {@link Lexer#skip} do not produce tokens at all, so input text matched by\r\n * such a rule will not be available as part of the token stream, regardless of\r\n * channel.\r\n */\r\nexport class CommonTokenStream extends BufferedTokenStream {\r\n\t/**\r\n\t * Specifies the channel to use for filtering tokens.\r\n\t *\r\n\t * The default value is {@link Token#DEFAULT_CHANNEL}, which matches the\r\n\t * default channel assigned to tokens created by the lexer.\r\n\t */\r\n\tprotected channel: number;\r\n\r\n\t/**\r\n\t * Constructs a new {@link CommonTokenStream} using the specified token\r\n\t * source and filtering tokens to the specified channel. Only tokens whose\r\n\t * {@link Token#getChannel} matches `channel` or have the\r\n\t * `Token.type` equal to {@link Token#EOF} will be returned by the\r\n\t * token stream lookahead methods.\r\n\t *\r\n\t * @param tokenSource The token source.\r\n\t * @param channel The channel to use for filtering tokens.\r\n\t */\r\n\tconstructor(@NotNull tokenSource: TokenSource, channel: number = Token.DEFAULT_CHANNEL) {\r\n\t\tsuper(tokenSource);\r\n\t\tthis.channel = channel;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected adjustSeekIndex(i: number): number {\r\n\t\treturn this.nextTokenOnChannel(i, this.channel);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected tryLB(k: number): Token | undefined {\r\n\t\tif ((this.p - k) < 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet i: number = this.p;\r\n\t\tlet n: number = 1;\r\n\t\t// find k good tokens looking backwards\r\n\t\twhile (n <= k && i > 0) {\r\n\t\t\t// skip off-channel tokens\r\n\t\t\ti = this.previousTokenOnChannel(i - 1, this.channel);\r\n\t\t\tn++;\r\n\t\t}\r\n\r\n\t\tif (i < 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn this.tokens[i];\r\n\t}\r\n\r\n\t@Override\r\n\tpublic tryLT(k: number): Token | undefined {\r\n\t\t//System.out.println(\"enter LT(\"+k+\")\");\r\n\t\tthis.lazyInit();\r\n\t\tif (k === 0) {\r\n\t\t\tthrow new RangeError(\"0 is not a valid lookahead index\");\r\n\t\t}\r\n\r\n\t\tif (k < 0) {\r\n\t\t\treturn this.tryLB(-k);\r\n\t\t}\r\n\r\n\t\tlet i: number = this.p;\r\n\t\tlet n: number = 1; // we know tokens[p] is a good one\r\n\t\t// find k good tokens\r\n\t\twhile (n < k) {\r\n\t\t\t// skip off-channel tokens, but make sure to not look past EOF\r\n\t\t\tif (this.sync(i + 1)) {\r\n\t\t\t\ti = this.nextTokenOnChannel(i + 1, this.channel);\r\n\t\t\t}\r\n\t\t\tn++;\r\n\t\t}\r\n\r\n\t\t//\t\tif ( i>range ) range = i;\r\n\t\treturn this.tokens[i];\r\n\t}\r\n\r\n\t/** Count EOF just once. */\r\n\tpublic getNumberOfOnChannelTokens(): number {\r\n\t\tlet n: number = 0;\r\n\t\tthis.fill();\r\n\t\tfor (let t of this.tokens) {\r\n\t\t\tif (t.channel === this.channel) {\r\n\t\t\t\tn++;\r\n\t\t\t}\r\n\r\n\t\t\tif (t.type === Token.EOF) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn n;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:50.5479602-07:00\r\n\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ConsoleErrorListener implements ANTLRErrorListener<any> {\r\n\t/**\r\n\t * Provides a default instance of {@link ConsoleErrorListener}.\r\n\t */\r\n\tpublic static readonly INSTANCE: ConsoleErrorListener = new ConsoleErrorListener();\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation prints messages to {@link System#err} containing the\r\n\t * values of `line`, `charPositionInLine`, and `msg` using\r\n\t * the following format.\r\n\t *\r\n\t * <pre>\r\n\t * line *line*:*charPositionInLine* *msg*\r\n\t * </pre>\r\n\t */\r\n\tpublic syntaxError<T>(\r\n\t\trecognizer: Recognizer<T, any>,\r\n\t\toffendingSymbol: T,\r\n\t\tline: number,\r\n\t\tcharPositionInLine: number,\r\n\t\tmsg: string,\r\n\t\te: RecognitionException | undefined): void {\r\n\t\tconsole.error(`line ${line}:${charPositionInLine} ${msg}`);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nexport function NotNull(\r\n\ttarget: any,\r\n\tpropertyKey: PropertyKey,\r\n\tpropertyDescriptor?: PropertyDescriptor | number) {\r\n\t// intentionally empty\r\n}\r\n\r\nexport function Nullable(\r\n\ttarget: any,\r\n\tpropertyKey: PropertyKey,\r\n\tpropertyDescriptor?: PropertyDescriptor | number) {\r\n\t// intentionally empty\r\n}\r\n\r\nexport function Override(\r\n\ttarget: any,\r\n\tpropertyKey: PropertyKey,\r\n\tpropertyDescriptor?: PropertyDescriptor) {\r\n\t// do something with 'target' ...\r\n}\r\n\r\nexport function SuppressWarnings(options: string) {\r\n\treturn (target: any, propertyKey: PropertyKey, descriptor?: PropertyDescriptor) => {\r\n\t\t// intentionally empty\r\n\t};\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:50.8290527-07:00\r\n\r\nimport { ANTLRErrorStrategy } from \"./ANTLRErrorStrategy\";\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNState } from \"./atn/ATNState\";\r\nimport { ATNStateType } from \"./atn/ATNStateType\";\r\nimport { FailedPredicateException } from \"./FailedPredicateException\";\r\nimport { InputMismatchException } from \"./InputMismatchException\";\r\nimport { IntervalSet } from \"./misc/IntervalSet\";\r\nimport { NoViableAltException } from \"./NoViableAltException\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { PredictionContext } from \"./atn/PredictionContext\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { RuleTransition } from \"./atn/RuleTransition\";\r\nimport { TokenStream } from \"./TokenStream\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenFactory } from \"./TokenFactory\";\r\nimport { TokenSource } from \"./TokenSource\";\r\nimport { Vocabulary } from \"./Vocabulary\";\r\nimport { Override, NotNull } from \"./Decorators\";\r\n\r\n/**\r\n * This is the default implementation of {@link ANTLRErrorStrategy} used for\r\n * error reporting and recovery in ANTLR parsers.\r\n */\r\nexport class DefaultErrorStrategy implements ANTLRErrorStrategy {\r\n\t/**\r\n\t * Indicates whether the error strategy is currently \"recovering from an\r\n\t * error\". This is used to suppress reporting multiple error messages while\r\n\t * attempting to recover from a detected syntax error.\r\n\t *\r\n\t * @see #inErrorRecoveryMode\r\n\t */\r\n\tprotected errorRecoveryMode: boolean = false;\r\n\r\n\t/** The index into the input stream where the last error occurred.\r\n\t * \tThis is used to prevent infinite loops where an error is found\r\n\t *  but no token is consumed during recovery...another error is found,\r\n\t *  ad nauseum.  This is a failsafe mechanism to guarantee that at least\r\n\t *  one token/tree node is consumed for two errors.\r\n\t */\r\n\tprotected lastErrorIndex: number = -1;\r\n\r\n\tprotected lastErrorStates?: IntervalSet;\r\n\r\n\t/**\r\n\t * This field is used to propagate information about the lookahead following\r\n\t * the previous match. Since prediction prefers completing the current rule\r\n\t * to error recovery efforts, error reporting may occur later than the\r\n\t * original point where it was discoverable. The original context is used to\r\n\t * compute the true expected sets as though the reporting occurred as early\r\n\t * as possible.\r\n\t */\r\n\tprotected nextTokensContext?: ParserRuleContext;\r\n\r\n\t/**\r\n\t * @see #nextTokensContext\r\n\t */\r\n\tprotected nextTokensState: number = ATNState.INVALID_STATE_NUMBER;\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The default implementation simply calls {@link #endErrorCondition} to\r\n\t * ensure that the handler is not in error recovery mode.\r\n\t */\r\n\t@Override\r\n\tpublic reset(recognizer: Parser): void {\r\n\t\tthis.endErrorCondition(recognizer);\r\n\t}\r\n\r\n\t/**\r\n\t * This method is called to enter error recovery mode when a recognition\r\n\t * exception is reported.\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t */\r\n\tprotected beginErrorCondition(@NotNull recognizer: Parser): void {\r\n\t\tthis.errorRecoveryMode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tpublic inErrorRecoveryMode(recognizer: Parser): boolean {\r\n\t\treturn this.errorRecoveryMode;\r\n\t}\r\n\r\n\t/**\r\n\t * This method is called to leave error recovery mode after recovering from\r\n\t * a recognition exception.\r\n\t *\r\n\t * @param recognizer\r\n\t */\r\n\tprotected endErrorCondition(@NotNull recognizer: Parser): void {\r\n\t\tthis.errorRecoveryMode = false;\r\n\t\tthis.lastErrorStates = undefined;\r\n\t\tthis.lastErrorIndex = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The default implementation simply calls {@link #endErrorCondition}.\r\n\t */\r\n\t@Override\r\n\tpublic reportMatch(recognizer: Parser): void {\r\n\t\tthis.endErrorCondition(recognizer);\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The default implementation returns immediately if the handler is already\r\n\t * in error recovery mode. Otherwise, it calls {@link #beginErrorCondition}\r\n\t * and dispatches the reporting task based on the runtime type of `e`\r\n\t * according to the following table.\r\n\t *\r\n\t * * {@link NoViableAltException}: Dispatches the call to\r\n\t *   {@link #reportNoViableAlternative}\r\n\t * * {@link InputMismatchException}: Dispatches the call to\r\n\t *   {@link #reportInputMismatch}\r\n\t * * {@link FailedPredicateException}: Dispatches the call to\r\n\t *   {@link #reportFailedPredicate}\r\n\t * * All other types: calls {@link Parser#notifyErrorListeners} to report\r\n\t *   the exception\r\n\t */\r\n\t@Override\r\n\tpublic reportError(\r\n\t\trecognizer: Parser,\r\n\t\te: RecognitionException): void {\r\n\t\t// if we've already reported an error and have not matched a token\r\n\t\t// yet successfully, don't report any errors.\r\n\t\tif (this.inErrorRecoveryMode(recognizer)) {\r\n//\t\t\tSystem.err.print(\"[SPURIOUS] \");\r\n\t\t\treturn; // don't report spurious errors\r\n\t\t}\r\n\t\tthis.beginErrorCondition(recognizer);\r\n\t\tif (e instanceof NoViableAltException) {\r\n\t\t\tthis.reportNoViableAlternative(recognizer, e);\r\n\t\t}\r\n\t\telse if (e instanceof InputMismatchException) {\r\n\t\t\tthis.reportInputMismatch(recognizer, e);\r\n\t\t}\r\n\t\telse if (e instanceof FailedPredicateException) {\r\n\t\t\tthis.reportFailedPredicate(recognizer, e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(`unknown recognition error type: ${e}`);\r\n\t\t\tthis.notifyErrorListeners(recognizer, e.toString(), e);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected notifyErrorListeners(@NotNull recognizer: Parser, message: string, e: RecognitionException): void {\r\n\t\tlet offendingToken: Token | null | undefined = e.getOffendingToken(recognizer);\r\n\t\tif (offendingToken === undefined) {\r\n\t\t\t// Pass null to notifyErrorListeners so it in turn calls the error listeners with undefined as the offending\r\n\t\t\t// token. If we passed undefined, it would instead call the listeners with currentToken from the parser.\r\n\t\t\toffendingToken = null;\r\n\t\t}\r\n\r\n\t\trecognizer.notifyErrorListeners(message, offendingToken, e);\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The default implementation resynchronizes the parser by consuming tokens\r\n\t * until we find one in the resynchronization set--loosely the set of tokens\r\n\t * that can follow the current rule.\r\n\t */\r\n\t@Override\r\n\tpublic recover(recognizer: Parser, e: RecognitionException): void {\r\n//\t\tSystem.out.println(\"recover in \"+recognizer.getRuleInvocationStack()+\r\n//\t\t\t\t\t\t   \" index=\"+recognizer.inputStream.index+\r\n//\t\t\t\t\t\t   \", lastErrorIndex=\"+\r\n//\t\t\t\t\t\t   lastErrorIndex+\r\n//\t\t\t\t\t\t   \", states=\"+lastErrorStates);\r\n\t\tif (this.lastErrorIndex === recognizer.inputStream.index &&\r\n\t\t\tthis.lastErrorStates &&\r\n\t\t\tthis.lastErrorStates.contains(recognizer.state)) {\r\n\t\t\t// uh oh, another error at same token index and previously-visited\r\n\t\t\t// state in ATN; must be a case where LT(1) is in the recovery\r\n\t\t\t// token set so nothing got consumed. Consume a single token\r\n\t\t\t// at least to prevent an infinite loop; this is a failsafe.\r\n//\t\t\tSystem.err.println(\"seen error condition before index=\"+\r\n//\t\t\t\t\t\t\t   lastErrorIndex+\", states=\"+lastErrorStates);\r\n//\t\t\tSystem.err.println(\"FAILSAFE consumes \"+recognizer.getTokenNames()[recognizer.inputStream.LA(1)]);\r\n\t\t\trecognizer.consume();\r\n\t\t}\r\n\t\tthis.lastErrorIndex = recognizer.inputStream.index;\r\n\t\tif (!this.lastErrorStates) {\r\n\t\t\tthis.lastErrorStates = new IntervalSet();\r\n\t\t}\r\n\t\tthis.lastErrorStates.add(recognizer.state);\r\n\t\tlet followSet: IntervalSet = this.getErrorRecoverySet(recognizer);\r\n\t\tthis.consumeUntil(recognizer, followSet);\r\n\t}\r\n\r\n\t/**\r\n\t * The default implementation of {@link ANTLRErrorStrategy#sync} makes sure\r\n\t * that the current lookahead symbol is consistent with what were expecting\r\n\t * at this point in the ATN. You can call this anytime but ANTLR only\r\n\t * generates code to check before subrules/loops and each iteration.\r\n\t *\r\n\t * Implements Jim Idle's magic sync mechanism in closures and optional\r\n\t * subrules. E.g.,\r\n\t *\r\n\t * ```antlr\r\n\t * a : sync ( stuff sync )* ;\r\n\t * sync : {consume to what can follow sync} ;\r\n\t * ```\r\n\t *\r\n\t * At the start of a sub rule upon error, {@link #sync} performs single\r\n\t * token deletion, if possible. If it can't do that, it bails on the current\r\n\t * rule and uses the default error recovery, which consumes until the\r\n\t * resynchronization set of the current rule.\r\n\t *\r\n\t * If the sub rule is optional (`(...)?`, `(...)*`, or block\r\n\t * with an empty alternative), then the expected set includes what follows\r\n\t * the subrule.\r\n\t *\r\n\t * During loop iteration, it consumes until it sees a token that can start a\r\n\t * sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\r\n\t * stay in the loop as long as possible.\r\n\t *\r\n\t * **ORIGINS**\r\n\t *\r\n\t * Previous versions of ANTLR did a poor job of their recovery within loops.\r\n\t * A single mismatch token or missing token would force the parser to bail\r\n\t * out of the entire rules surrounding the loop. So, for rule\r\n\t *\r\n\t * ```antlr\r\n\t * classDef : 'class' ID '{' member* '}'\r\n\t * ```\r\n\t *\r\n\t * input with an extra token between members would force the parser to\r\n\t * consume until it found the next class definition rather than the next\r\n\t * member definition of the current class.\r\n\t *\r\n\t * This functionality cost a little bit of effort because the parser has to\r\n\t * compare token set at the start of the loop and at each iteration. If for\r\n\t * some reason speed is suffering for you, you can turn off this\r\n\t * functionality by simply overriding this method as a blank { }.\r\n\t */\r\n\t@Override\r\n\tpublic sync(recognizer: Parser): void {\r\n\t\tlet s: ATNState = recognizer.interpreter.atn.states[recognizer.state];\r\n//\t\tSystem.err.println(\"sync @ \"+s.stateNumber+\"=\"+s.getClass().getSimpleName());\r\n\t\t// If already recovering, don't try to sync\r\n\t\tif (this.inErrorRecoveryMode(recognizer)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tokens: TokenStream = recognizer.inputStream;\r\n\t\tlet la: number = tokens.LA(1);\r\n\r\n\t\t// try cheaper subset first; might get lucky. seems to shave a wee bit off\r\n\t\tlet nextTokens: IntervalSet = recognizer.atn.nextTokens(s);\r\n\t\tif (nextTokens.contains(la)) {\r\n\t\t\t// We are sure the token matches\r\n\t\t\tthis.nextTokensContext = undefined;\r\n\t\t\tthis.nextTokensState = ATNState.INVALID_STATE_NUMBER;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (nextTokens.contains(Token.EPSILON)) {\r\n\t\t\tif (this.nextTokensContext === undefined) {\r\n\t\t\t\t// It's possible the next token won't match; information tracked\r\n\t\t\t\t// by sync is restricted for performance.\r\n\t\t\t\tthis.nextTokensContext = recognizer.context;\r\n\t\t\t\tthis.nextTokensState = recognizer.state;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (s.stateType) {\r\n\t\tcase ATNStateType.BLOCK_START:\r\n\t\tcase ATNStateType.STAR_BLOCK_START:\r\n\t\tcase ATNStateType.PLUS_BLOCK_START:\r\n\t\tcase ATNStateType.STAR_LOOP_ENTRY:\r\n\t\t\t// report error and recover if possible\r\n\t\t\tif (this.singleTokenDeletion(recognizer)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new InputMismatchException(recognizer);\r\n\r\n\t\tcase ATNStateType.PLUS_LOOP_BACK:\r\n\t\tcase ATNStateType.STAR_LOOP_BACK:\r\n//\t\t\tSystem.err.println(\"at loop back: \"+s.getClass().getSimpleName());\r\n\t\t\tthis.reportUnwantedToken(recognizer);\r\n\t\t\tlet expecting: IntervalSet = recognizer.getExpectedTokens();\r\n\t\t\tlet whatFollowsLoopIterationOrRule: IntervalSet =\r\n\t\t\t\texpecting.or(this.getErrorRecoverySet(recognizer));\r\n\t\t\tthis.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t// do nothing if we can't identify the exact kind of ATN state\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This is called by {@link #reportError} when the exception is a\r\n\t * {@link NoViableAltException}.\r\n\t *\r\n\t * @see #reportError\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t * @param e the recognition exception\r\n\t */\r\n\tprotected reportNoViableAlternative(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull e: NoViableAltException): void {\r\n\t\tlet tokens: TokenStream = recognizer.inputStream;\r\n\t\tlet input: string;\r\n\t\tif (tokens) {\r\n\t\t\tif (e.startToken.type === Token.EOF) {\r\n\t\t\t\tinput = \"<EOF>\";\r\n\t\t\t} else {\r\n\t\t\t\tinput = tokens.getTextFromRange(e.startToken, e.getOffendingToken());\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinput = \"<unknown input>\";\r\n\t\t}\r\n\t\tlet msg: string = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\r\n\t\tthis.notifyErrorListeners(recognizer, msg, e);\r\n\t}\r\n\r\n\t/**\r\n\t * This is called by {@link #reportError} when the exception is an\r\n\t * {@link InputMismatchException}.\r\n\t *\r\n\t * @see #reportError\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t * @param e the recognition exception\r\n\t */\r\n\tprotected reportInputMismatch(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull e: InputMismatchException): void {\r\n\t\tlet expected = e.expectedTokens;\r\n\t\tlet expectedString = expected ? expected.toStringVocabulary(recognizer.vocabulary) : \"\";\r\n\t\tlet msg: string = \"mismatched input \" + this.getTokenErrorDisplay(e.getOffendingToken(recognizer)) +\r\n\t\t\t\" expecting \" + expectedString;\r\n\t\tthis.notifyErrorListeners(recognizer, msg, e);\r\n\t}\r\n\r\n\t/**\r\n\t * This is called by {@link #reportError} when the exception is a\r\n\t * {@link FailedPredicateException}.\r\n\t *\r\n\t * @see #reportError\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t * @param e the recognition exception\r\n\t */\r\n\tprotected reportFailedPredicate(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull e: FailedPredicateException): void {\r\n\t\tlet ruleName: string = recognizer.ruleNames[recognizer.context.ruleIndex];\r\n\t\tlet msg: string = \"rule \" + ruleName + \" \" + e.message;\r\n\t\tthis.notifyErrorListeners(recognizer, msg, e);\r\n\t}\r\n\r\n\t/**\r\n\t * This method is called to report a syntax error which requires the removal\r\n\t * of a token from the input stream. At the time this method is called, the\r\n\t * erroneous symbol is current `LT(1)` symbol and has not yet been\r\n\t * removed from the input stream. When this method returns,\r\n\t * `recognizer` is in error recovery mode.\r\n\t *\r\n\t * This method is called when {@link #singleTokenDeletion} identifies\r\n\t * single-token deletion as a viable recovery strategy for a mismatched\r\n\t * input error.\r\n\t *\r\n\t * The default implementation simply returns if the handler is already in\r\n\t * error recovery mode. Otherwise, it calls {@link #beginErrorCondition} to\r\n\t * enter error recovery mode, followed by calling\r\n\t * {@link Parser#notifyErrorListeners}.\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t */\r\n\tprotected reportUnwantedToken(@NotNull recognizer: Parser): void {\r\n\t\tif (this.inErrorRecoveryMode(recognizer)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.beginErrorCondition(recognizer);\r\n\r\n\t\tlet t: Token = recognizer.currentToken;\r\n\t\tlet tokenName: string = this.getTokenErrorDisplay(t);\r\n\t\tlet expecting: IntervalSet = this.getExpectedTokens(recognizer);\r\n\t\tlet msg: string = \"extraneous input \" + tokenName + \" expecting \" +\r\n\t\t\texpecting.toStringVocabulary(recognizer.vocabulary);\r\n\t\trecognizer.notifyErrorListeners(msg, t, undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * This method is called to report a syntax error which requires the\r\n\t * insertion of a missing token into the input stream. At the time this\r\n\t * method is called, the missing token has not yet been inserted. When this\r\n\t * method returns, `recognizer` is in error recovery mode.\r\n\t *\r\n\t * This method is called when {@link #singleTokenInsertion} identifies\r\n\t * single-token insertion as a viable recovery strategy for a mismatched\r\n\t * input error.\r\n\t *\r\n\t * The default implementation simply returns if the handler is already in\r\n\t * error recovery mode. Otherwise, it calls {@link #beginErrorCondition} to\r\n\t * enter error recovery mode, followed by calling\r\n\t * {@link Parser#notifyErrorListeners}.\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t */\r\n\tprotected reportMissingToken(@NotNull recognizer: Parser): void {\r\n\t\tif (this.inErrorRecoveryMode(recognizer)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.beginErrorCondition(recognizer);\r\n\r\n\t\tlet t: Token = recognizer.currentToken;\r\n\t\tlet expecting: IntervalSet = this.getExpectedTokens(recognizer);\r\n\t\tlet msg: string = \"missing \" + expecting.toStringVocabulary(recognizer.vocabulary) +\r\n\t\t\t\" at \" + this.getTokenErrorDisplay(t);\r\n\r\n\t\trecognizer.notifyErrorListeners(msg, t, undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The default implementation attempts to recover from the mismatched input\r\n\t * by using single token insertion and deletion as described below. If the\r\n\t * recovery attempt fails, this method\r\n\t * {@link InputMismatchException}.\r\n\t *\r\n\t * **EXTRA TOKEN** (single token deletion)\r\n\t *\r\n\t * `LA(1)` is not what we are looking for. If `LA(2)` has the\r\n\t * right token, however, then assume `LA(1)` is some extra spurious\r\n\t * token and delete it. Then consume and return the next token (which was\r\n\t * the `LA(2)` token) as the successful result of the match operation.\r\n\t *\r\n\t * This recovery strategy is implemented by {@link #singleTokenDeletion}.\r\n\t *\r\n\t * **MISSING TOKEN** (single token insertion)\r\n\t *\r\n\t * If current token (at `LA(1)`) is consistent with what could come\r\n\t * after the expected `LA(1)` token, then assume the token is missing\r\n\t * and use the parser's {@link TokenFactory} to create it on the fly. The\r\n\t * \"insertion\" is performed by returning the created token as the successful\r\n\t * result of the match operation.\r\n\t *\r\n\t * This recovery strategy is implemented by {@link #singleTokenInsertion}.\r\n\t *\r\n\t * **EXAMPLE**\r\n\t *\r\n\t * For example, Input `i=(3;` is clearly missing the `')'`. When\r\n\t * the parser returns from the nested call to `expr`, it will have\r\n\t * call chain:\r\n\t *\r\n\t * ```\r\n\t * stat → expr → atom\r\n\t * ```\r\n\t *\r\n\t * and it will be trying to match the `')'` at this point in the\r\n\t * derivation:\r\n\t *\r\n\t * ```\r\n\t * => ID '=' '(' INT ')' ('+' atom)* ';'\r\n\t *                    ^\r\n\t * ```\r\n\t *\r\n\t * The attempt to match `')'` will fail when it sees `';'` and\r\n\t * call {@link #recoverInline}. To recover, it sees that `LA(1)==';'`\r\n\t * is in the set of tokens that can follow the `')'` token reference\r\n\t * in rule `atom`. It can assume that you forgot the `')'`.\r\n\t */\r\n\t@Override\r\n\tpublic recoverInline(recognizer: Parser): Token {\r\n\t\t// SINGLE TOKEN DELETION\r\n\t\tlet matchedSymbol = this.singleTokenDeletion(recognizer);\r\n\t\tif (matchedSymbol) {\r\n\t\t\t// we have deleted the extra token.\r\n\t\t\t// now, move past ttype token as if all were ok\r\n\t\t\trecognizer.consume();\r\n\t\t\treturn matchedSymbol;\r\n\t\t}\r\n\r\n\t\t// SINGLE TOKEN INSERTION\r\n\t\tif (this.singleTokenInsertion(recognizer)) {\r\n\t\t\treturn this.getMissingSymbol(recognizer);\r\n\t\t}\r\n\r\n\t\t// even that didn't work; must throw the exception\r\n\t\tif (this.nextTokensContext === undefined) {\r\n\t\t\tthrow new InputMismatchException(recognizer);\r\n\t\t} else {\r\n\t\t\tthrow new InputMismatchException(recognizer, this.nextTokensState, this.nextTokensContext);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method implements the single-token insertion inline error recovery\r\n\t * strategy. It is called by {@link #recoverInline} if the single-token\r\n\t * deletion strategy fails to recover from the mismatched input. If this\r\n\t * method returns `true`, `recognizer` will be in error recovery\r\n\t * mode.\r\n\t *\r\n\t * This method determines whether or not single-token insertion is viable by\r\n\t * checking if the `LA(1)` input symbol could be successfully matched\r\n\t * if it were instead the `LA(2)` symbol. If this method returns\r\n\t * `true`, the caller is responsible for creating and inserting a\r\n\t * token with the correct type to produce this behavior.\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t * @returns `true` if single-token insertion is a viable recovery\r\n\t * strategy for the current mismatched input, otherwise `false`\r\n\t */\r\n\tprotected singleTokenInsertion(@NotNull recognizer: Parser): boolean {\r\n\t\tlet currentSymbolType: number = recognizer.inputStream.LA(1);\r\n\t\t// if current token is consistent with what could come after current\r\n\t\t// ATN state, then we know we're missing a token; error recovery\r\n\t\t// is free to conjure up and insert the missing token\r\n\t\tlet currentState = recognizer.interpreter.atn.states[recognizer.state];\r\n\t\tlet next: ATNState = currentState.transition(0).target;\r\n\t\tlet atn: ATN = recognizer.interpreter.atn;\r\n\t\tlet expectingAtLL2: IntervalSet = atn.nextTokens(next, PredictionContext.fromRuleContext(atn, recognizer.context));\r\n//\t\tconsole.warn(\"LT(2) set=\"+expectingAtLL2.toString(recognizer.getTokenNames()));\r\n\t\tif (expectingAtLL2.contains(currentSymbolType)) {\r\n\t\t\tthis.reportMissingToken(recognizer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * This method implements the single-token deletion inline error recovery\r\n\t * strategy. It is called by {@link #recoverInline} to attempt to recover\r\n\t * from mismatched input. If this method returns `undefined`, the parser and error\r\n\t * handler state will not have changed. If this method returns non-`undefined`,\r\n\t * `recognizer` will *not* be in error recovery mode since the\r\n\t * returned token was a successful match.\r\n\t *\r\n\t * If the single-token deletion is successful, this method calls\r\n\t * {@link #reportUnwantedToken} to report the error, followed by\r\n\t * {@link Parser#consume} to actually \"delete\" the extraneous token. Then,\r\n\t * before returning {@link #reportMatch} is called to signal a successful\r\n\t * match.\r\n\t *\r\n\t * @param recognizer the parser instance\r\n\t * @returns the successfully matched {@link Token} instance if single-token\r\n\t * deletion successfully recovers from the mismatched input, otherwise\r\n\t * `undefined`\r\n\t */\r\n\tprotected singleTokenDeletion(@NotNull recognizer: Parser): Token | undefined {\r\n\t\tlet nextTokenType: number = recognizer.inputStream.LA(2);\r\n\t\tlet expecting: IntervalSet = this.getExpectedTokens(recognizer);\r\n\t\tif (expecting.contains(nextTokenType)) {\r\n\t\t\tthis.reportUnwantedToken(recognizer);\r\n\t\t\t/*\r\n\t\t\tSystem.err.println(\"recoverFromMismatchedToken deleting \"+\r\n\t\t\t\t\t\t\t   ((TokenStream)recognizer.inputStream).LT(1)+\r\n\t\t\t\t\t\t\t   \" since \"+((TokenStream)recognizer.inputStream).LT(2)+\r\n\t\t\t\t\t\t\t   \" is what we want\");\r\n\t\t\t*/\r\n\t\t\trecognizer.consume(); // simply delete extra token\r\n\t\t\t// we want to return the token we're actually matching\r\n\t\t\tlet matchedSymbol: Token = recognizer.currentToken;\r\n\t\t\tthis.reportMatch(recognizer);  // we know current token is correct\r\n\t\t\treturn matchedSymbol;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/** Conjure up a missing token during error recovery.\r\n\t *\r\n\t *  The recognizer attempts to recover from single missing\r\n\t *  symbols. But, actions might refer to that missing symbol.\r\n\t *  For example, x=ID {f($x);}. The action clearly assumes\r\n\t *  that there has been an identifier matched previously and that\r\n\t *  $x points at that token. If that token is missing, but\r\n\t *  the next token in the stream is what we want we assume that\r\n\t *  this token is missing and we keep going. Because we\r\n\t *  have to return some token to replace the missing token,\r\n\t *  we have to conjure one up. This method gives the user control\r\n\t *  over the tokens returned for missing tokens. Mostly,\r\n\t *  you will want to create something special for identifier\r\n\t *  tokens. For literals such as '{' and ',', the default\r\n\t *  action in the parser or tree parser works. It simply creates\r\n\t *  a CommonToken of the appropriate type. The text will be the token.\r\n\t *  If you change what tokens must be created by the lexer,\r\n\t *  override this method to create the appropriate tokens.\r\n\t */\r\n\t@NotNull\r\n\tprotected getMissingSymbol(@NotNull recognizer: Parser): Token {\r\n\t\tlet currentSymbol: Token = recognizer.currentToken;\r\n\t\tlet expecting: IntervalSet = this.getExpectedTokens(recognizer);\r\n\t\tlet expectedTokenType: number = Token.INVALID_TYPE;\r\n\t\tif (!expecting.isNil) {\r\n\t\t\t// get any element\r\n\t\t\texpectedTokenType = expecting.minElement;\r\n\t\t}\r\n\r\n\t\tlet tokenText: string;\r\n\t\tif (expectedTokenType === Token.EOF) {\r\n\t\t\ttokenText = \"<missing EOF>\";\r\n\t\t} else {\r\n\t\t\ttokenText = \"<missing \" + recognizer.vocabulary.getDisplayName(expectedTokenType) + \">\";\r\n\t\t}\r\n\t\tlet current: Token = currentSymbol;\r\n\t\tlet lookback = recognizer.inputStream.tryLT(-1);\r\n\t\tif (current.type === Token.EOF && lookback != null) {\r\n\t\t\tcurrent = lookback;\r\n\t\t}\r\n\r\n\t\treturn this.constructToken(recognizer.inputStream.tokenSource, expectedTokenType, tokenText, current);\r\n\t}\r\n\r\n\tprotected constructToken(\r\n\t\ttokenSource: TokenSource,\r\n\t\texpectedTokenType: number,\r\n\t\ttokenText: string,\r\n\t\tcurrent: Token): Token {\r\n\t\tlet factory: TokenFactory = tokenSource.tokenFactory;\r\n\t\tlet x = current.tokenSource;\r\n\t\tlet stream = x ? x.inputStream : undefined;\r\n\r\n\t\treturn factory.create(\r\n\t\t\t{ source: tokenSource, stream },\r\n\t\t\texpectedTokenType, tokenText,\r\n\t\t\tToken.DEFAULT_CHANNEL,\r\n\t\t\t-1, -1,\r\n\t\t\tcurrent.line, current.charPositionInLine);\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected getExpectedTokens(@NotNull recognizer: Parser): IntervalSet {\r\n\t\treturn recognizer.getExpectedTokens();\r\n\t}\r\n\r\n\t/** How should a token be displayed in an error message? The default\r\n\t *  is to display just the text, but during development you might\r\n\t *  want to have a lot of information spit out.  Override in that case\r\n\t *  to use t.toString() (which, for CommonToken, dumps everything about\r\n\t *  the token). This is better than forcing you to override a method in\r\n\t *  your token objects because you don't have to go modify your lexer\r\n\t *  so that it creates a new Java type.\r\n\t */\r\n\tprotected getTokenErrorDisplay(t: Token | undefined): string {\r\n\t\tif (!t) {\r\n\t\t\treturn \"<no token>\";\r\n\t\t}\r\n\t\tlet s = this.getSymbolText(t);\r\n\t\tif (!s) {\r\n\t\t\tif (this.getSymbolType(t) === Token.EOF) {\r\n\t\t\t\ts = \"<EOF>\";\r\n\t\t\t} else {\r\n\t\t\t\ts = `<${this.getSymbolType(t)}>`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.escapeWSAndQuote(s);\r\n\t}\r\n\r\n\tprotected getSymbolText(@NotNull symbol: Token): string | undefined {\r\n\t\treturn symbol.text;\r\n\t}\r\n\r\n\tprotected getSymbolType(@NotNull symbol: Token): number {\r\n\t\treturn symbol.type;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected escapeWSAndQuote(@NotNull s: string): string {\r\n//\t\tif ( s==null ) return s;\r\n\t\ts = s.replace(\"\\n\", \"\\\\n\");\r\n\t\ts = s.replace(\"\\r\", \"\\\\r\");\r\n\t\ts = s.replace(\"\\t\", \"\\\\t\");\r\n\t\treturn \"'\" + s + \"'\";\r\n\t}\r\n\r\n\t/*  Compute the error recovery set for the current rule.  During\r\n\t *  rule invocation, the parser pushes the set of tokens that can\r\n\t *  follow that rule reference on the stack; this amounts to\r\n\t *  computing FIRST of what follows the rule reference in the\r\n\t *  enclosing rule. See LinearApproximator.FIRST().\r\n\t *  This local follow set only includes tokens\r\n\t *  from within the rule; i.e., the FIRST computation done by\r\n\t *  ANTLR stops at the end of a rule.\r\n\t *\r\n\t *  EXAMPLE\r\n\t *\r\n\t *  When you find a \"no viable alt exception\", the input is not\r\n\t *  consistent with any of the alternatives for rule r.  The best\r\n\t *  thing to do is to consume tokens until you see something that\r\n\t *  can legally follow a call to r *or* any rule that called r.\r\n\t *  You don't want the exact set of viable next tokens because the\r\n\t *  input might just be missing a token--you might consume the\r\n\t *  rest of the input looking for one of the missing tokens.\r\n\t *\r\n\t *  Consider grammar:\r\n\t *\r\n\t *  a : '[' b ']'\r\n\t *    | '(' b ')'\r\n\t *    ;\r\n\t *  b : c '^' INT ;\r\n\t *  c : ID\r\n\t *    | INT\r\n\t *    ;\r\n\t *\r\n\t *  At each rule invocation, the set of tokens that could follow\r\n\t *  that rule is pushed on a stack.  Here are the various\r\n\t *  context-sensitive follow sets:\r\n\t *\r\n\t *  FOLLOW(b1_in_a) = FIRST(']') = ']'\r\n\t *  FOLLOW(b2_in_a) = FIRST(')') = ')'\r\n\t *  FOLLOW(c_in_b) = FIRST('^') = '^'\r\n\t *\r\n\t *  Upon erroneous input \"[]\", the call chain is\r\n\t *\r\n\t *  a -> b -> c\r\n\t *\r\n\t *  and, hence, the follow context stack is:\r\n\t *\r\n\t *  depth     follow set       start of rule execution\r\n\t *    0         <EOF>                    a (from main())\r\n\t *    1          ']'                     b\r\n\t *    2          '^'                     c\r\n\t *\r\n\t *  Notice that ')' is not included, because b would have to have\r\n\t *  been called from a different context in rule a for ')' to be\r\n\t *  included.\r\n\t *\r\n\t *  For error recovery, we cannot consider FOLLOW(c)\r\n\t *  (context-sensitive or otherwise).  We need the combined set of\r\n\t *  all context-sensitive FOLLOW sets--the set of all tokens that\r\n\t *  could follow any reference in the call chain.  We need to\r\n\t *  resync to one of those tokens.  Note that FOLLOW(c)='^' and if\r\n\t *  we resync'd to that token, we'd consume until EOF.  We need to\r\n\t *  sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\r\n\t *  In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\r\n\t *  not consume anything. After printing an error, rule c would\r\n\t *  return normally.  Rule b would not find the required '^' though.\r\n\t *  At this point, it gets a mismatched token error and\r\n\t *  exception (since LA(1) is not in the viable following token\r\n\t *  set).  The rule exception handler tries to recover, but finds\r\n\t *  the same recovery set and doesn't consume anything.  Rule b\r\n\t *  exits normally returning to rule a.  Now it finds the ']' (and\r\n\t *  with the successful match exits errorRecovery mode).\r\n\t *\r\n\t *  So, you can see that the parser walks up the call chain looking\r\n\t *  for the token that was a member of the recovery set.\r\n\t *\r\n\t *  Errors are not generated in errorRecovery mode.\r\n\t *\r\n\t *  ANTLR's error recovery mechanism is based upon original ideas:\r\n\t *\r\n\t *  \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\r\n\t *\r\n\t *  and\r\n\t *\r\n\t *  \"A note on error recovery in recursive descent parsers\":\r\n\t *  http://portal.acm.org/citation.cfm?id=947902.947905\r\n\t *\r\n\t *  Later, Josef Grosch had some good ideas:\r\n\t *\r\n\t *  \"Efficient and Comfortable Error Recovery in Recursive Descent\r\n\t *  Parsers\":\r\n\t *  ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\r\n\t *\r\n\t *  Like Grosch I implement context-sensitive FOLLOW sets that are combined\r\n\t *  at run-time upon error to avoid overhead during parsing.\r\n\t */\r\n\t@NotNull\r\n\tprotected getErrorRecoverySet(@NotNull recognizer: Parser): IntervalSet {\r\n\t\tlet atn: ATN = recognizer.interpreter.atn;\r\n\t\tlet ctx: RuleContext | undefined = recognizer.context;\r\n\t\tlet recoverSet: IntervalSet = new IntervalSet();\r\n\t\twhile (ctx && ctx.invokingState >= 0) {\r\n\t\t\t// compute what follows who invoked us\r\n\t\t\tlet invokingState: ATNState = atn.states[ctx.invokingState];\r\n\t\t\tlet rt = invokingState.transition(0) as RuleTransition;\r\n\t\t\tlet follow: IntervalSet = atn.nextTokens(rt.followState);\r\n\t\t\trecoverSet.addAll(follow);\r\n\t\t\tctx = ctx._parent;\r\n\t\t}\r\n\t\trecoverSet.remove(Token.EPSILON);\r\n//\t\tSystem.out.println(\"recover set \"+recoverSet.toString(recognizer.getTokenNames()));\r\n\t\treturn recoverSet;\r\n\t}\r\n\r\n\t/** Consume tokens until one matches the given token set. */\r\n\tprotected consumeUntil(@NotNull recognizer: Parser, @NotNull set: IntervalSet): void {\r\n//\t\tSystem.err.println(\"consumeUntil(\"+set.toString(recognizer.getTokenNames())+\")\");\r\n\t\tlet ttype: number = recognizer.inputStream.LA(1);\r\n\t\twhile (ttype !== Token.EOF && !set.contains(ttype)) {\r\n\t\t\t//System.out.println(\"consume during recover LA(1)=\"+getTokenNames()[input.LA(1)]);\r\n//\t\t\trecognizer.inputStream.consume();\r\n\t\t\trecognizer.consume();\r\n\t\t\tttype = recognizer.inputStream.LA(1);\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.1349829-07:00\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport enum Dependents {\r\n\r\n\t/**\r\n\t * The element is dependent upon the specified rule.\r\n\t */\r\n\tSELF,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's parents\r\n\t * (rules which directly reference it).\r\n\t */\r\n\tPARENTS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's children\r\n\t * (rules which it directly references).\r\n\t */\r\n\tCHILDREN,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's ancestors\r\n\t * (the transitive closure of `PARENTS` rules).\r\n\t */\r\n\tANCESTORS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's descendants\r\n\t * (the transitive closure of `CHILDREN` rules).\r\n\t */\r\n\tDESCENDANTS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's siblings\r\n\t * (the union of `CHILDREN` of its `PARENTS`).\r\n\t */\r\n\tSIBLINGS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's preceeding\r\n\t * siblings (the union of `CHILDREN` of its `PARENTS` which\r\n\t * appear before a reference to the rule).\r\n\t */\r\n\tPRECEEDING_SIBLINGS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's following\r\n\t * siblings (the union of `CHILDREN` of its `PARENTS` which\r\n\t * appear after a reference to the rule).\r\n\t */\r\n\tFOLLOWING_SIBLINGS,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's preceeding\r\n\t * elements (rules which might end before the start of the specified rule\r\n\t * while parsing). This is calculated by taking the\r\n\t * `PRECEEDING_SIBLINGS` of the rule and each of its\r\n\t * `ANCESTORS`, along with the `DESCENDANTS` of those\r\n\t * elements.\r\n\t */\r\n\tPRECEEDING,\r\n\t/**\r\n\t * The element is dependent upon the set of the specified rule's following\r\n\t * elements (rules which might start after the end of the specified rule\r\n\t * while parsing). This is calculated by taking the\r\n\t * `FOLLOWING_SIBLINGS` of the rule and each of its\r\n\t * `ANCESTORS`, along with the `DESCENDANTS` of those\r\n\t * elements.\r\n\t */\r\n\tFOLLOWING,\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.2133685-07:00\r\n\r\nimport { ATNConfig } from \"./atn/ATNConfig\";\r\nimport { ATNConfigSet } from \"./atn/ATNConfigSet\";\r\nimport { BitSet } from \"./misc/BitSet\";\r\nimport { DFA } from \"./dfa/DFA\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserErrorListener } from \"./ParserErrorListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { SimulatorState } from \"./atn/SimulatorState\";\r\nimport { Token } from \"./Token\";\r\nimport { Override, NotNull } from \"./Decorators\";\r\nimport { Interval } from \"./misc/Interval\";\r\n\r\n/**\r\n * This implementation of {@link ANTLRErrorListener} can be used to identify\r\n * certain potential correctness and performance problems in grammars. \"Reports\"\r\n * are made by calling {@link Parser#notifyErrorListeners} with the appropriate\r\n * message.\r\n *\r\n * * **Ambiguities**: These are cases where more than one path through the\r\n *   grammar can match the input.\r\n * * **Weak context sensitivity**: These are cases where full-context\r\n *   prediction resolved an SLL conflict to a unique alternative which equaled the\r\n *   minimum alternative of the SLL conflict.\r\n * * **Strong (forced) context sensitivity**: These are cases where the\r\n *   full-context prediction resolved an SLL conflict to a unique alternative,\r\n *   *and* the minimum alternative of the SLL conflict was found to not be\r\n *   a truly viable alternative. Two-stage parsing cannot be used for inputs where\r\n *   this situation occurs.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class DiagnosticErrorListener implements ParserErrorListener {\r\n\r\n\t/**\r\n\t * Initializes a new instance of {@link DiagnosticErrorListener}, specifying\r\n\t * whether all ambiguities or only exact ambiguities are reported.\r\n\t *\r\n\t * @param exactOnly `true` to report only exact ambiguities, otherwise\r\n\t * `false` to report all ambiguities.  Defaults to true.\r\n\t */\r\n\tconstructor(protected exactOnly: boolean = true) {\r\n\t\tthis.exactOnly = exactOnly;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic syntaxError<T extends Token>(\r\n\t\t/*@NotNull*/\r\n\t\trecognizer: Recognizer<T, any>,\r\n\t\toffendingSymbol: T | undefined,\r\n\t\tline: number,\r\n\t\tcharPositionInLine: number,\r\n\t\t/*@NotNull*/\r\n\t\tmsg: string,\r\n\t\te: RecognitionException | undefined): void\r\n\t{\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportAmbiguity(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull dfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\texact: boolean,\r\n\t\tambigAlts: BitSet | undefined,\r\n\t\t@NotNull configs: ATNConfigSet): void {\r\n\t\tif (this.exactOnly && !exact) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet decision: string = this.getDecisionDescription(recognizer, dfa);\r\n\t\tlet conflictingAlts: BitSet = this.getConflictingAlts(ambigAlts, configs);\r\n\t\tlet text: string = recognizer.inputStream.getText(Interval.of(startIndex, stopIndex));\r\n\t\tlet message: string = `reportAmbiguity d=${decision}: ambigAlts=${conflictingAlts}, input='${text}'`;\r\n\t\trecognizer.notifyErrorListeners(message);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportAttemptingFullContext(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull dfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tconflictingAlts: BitSet | undefined,\r\n\t\t@NotNull conflictState: SimulatorState): void {\r\n\t\tlet format: string = \"reportAttemptingFullContext d=%s, input='%s'\";\r\n\t\tlet decision: string = this.getDecisionDescription(recognizer, dfa);\r\n\t\tlet text: string = recognizer.inputStream.getText(Interval.of(startIndex, stopIndex));\r\n\t\tlet message: string = `reportAttemptingFullContext d=${decision}, input='${text}'`;\r\n\t\trecognizer.notifyErrorListeners(message);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportContextSensitivity(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull dfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tprediction: number,\r\n\t\t@NotNull acceptState: SimulatorState): void {\r\n\t\tlet format: string = \"reportContextSensitivity d=%s, input='%s'\";\r\n\t\tlet decision: string = this.getDecisionDescription(recognizer, dfa);\r\n\t\tlet text: string = recognizer.inputStream.getText(Interval.of(startIndex, stopIndex));\r\n\t\tlet message: string = `reportContextSensitivity d=${decision}, input='${text}'`;\r\n\t\trecognizer.notifyErrorListeners(message);\r\n\t}\r\n\r\n\tprotected getDecisionDescription(\r\n\t\t@NotNull recognizer: Parser,\r\n\t\t@NotNull dfa: DFA): string {\r\n\t\tlet decision: number = dfa.decision;\r\n\t\tlet ruleIndex: number = dfa.atnStartState.ruleIndex;\r\n\r\n\t\tlet ruleNames: string[] = recognizer.ruleNames;\r\n\t\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\r\n\t\t\treturn decision.toString();\r\n\t\t}\r\n\r\n\t\tlet ruleName: string = ruleNames[ruleIndex];\r\n\t\tif (!ruleName) {\r\n\t\t\treturn decision.toString();\r\n\t\t}\r\n\r\n\t\treturn `${decision} (${ruleName})`;\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the set of conflicting or ambiguous alternatives from a\r\n\t * configuration set, if that information was not already provided by the\r\n\t * parser.\r\n\t *\r\n\t * @param reportedAlts The set of conflicting or ambiguous alternatives, as\r\n\t * reported by the parser.\r\n\t * @param configs The conflicting or ambiguous configuration set.\r\n\t * @returns Returns `reportedAlts` if it is not `undefined`, otherwise\r\n\t * returns the set of alternatives represented in `configs`.\r\n\t */\r\n\t@NotNull\r\n\tprotected getConflictingAlts(reportedAlts: BitSet | undefined, @NotNull configs: ATNConfigSet): BitSet {\r\n\t\tif (reportedAlts != null) {\r\n\t\t\treturn reportedAlts;\r\n\t\t}\r\n\r\n\t\tlet result: BitSet = new BitSet();\r\n\t\tfor (let config of configs) {\r\n\t\t\tresult.set(config.alt);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.4099946-07:00\r\n\r\nimport { AbstractPredicateTransition } from \"./atn/AbstractPredicateTransition\";\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNState } from \"./atn/ATNState\";\r\nimport { Parser } from \"./Parser\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { NotNull } from \"./Decorators\";\r\nimport { PredicateTransition } from \"./atn/PredicateTransition\";\r\n\r\n/** A semantic predicate failed during validation.  Validation of predicates\r\n *  occurs when normally parsing the alternative just like matching a token.\r\n *  Disambiguating predicate evaluation occurs when we test a predicate during\r\n *  prediction.\r\n */\r\nexport class FailedPredicateException extends RecognitionException {\r\n\t//private static serialVersionUID: number =  5379330841495778709L;\r\n\r\n\tprivate _ruleIndex: number;\r\n\tprivate _predicateIndex: number;\r\n\tprivate _predicate?: string;\r\n\r\n\tconstructor(@NotNull recognizer: Parser, predicate?: string, message?: string) {\r\n\t\tsuper(\r\n\t\t\trecognizer,\r\n\t\t\trecognizer.inputStream,\r\n\t\t\trecognizer.context,\r\n\t\t\tFailedPredicateException.formatMessage(predicate, message));\r\n\t\tlet s: ATNState = recognizer.interpreter.atn.states[recognizer.state];\r\n\r\n\t\tlet trans = s.transition(0) as AbstractPredicateTransition;\r\n\t\tif (trans instanceof PredicateTransition) {\r\n\t\t\tthis._ruleIndex = trans.ruleIndex;\r\n\t\t\tthis._predicateIndex = trans.predIndex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._ruleIndex = 0;\r\n\t\t\tthis._predicateIndex = 0;\r\n\t\t}\r\n\r\n\t\tthis._predicate = predicate;\r\n\t\tsuper.setOffendingToken(recognizer, recognizer.currentToken);\r\n\t}\r\n\r\n\tget ruleIndex(): number {\r\n\t\treturn this._ruleIndex;\r\n\t}\r\n\r\n\tget predicateIndex(): number {\r\n\t\treturn this._predicateIndex;\r\n\t}\r\n\r\n\tget predicate(): string | undefined {\r\n\t\treturn this._predicate;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprivate static formatMessage(predicate: string | undefined, message: string | undefined): string {\r\n\t\tif (message) {\r\n\t\t\treturn message;\r\n\t\t}\r\n\r\n\t\treturn `failed predicate: {${predicate}}?`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.5187682-07:00\r\n\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { NotNull } from \"./Decorators\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\n\r\n/** This signifies any kind of mismatched input exceptions such as\r\n *  when the current input does not match the expected token.\r\n */\r\nexport class InputMismatchException extends RecognitionException {\r\n\t//private static serialVersionUID: number =  1532568338707443067L;\r\n\r\n\tconstructor(/*@NotNull*/ recognizer: Parser);\r\n\tconstructor(/*@NotNull*/ recognizer: Parser, state: number, context: ParserRuleContext);\r\n\tconstructor(@NotNull recognizer: Parser, state?: number, context?: ParserRuleContext) {\r\n\t\tif (context === undefined) {\r\n\t\t\tcontext = recognizer.context;\r\n\t\t}\r\n\r\n\t\tsuper(recognizer, recognizer.inputStream, context);\r\n\r\n\t\tif (state !== undefined) {\r\n\t\t\tthis.setOffendingState(state);\r\n\t\t}\r\n\r\n\t\tthis.setOffendingToken(recognizer, recognizer.currentToken);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.6934376-07:00\r\n\r\nexport namespace IntStream {\r\n\t/**\r\n\t * The value returned by {@link #LA LA()} when the end of the stream is\r\n\t * reached.\r\n\t */\r\n\texport const EOF: number = -1;\r\n\r\n\t/**\r\n\t * The value returned by {@link #getSourceName} when the actual name of the\r\n\t * underlying source is not known.\r\n\t */\r\n\texport const UNKNOWN_SOURCE_NAME: string = \"<unknown>\";\r\n}\r\n\r\n/**\r\n * A simple stream of symbols whose values are represented as integers. This\r\n * interface provides *marked ranges* with support for a minimum level\r\n * of buffering necessary to implement arbitrary lookahead during prediction.\r\n * For more information on marked ranges, see {@link #mark}.\r\n *\r\n * **Initializing Methods:** Some methods in this interface have\r\n * unspecified behavior if no call to an initializing method has occurred after\r\n * the stream was constructed. The following is a list of initializing methods:\r\n *\r\n * * {@link #LA}\r\n * * {@link #consume}\r\n * * {@link #size}\r\n */\r\nexport interface IntStream {\r\n\t/**\r\n\t * Consumes the current symbol in the stream. This method has the following\r\n\t * effects:\r\n\t *\r\n\t * * **Forward movement:** The value of `index`\r\n\t *   before calling this method is less than the value of `index`\r\n\t *   after calling this method.\r\n\t * * **Ordered lookahead:** The value of `LA(1)` before\r\n\t *   calling this method becomes the value of `LA(-1)` after calling\r\n\t *   this method.\r\n\t *\r\n\t * Note that calling this method does not guarantee that `index` is\r\n\t * incremented by exactly 1, as that would preclude the ability to implement\r\n\t * filtering streams (e.g. {@link CommonTokenStream} which distinguishes\r\n\t * between \"on-channel\" and \"off-channel\" tokens).\r\n\t *\r\n\t * @throws IllegalStateException if an attempt is made to consume the\r\n\t * end of the stream (i.e. if `LA(1)==`{@link #EOF EOF} before calling\r\n\t * `consume`).\r\n\t */\r\n\tconsume(): void;\r\n\r\n\t/**\r\n\t * Gets the value of the symbol at offset `i` from the current\r\n\t * position. When `i==1`, this method returns the value of the current\r\n\t * symbol in the stream (which is the next symbol to be consumed). When\r\n\t * `i==-1`, this method returns the value of the previously read\r\n\t * symbol in the stream. It is not valid to call this method with\r\n\t * `i==0`, but the specific behavior is unspecified because this\r\n\t * method is frequently called from performance-critical code.\r\n\t *\r\n\t * This method is guaranteed to succeed if any of the following are true:\r\n\t *\r\n\t * * `i>0`\r\n\t * * `i==-1` and `index` returns a value greater\r\n\t *   than the value of `index` after the stream was constructed\r\n\t *   and `LA(1)` was called in that order. Specifying the current\r\n\t *   `index` relative to the index after the stream was created\r\n\t *   allows for filtering implementations that do not return every symbol\r\n\t *   from the underlying source. Specifying the call to `LA(1)`\r\n\t *   allows for lazily initialized streams.\r\n\t * * `LA(i)` refers to a symbol consumed within a marked region\r\n\t *   that has not yet been released.\r\n\t *\r\n\t * If `i` represents a position at or beyond the end of the stream,\r\n\t * this method returns {@link #EOF}.\r\n\t *\r\n\t * The return value is unspecified if `i<0` and fewer than `-i`\r\n\t * calls to {@link #consume consume()} have occurred from the beginning of\r\n\t * the stream before calling this method.\r\n\t *\r\n\t * @throws UnsupportedOperationException if the stream does not support\r\n\t * retrieving the value of the specified symbol\r\n\t */\r\n\tLA(i: number): number;\r\n\r\n\t/**\r\n\t * A mark provides a guarantee that {@link #seek seek()} operations will be\r\n\t * valid over a \"marked range\" extending from the index where `mark()`\r\n\t * was called to the current `index`. This allows the use of\r\n\t * streaming input sources by specifying the minimum buffering requirements\r\n\t * to support arbitrary lookahead during prediction.\r\n\t *\r\n\t * The returned mark is an opaque handle (type `int`) which is passed\r\n\t * to {@link #release release()} when the guarantees provided by the marked\r\n\t * range are no longer necessary. When calls to\r\n\t * `mark()`/`release()` are nested, the marks must be released\r\n\t * in reverse order of which they were obtained. Since marked regions are\r\n\t * used during performance-critical sections of prediction, the specific\r\n\t * behavior of invalid usage is unspecified (i.e. a mark is not released, or\r\n\t * a mark is released twice, or marks are not released in reverse order from\r\n\t * which they were created).\r\n\t *\r\n\t * The behavior of this method is unspecified if no call to an\r\n\t * {@link IntStream initializing method} has occurred after this stream was\r\n\t * constructed.\r\n\t *\r\n\t * This method does not change the current position in the input stream.\r\n\t *\r\n\t * The following example shows the use of {@link #mark mark()},\r\n\t * {@link #release release(mark)}, `index`, and\r\n\t * {@link #seek seek(index)} as part of an operation to safely work within a\r\n\t * marked region, then restore the stream position to its original value and\r\n\t * release the mark.\r\n\t *\r\n\t * ```\r\n\t * IntStream stream = ...;\r\n\t * int index = -1;\r\n\t * int mark = stream.mark();\r\n\t * try {\r\n\t *   index = stream.index;\r\n\t *   // perform work here...\r\n\t * } finally {\r\n\t *   if (index != -1) {\r\n\t *     stream.seek(index);\r\n\t *   }\r\n\t *   stream.release(mark);\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @returns An opaque marker which should be passed to\r\n\t * {@link #release release()} when the marked range is no longer required.\r\n\t */\r\n\tmark(): number;\r\n\r\n\t/**\r\n\t * This method releases a marked range created by a call to\r\n\t * {@link #mark mark()}. Calls to `release()` must appear in the\r\n\t * reverse order of the corresponding calls to `mark()`. If a mark is\r\n\t * released twice, or if marks are not released in reverse order of the\r\n\t * corresponding calls to `mark()`, the behavior is unspecified.\r\n\t *\r\n\t * For more information and an example, see {@link #mark}.\r\n\t *\r\n\t * @param marker A marker returned by a call to `mark()`.\r\n\t * @see #mark\r\n\t */\r\n\trelease(marker: number): void;\r\n\r\n\t/**\r\n\t * Return the index into the stream of the input symbol referred to by\r\n\t * `LA(1)`.\r\n\t *\r\n\t * The behavior of this method is unspecified if no call to an\r\n\t * {@link IntStream initializing method} has occurred after this stream was\r\n\t * constructed.\r\n\t */\r\n\treadonly index: number;\r\n\r\n\t/**\r\n\t * Set the input cursor to the position indicated by `index`. If the\r\n\t * specified index lies past the end of the stream, the operation behaves as\r\n\t * though `index` was the index of the EOF symbol. After this method\r\n\t * returns without throwing an exception, then at least one of the following\r\n\t * will be true.\r\n\t *\r\n\t * * `index` will return the index of the first symbol\r\n\t *   appearing at or after the specified `index`. Specifically,\r\n\t *   implementations which filter their sources should automatically\r\n\t *   adjust `index` forward the minimum amount required for the\r\n\t *   operation to target a non-ignored symbol.\r\n\t * * `LA(1)` returns {@link #EOF}\r\n\t *\r\n\t * This operation is guaranteed to not throw an exception if `index`\r\n\t * lies within a marked region. For more information on marked regions, see\r\n\t * {@link #mark}. The behavior of this method is unspecified if no call to\r\n\t * an {@link IntStream initializing method} has occurred after this stream\r\n\t * was constructed.\r\n\t *\r\n\t * @param index The absolute index to seek to.\r\n\t *\r\n\t * @throws IllegalArgumentException if `index` is less than 0\r\n\t * @throws UnsupportedOperationException if the stream does not support\r\n\t * seeking to the specified index\r\n\t */\r\n\tseek(index: number): void;\r\n\r\n\t/**\r\n\t * Returns the total number of symbols in the stream, including a single EOF\r\n\t * symbol.\r\n\t *\r\n\t * @throws UnsupportedOperationException if the size of the stream is\r\n\t * unknown.\r\n\t */\r\n\treadonly size: number;\r\n\r\n\t/**\r\n\t * Gets the name of the underlying symbol source. This method returns a\r\n\t * non-undefined, non-empty string. If such a name is not known, this method\r\n\t * returns {@link #UNKNOWN_SOURCE_NAME}.\r\n\t */\r\n\t//@NotNull\r\n\treadonly sourceName: string;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.5898546-07:00\r\n\r\nimport { Override } from \"./Decorators\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\n\r\n/**\r\n * This class extends {@link ParserRuleContext} by allowing the value of\r\n * {@link #getRuleIndex} to be explicitly set for the context.\r\n *\r\n * {@link ParserRuleContext} does not include field storage for the rule index\r\n * since the context classes created by the code generator override the\r\n * {@link #getRuleIndex} method to return the correct value for that context.\r\n * Since the parser interpreter does not use the context classes generated for a\r\n * parser, this class (with slightly more memory overhead per node) is used to\r\n * provide equivalent functionality.\r\n */\r\nexport class InterpreterRuleContext extends ParserRuleContext {\r\n\t/**\r\n\t * This is the backing field for {@link #getRuleIndex}.\r\n\t */\r\n\tprivate _ruleIndex: number;\r\n\r\n\tconstructor(ruleIndex: number);\r\n\r\n\t/**\r\n\t * Constructs a new {@link InterpreterRuleContext} with the specified\r\n\t * parent, invoking state, and rule index.\r\n\t *\r\n\t * @param ruleIndex The rule index for the current context.\r\n\t * @param parent The parent context.\r\n\t * @param invokingStateNumber The invoking state number.\r\n\t */\r\n\tconstructor(ruleIndex: number, parent: ParserRuleContext | undefined, invokingStateNumber: number);\r\n\r\n\tconstructor(ruleIndex: number, parent?: ParserRuleContext, invokingStateNumber?: number) {\r\n\t\tif (invokingStateNumber !== undefined) {\r\n\t\t\tsuper(parent, invokingStateNumber);\r\n\t\t} else {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\tthis._ruleIndex = ruleIndex;\r\n\t}\r\n\r\n\t@Override\r\n\tget ruleIndex(): number {\r\n\t\treturn this._ruleIndex;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.7913318-07:00\r\n\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { CommonTokenFactory } from \"./CommonTokenFactory\";\r\nimport { IntegerStack } from \"./misc/IntegerStack\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { LexerATNSimulator } from \"./atn/LexerATNSimulator\";\r\nimport { LexerNoViableAltException } from \"./LexerNoViableAltException\";\r\nimport { Override } from \"./Decorators\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenFactory } from \"./TokenFactory\";\r\nimport { TokenSource } from \"./TokenSource\";\r\n\r\n/** A lexer is recognizer that draws input symbols from a character stream.\r\n *  lexer grammars result in a subclass of this object. A Lexer object\r\n *  uses simplified match() and error recovery mechanisms in the interest\r\n *  of speed.\r\n */\r\nexport abstract class Lexer extends Recognizer<number, LexerATNSimulator>\r\n\timplements TokenSource {\r\n\tpublic static readonly DEFAULT_MODE: number = 0;\r\n\tpublic static readonly MORE: number = -2;\r\n\tpublic static readonly SKIP: number = -3;\r\n\r\n\tstatic get DEFAULT_TOKEN_CHANNEL(): number {\r\n\t\treturn Token.DEFAULT_CHANNEL;\r\n\t}\r\n\r\n\tstatic get HIDDEN(): number {\r\n\t\treturn Token.HIDDEN_CHANNEL;\r\n\t}\r\n\r\n\tpublic static readonly MIN_CHAR_VALUE: number = 0x0000;\r\n\tpublic static readonly MAX_CHAR_VALUE: number = 0x10FFFF;\r\n\r\n\tpublic _input: CharStream;\r\n\r\n\tprotected _tokenFactorySourcePair: { source: TokenSource, stream: CharStream };\r\n\r\n\t/** How to create token objects */\r\n\tprotected _factory: TokenFactory = CommonTokenFactory.DEFAULT;\r\n\r\n\t/** The goal of all lexer rules/methods is to create a token object.\r\n\t *  This is an instance variable as multiple rules may collaborate to\r\n\t *  create a single token.  nextToken will return this object after\r\n\t *  matching lexer rule(s).  If you subclass to allow multiple token\r\n\t *  emissions, then set this to the last token to be matched or\r\n\t *  something non-undefined so that the auto token emit mechanism will not\r\n\t *  emit another token.\r\n\t */\r\n\tpublic _token: Token | undefined;\r\n\r\n\t/** What character index in the stream did the current token start at?\r\n\t *  Needed, for example, to get the text for current token.  Set at\r\n\t *  the start of nextToken.\r\n\t */\r\n\tpublic _tokenStartCharIndex: number = -1;\r\n\r\n\t/** The line on which the first character of the token resides */\r\n\tpublic _tokenStartLine: number = 0;\r\n\r\n\t/** The character position of first character within the line */\r\n\tpublic _tokenStartCharPositionInLine: number = 0;\r\n\r\n\t/** Once we see EOF on char stream, next token will be EOF.\r\n\t *  If you have DONE : EOF ; then you see DONE EOF.\r\n\t */\r\n\tpublic _hitEOF: boolean = false;\r\n\r\n\t/** The channel number for the current token */\r\n\tpublic _channel: number = 0;\r\n\r\n\t/** The token type for the current token */\r\n\tpublic _type: number = 0;\r\n\r\n\tpublic readonly _modeStack: IntegerStack = new IntegerStack();\r\n\tpublic _mode: number = Lexer.DEFAULT_MODE;\r\n\r\n\t/** You can set the text for the current token to override what is in\r\n\t *  the input char buffer.  Set `text` or can set this instance var.\r\n\t */\r\n\tpublic _text: string | undefined;\r\n\r\n\tconstructor(input: CharStream) {\r\n\t\tsuper();\r\n\t\tthis._input = input;\r\n\t\tthis._tokenFactorySourcePair = { source: this, stream: input };\r\n\t}\r\n\r\n\tpublic reset(): void;\r\n\tpublic reset(resetInput: boolean): void;\r\n\tpublic reset(resetInput?: boolean): void {\r\n\t\t// wack Lexer state variables\r\n\t\tif (resetInput === undefined || resetInput) {\r\n\t\t\tthis._input.seek(0); // rewind the input\r\n\t\t}\r\n\r\n\t\tthis._token = undefined;\r\n\t\tthis._type = Token.INVALID_TYPE;\r\n\t\tthis._channel = Token.DEFAULT_CHANNEL;\r\n\t\tthis._tokenStartCharIndex = -1;\r\n\t\tthis._tokenStartCharPositionInLine = -1;\r\n\t\tthis._tokenStartLine = -1;\r\n\t\tthis._text = undefined;\r\n\r\n\t\tthis._hitEOF = false;\r\n\t\tthis._mode = Lexer.DEFAULT_MODE;\r\n\t\tthis._modeStack.clear();\r\n\r\n\t\tthis.interpreter.reset();\r\n\t}\r\n\r\n\t/** Return a token from this source; i.e., match a token on the char\r\n\t *  stream.\r\n\t */\r\n\t@Override\r\n\tpublic nextToken(): Token {\r\n\t\tif (this._input == null) {\r\n\t\t\tthrow new Error(\"nextToken requires a non-null input stream.\");\r\n\t\t}\r\n\r\n\t\t// Mark start location in char stream so unbuffered streams are\r\n\t\t// guaranteed at least have text of current token\r\n\t\tlet tokenStartMarker: number = this._input.mark();\r\n\t\ttry {\r\n\t\t\touter:\r\n\t\t\twhile (true) {\r\n\t\t\t\tif (this._hitEOF) {\r\n\t\t\t\t\treturn this.emitEOF();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._token = undefined;\r\n\t\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\r\n\t\t\t\tthis._tokenStartCharIndex = this._input.index;\r\n\t\t\t\tthis._tokenStartCharPositionInLine = this.interpreter.charPositionInLine;\r\n\t\t\t\tthis._tokenStartLine = this.interpreter.line;\r\n\t\t\t\tthis._text = undefined;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tthis._type = Token.INVALID_TYPE;\r\n//\t\t\t\tSystem.out.println(\"nextToken line \"+tokenStartLine+\" at \"+((char)input.LA(1))+\r\n//\t\t\t\t\t\t\t\t   \" in mode \"+mode+\r\n//\t\t\t\t\t\t\t\t   \" at index \"+input.index);\r\n\t\t\t\t\tlet ttype: number;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tttype = this.interpreter.match(this._input, this._mode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\tif (e instanceof LexerNoViableAltException) {\r\n\t\t\t\t\t\t\tthis.notifyListeners(e);\t\t// report error\r\n\t\t\t\t\t\t\tthis.recover(e);\r\n\t\t\t\t\t\t\tttype = Lexer.SKIP;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._input.LA(1) === IntStream.EOF) {\r\n\t\t\t\t\t\tthis._hitEOF = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._type === Token.INVALID_TYPE) {\r\n\t\t\t\t\t\tthis._type = ttype;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._type === Lexer.SKIP) {\r\n\t\t\t\t\t\tcontinue outer;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (this._type === Lexer.MORE);\r\n\t\t\t\tif (this._token == null) {\r\n\t\t\t\t\treturn this.emit();\r\n\t\t\t\t}\r\n\t\t\t\treturn this._token;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\t// make sure we release marker after match or\r\n\t\t\t// unbuffered char stream will keep buffering\r\n\t\t\tthis._input.release(tokenStartMarker);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Instruct the lexer to skip creating a token for current lexer rule\r\n\t *  and look for another token.  nextToken() knows to keep looking when\r\n\t *  a lexer rule finishes with token set to SKIP_TOKEN.  Recall that\r\n\t *  if token==undefined at end of any token rule, it creates one for you\r\n\t *  and emits it.\r\n\t */\r\n\tpublic skip(): void {\r\n\t\tthis._type = Lexer.SKIP;\r\n\t}\r\n\r\n\tpublic more(): void {\r\n\t\tthis._type = Lexer.MORE;\r\n\t}\r\n\r\n\tpublic mode(m: number): void {\r\n\t\tthis._mode = m;\r\n\t}\r\n\r\n\tpublic pushMode(m: number): void {\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(\"pushMode \" + m);\r\n\t\t}\r\n\t\tthis._modeStack.push(this._mode);\r\n\t\tthis.mode(m);\r\n\t}\r\n\r\n\tpublic popMode(): number {\r\n\t\tif (this._modeStack.isEmpty) {\r\n\t\t\tthrow new Error(\"EmptyStackException\");\r\n\t\t}\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(\"popMode back to \" + this._modeStack.peek());\r\n\t\t}\r\n\t\tthis.mode(this._modeStack.pop());\r\n\t\treturn this._mode;\r\n\t}\r\n\r\n\t@Override\r\n\tget tokenFactory(): TokenFactory {\r\n\t\treturn this._factory;\r\n\t}\r\n\r\n\t// @Override\r\n\tset tokenFactory(factory: TokenFactory) {\r\n\t\tthis._factory = factory;\r\n\t}\r\n\r\n\t@Override\r\n\tget inputStream(): CharStream {\r\n\t\treturn this._input;\r\n\t}\r\n\r\n\t/** Set the char stream and reset the lexer */\r\n\tset inputStream(input: CharStream) {\r\n\t\tthis.reset(false);\r\n\t\tthis._input = input;\r\n\t\tthis._tokenFactorySourcePair = { source: this, stream: this._input };\r\n\t}\r\n\r\n\t@Override\r\n\tget sourceName(): string {\r\n\t\treturn this._input.sourceName;\r\n\t}\r\n\r\n\r\n\t/** The standard method called to automatically emit a token at the\r\n\t *  outermost lexical rule.  The token object should point into the\r\n\t *  char buffer start..stop.  If there is a text override in 'text',\r\n\t *  use that to set the token's text.  Override this method to emit\r\n\t *  custom Token objects or provide a new factory.\r\n\t */\r\n\tpublic emit(token: Token): Token;\r\n\r\n\t/** By default does not support multiple emits per nextToken invocation\r\n\t *  for efficiency reasons.  Subclass and override this method, nextToken,\r\n\t *  and getToken (to push tokens into a list and pull from that list\r\n\t *  rather than a single variable as this implementation does).\r\n\t */\r\n\tpublic emit(): Token;\r\n\r\n\tpublic emit(token?: Token): Token {\r\n\t\tif (!token) {\r\n\t\t\ttoken = this._factory.create(\r\n\t\t\t\tthis._tokenFactorySourcePair, this._type, this._text, this._channel,\r\n\t\t\t\tthis._tokenStartCharIndex, this.charIndex - 1, this._tokenStartLine,\r\n\t\t\t\tthis._tokenStartCharPositionInLine);\r\n\t\t}\r\n\t\tthis._token = token;\r\n\t\treturn token;\r\n\t}\r\n\r\n\tpublic emitEOF(): Token {\r\n\t\tlet cpos: number = this.charPositionInLine;\r\n\t\tlet line: number = this.line;\r\n\t\tlet eof: Token = this._factory.create(\r\n\t\t\tthis._tokenFactorySourcePair, Token.EOF, undefined,\r\n\t\t\tToken.DEFAULT_CHANNEL, this._input.index, this._input.index - 1,\r\n\t\t\tline, cpos);\r\n\t\tthis.emit(eof);\r\n\t\treturn eof;\r\n\t}\r\n\r\n\t@Override\r\n\tget line(): number {\r\n\t\treturn this.interpreter.line;\r\n\t}\r\n\r\n\tset line(line: number) {\r\n\t\tthis.interpreter.line = line;\r\n\t}\r\n\r\n\t@Override\r\n\tget charPositionInLine(): number {\r\n\t\treturn this.interpreter.charPositionInLine;\r\n\t}\r\n\r\n\tset charPositionInLine(charPositionInLine: number) {\r\n\t\tthis.interpreter.charPositionInLine = charPositionInLine;\r\n\t}\r\n\r\n\t/** What is the index of the current character of lookahead? */\r\n\tget charIndex(): number {\r\n\t\treturn this._input.index;\r\n\t}\r\n\r\n\t/** Return the text matched so far for the current token or any\r\n\t *  text override.\r\n\t */\r\n\tget text(): string {\r\n\t\tif (this._text != null) {\r\n\t\t\treturn this._text;\r\n\t\t}\r\n\t\treturn this.interpreter.getText(this._input);\r\n\t}\r\n\r\n\t/** Set the complete text of this token; it wipes any previous\r\n\t *  changes to the text.\r\n\t */\r\n\tset text(text: string) {\r\n\t\tthis._text = text;\r\n\t}\r\n\r\n\t/** Override if emitting multiple tokens. */\r\n\tget token(): Token | undefined { return this._token; }\r\n\r\n\tset token(_token: Token | undefined) {\r\n\t\tthis._token = _token;\r\n\t}\r\n\r\n\tset type(ttype: number) {\r\n\t\tthis._type = ttype;\r\n\t}\r\n\r\n\tget type(): number {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\tset channel(channel: number) {\r\n\t\tthis._channel = channel;\r\n\t}\r\n\r\n\tget channel(): number {\r\n\t\treturn this._channel;\r\n\t}\r\n\r\n\tpublic abstract readonly channelNames: string[];\r\n\r\n\tpublic abstract readonly modeNames: string[];\r\n\r\n\t/** Return a list of all Token objects in input char stream.\r\n\t *  Forces load of all tokens. Does not include EOF token.\r\n\t */\r\n\tpublic getAllTokens(): Token[] {\r\n\t\tlet tokens: Token[] = [];\r\n\t\tlet t: Token = this.nextToken();\r\n\t\twhile (t.type !== Token.EOF) {\r\n\t\t\ttokens.push(t);\r\n\t\t\tt = this.nextToken();\r\n\t\t}\r\n\t\treturn tokens;\r\n\t}\r\n\r\n\tpublic notifyListeners(e: LexerNoViableAltException): void {\r\n\t\tlet text: string = this._input.getText(\r\n\t\t\tInterval.of(this._tokenStartCharIndex, this._input.index));\r\n\t\tlet msg: string = \"token recognition error at: '\" +\r\n\t\t\tthis.getErrorDisplay(text) + \"'\";\r\n\r\n\t\tlet listener: ANTLRErrorListener<number> = this.getErrorListenerDispatch();\r\n\t\tif (listener.syntaxError) {\r\n\t\t\tlistener.syntaxError(this, undefined, this._tokenStartLine, this._tokenStartCharPositionInLine, msg, e);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getErrorDisplay(s: string | number): string {\r\n\t\tif (typeof s === \"number\") {\r\n\t\t\tswitch (s) {\r\n\t\t\tcase Token.EOF:\r\n\t\t\t\treturn \"<EOF>\";\r\n\t\t\tcase 0x0a:\r\n\t\t\t\treturn \"\\\\n\";\r\n\t\t\tcase 0x09:\r\n\t\t\t\treturn \"\\\\t\";\r\n\t\t\tcase 0x0d:\r\n\t\t\t\treturn \"\\\\r\";\r\n\t\t\t}\r\n\t\t\treturn String.fromCharCode(s);\r\n\t\t}\r\n\t\treturn s.replace(/\\n/g, \"\\\\n\")\r\n\t\t\t.replace(/\\t/g, \"\\\\t\")\r\n\t\t\t.replace(/\\r/g, \"\\\\r\");\r\n\t}\r\n\r\n\tpublic getCharErrorDisplay(c: number): string {\r\n\t\tlet s: string = this.getErrorDisplay(c);\r\n\t\treturn \"'\" + s + \"'\";\r\n\t}\r\n\r\n\t/** Lexers can normally match any char in it's vocabulary after matching\r\n\t *  a token, so do the easy thing and just kill a character and hope\r\n\t *  it all works out.  You can instead use the rule invocation stack\r\n\t *  to do sophisticated error recovery if you are in a fragment rule.\r\n\t */\r\n\tpublic recover(re: RecognitionException): void;\r\n\tpublic recover(re: LexerNoViableAltException): void;\r\n\tpublic recover(re: RecognitionException): void {\r\n\t\tif (re instanceof LexerNoViableAltException) {\r\n\t\t\tif (this._input.LA(1) !== IntStream.EOF) {\r\n\t\t\t\t// skip a char and try again\r\n\t\t\t\tthis.interpreter.consume(this._input);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//System.out.println(\"consuming char \"+(char)input.LA(1)+\" during recovery\");\r\n\t\t\t//re.printStackTrace();\r\n\t\t\t// TODO: Do we lose character or line position information?\r\n\t\t\tthis._input.consume();\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:51.9954566-07:00\r\n\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNType } from \"./atn/ATNType\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { Lexer } from \"./Lexer\";\r\nimport { LexerATNSimulator } from \"./atn/LexerATNSimulator\";\r\nimport { NotNull } from \"./Decorators\";\r\nimport { Override } from \"./Decorators\";\r\nimport { Vocabulary } from \"./Vocabulary\";\r\n\r\nexport class LexerInterpreter extends Lexer {\r\n\tprotected _grammarFileName: string;\r\n\tprotected _atn: ATN;\r\n\r\n\tprotected _ruleNames: string[];\r\n\tprotected _channelNames: string[];\r\n\tprotected _modeNames: string[];\r\n\t@NotNull\r\n\tprivate _vocabulary: Vocabulary;\r\n\r\n\tconstructor(grammarFileName: string, @NotNull vocabulary: Vocabulary, ruleNames: string[], channelNames: string[], modeNames: string[], atn: ATN, input: CharStream) {\r\n\t\tsuper(input);\r\n\r\n\t\tif (atn.grammarType !== ATNType.LEXER) {\r\n\t\t\tthrow new Error(\"IllegalArgumentException: The ATN must be a lexer ATN.\");\r\n\t\t}\r\n\r\n\t\tthis._grammarFileName = grammarFileName;\r\n\t\tthis._atn = atn;\r\n\r\n\t\tthis._ruleNames = ruleNames.slice(0);\r\n\t\tthis._channelNames = channelNames.slice(0);\r\n\t\tthis._modeNames = modeNames.slice(0);\r\n\t\tthis._vocabulary = vocabulary;\r\n\t\tthis._interp = new LexerATNSimulator(atn, this);\r\n\t}\r\n\r\n\t@Override\r\n\tget atn(): ATN {\r\n\t\treturn this._atn;\r\n\t}\r\n\r\n\t@Override\r\n\tget grammarFileName(): string {\r\n\t\treturn this._grammarFileName;\r\n\t}\r\n\r\n\t@Override\r\n\tget ruleNames(): string[] {\r\n\t\treturn this._ruleNames;\r\n\t}\r\n\r\n\t@Override\r\n\tget channelNames(): string[] {\r\n\t\treturn this._channelNames;\r\n\t}\r\n\r\n\t@Override\r\n\tget modeNames(): string[] {\r\n\t\treturn this._modeNames;\r\n\t}\r\n\r\n\t@Override\r\n\tget vocabulary(): Vocabulary {\r\n\t\treturn this._vocabulary;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:52.0961136-07:00\r\n\r\nimport { ATNConfigSet } from \"./atn/ATNConfigSet\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { Lexer } from \"./Lexer\";\r\nimport { CharStream } from \"./CharStream\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport * as Utils from \"./misc/Utils\";\r\n\r\nexport class LexerNoViableAltException extends RecognitionException {\r\n\t//private static serialVersionUID: number =  -730999203913001726L;\r\n\r\n\t/** Matching attempted at what input index? */\r\n\tprivate _startIndex: number;\r\n\r\n\t/** Which configurations did we try at input.index that couldn't match input.LA(1)? */\r\n\tprivate _deadEndConfigs?: ATNConfigSet;\r\n\r\n\tconstructor(\r\n\t\tlexer: Lexer | undefined,\r\n\t\t@NotNull input: CharStream,\r\n\t\tstartIndex: number,\r\n\t\tdeadEndConfigs: ATNConfigSet | undefined) {\r\n\t\tsuper(lexer, input);\r\n\t\tthis._startIndex = startIndex;\r\n\t\tthis._deadEndConfigs = deadEndConfigs;\r\n\t}\r\n\r\n\tget startIndex(): number {\r\n\t\treturn this._startIndex;\r\n\t}\r\n\r\n\tget deadEndConfigs(): ATNConfigSet | undefined {\r\n\t\treturn this._deadEndConfigs;\r\n\t}\r\n\r\n\t@Override\r\n\tget inputStream(): CharStream {\r\n\t\treturn super.inputStream as CharStream;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tlet symbol = \"\";\r\n\t\tif (this._startIndex >= 0 && this._startIndex < this.inputStream.size) {\r\n\t\t\tsymbol = this.inputStream.getText(Interval.of(this._startIndex, this._startIndex));\r\n\t\t\tsymbol = Utils.escapeWhitespace(symbol, false);\r\n\t\t}\r\n\r\n\t\t// return String.format(Locale.getDefault(), \"%s('%s')\", LexerNoViableAltException.class.getSimpleName(), symbol);\r\n\t\treturn `LexerNoViableAltException('${symbol}')`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:52.1916955-07:00\r\n\r\nimport { CharStream } from \"./CharStream\";\r\nimport { CommonTokenFactory } from \"./CommonTokenFactory\";\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenFactory } from \"./TokenFactory\";\r\nimport { TokenSource } from \"./TokenSource\";\r\n\r\n/**\r\n * Provides an implementation of {@link TokenSource} as a wrapper around a list\r\n * of {@link Token} objects.\r\n *\r\n * If the final token in the list is an {@link Token#EOF} token, it will be used\r\n * as the EOF token for every call to {@link #nextToken} after the end of the\r\n * list is reached. Otherwise, an EOF token will be created.\r\n */\r\nexport class ListTokenSource implements TokenSource {\r\n\t/**\r\n\t * The wrapped collection of {@link Token} objects to return.\r\n\t */\r\n\tprotected tokens: Token[];\r\n\r\n\t/**\r\n\t * The name of the input source. If this value is `undefined`, a call to\r\n\t * {@link #getSourceName} should return the source name used to create the\r\n\t * the next token in {@link #tokens} (or the previous token if the end of\r\n\t * the input has been reached).\r\n\t */\r\n\tprivate _sourceName?: string;\r\n\r\n\t/**\r\n\t * The index into {@link #tokens} of token to return by the next call to\r\n\t * {@link #nextToken}. The end of the input is indicated by this value\r\n\t * being greater than or equal to the number of items in {@link #tokens}.\r\n\t */\r\n\tprotected i: number = 0;\r\n\r\n\t/**\r\n\t * This field caches the EOF token for the token source.\r\n\t */\r\n\tprotected eofToken?: Token;\r\n\r\n\t/**\r\n\t * This is the backing field for {@link #getTokenFactory} and\r\n\t * {@link setTokenFactory}.\r\n\t */\r\n\tprivate _factory: TokenFactory = CommonTokenFactory.DEFAULT;\r\n\r\n\t/**\r\n\t * Constructs a new {@link ListTokenSource} instance from the specified\r\n\t * collection of {@link Token} objects and source name.\r\n\t *\r\n\t * @param tokens The collection of {@link Token} objects to provide as a\r\n\t * {@link TokenSource}.\r\n\t * @param sourceName The name of the {@link TokenSource}. If this value is\r\n\t * `undefined`, {@link #getSourceName} will attempt to infer the name from\r\n\t * the next {@link Token} (or the previous token if the end of the input has\r\n\t * been reached).\r\n\t *\r\n\t * @exception NullPointerException if `tokens` is `undefined`\r\n\t */\r\n\tconstructor(@NotNull tokens: Token[], sourceName?: string) {\r\n\t\tif (tokens == null) {\r\n\t\t\tthrow new Error(\"tokens cannot be null\");\r\n\t\t}\r\n\r\n\t\tthis.tokens = tokens;\r\n\t\tthis._sourceName = sourceName;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tget charPositionInLine(): number {\r\n\t\tif (this.i < this.tokens.length) {\r\n\t\t\treturn this.tokens[this.i].charPositionInLine;\r\n\t\t} else if (this.eofToken != null) {\r\n\t\t\treturn this.eofToken.charPositionInLine;\r\n\t\t} else if (this.tokens.length > 0) {\r\n\t\t\t// have to calculate the result from the line/column of the previous\r\n\t\t\t// token, along with the text of the token.\r\n\t\t\tlet lastToken: Token = this.tokens[this.tokens.length - 1];\r\n\t\t\tlet tokenText: string | undefined = lastToken.text;\r\n\t\t\tif (tokenText != null) {\r\n\t\t\t\tlet lastNewLine: number = tokenText.lastIndexOf(\"\\n\");\r\n\t\t\t\tif (lastNewLine >= 0) {\r\n\t\t\t\t\treturn tokenText.length - lastNewLine - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn lastToken.charPositionInLine + lastToken.stopIndex - lastToken.startIndex + 1;\r\n\t\t}\r\n\r\n\t\t// only reach this if tokens is empty, meaning EOF occurs at the first\r\n\t\t// position in the input\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tpublic nextToken(): Token {\r\n\t\tif (this.i >= this.tokens.length) {\r\n\t\t\tif (this.eofToken == null) {\r\n\t\t\t\tlet start: number = -1;\r\n\t\t\t\tif (this.tokens.length > 0) {\r\n\t\t\t\t\tlet previousStop: number = this.tokens[this.tokens.length - 1].stopIndex;\r\n\t\t\t\t\tif (previousStop !== -1) {\r\n\t\t\t\t\t\tstart = previousStop + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet stop: number = Math.max(-1, start - 1);\r\n\t\t\t\tthis.eofToken = this._factory.create({ source: this, stream: this.inputStream }, Token.EOF, \"EOF\", Token.DEFAULT_CHANNEL, start, stop, this.line, this.charPositionInLine);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.eofToken;\r\n\t\t}\r\n\r\n\t\tlet t: Token = this.tokens[this.i];\r\n\t\tif (this.i === this.tokens.length - 1 && t.type === Token.EOF) {\r\n\t\t\tthis.eofToken = t;\r\n\t\t}\r\n\r\n\t\tthis.i++;\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tget line(): number {\r\n\t\tif (this.i < this.tokens.length) {\r\n\t\t\treturn this.tokens[this.i].line;\r\n\t\t} else if (this.eofToken != null) {\r\n\t\t\treturn this.eofToken.line;\r\n\t\t} else if (this.tokens.length > 0) {\r\n\t\t\t// have to calculate the result from the line/column of the previous\r\n\t\t\t// token, along with the text of the token.\r\n\t\t\tlet lastToken: Token = this.tokens[this.tokens.length - 1];\r\n\t\t\tlet line: number = lastToken.line;\r\n\r\n\t\t\tlet tokenText: string | undefined = lastToken.text;\r\n\t\t\tif (tokenText != null) {\r\n\t\t\t\tfor (let i = 0; i < tokenText.length; i++) {\r\n\t\t\t\t\tif (tokenText.charAt(i) === \"\\n\") {\r\n\t\t\t\t\t\tline++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// if no text is available, assume the token did not contain any newline characters.\r\n\t\t\treturn line;\r\n\t\t}\r\n\r\n\t\t// only reach this if tokens is empty, meaning EOF occurs at the first\r\n\t\t// position in the input\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tget inputStream(): CharStream | undefined {\r\n\t\tif (this.i < this.tokens.length) {\r\n\t\t\treturn this.tokens[this.i].inputStream;\r\n\t\t} else if (this.eofToken != null) {\r\n\t\t\treturn this.eofToken.inputStream;\r\n\t\t} else if (this.tokens.length > 0) {\r\n\t\t\treturn this.tokens[this.tokens.length - 1].inputStream;\r\n\t\t}\r\n\r\n\t\t// no input stream information is available\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tget sourceName(): string {\r\n\t\tif (this._sourceName) {\r\n\t\t\treturn this._sourceName;\r\n\t\t}\r\n\r\n\t\tlet inputStream: CharStream | undefined = this.inputStream;\r\n\t\tif (inputStream != null) {\r\n\t\t\treturn inputStream.sourceName;\r\n\t\t}\r\n\r\n\t\treturn \"List\";\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t// @Override\r\n\tset tokenFactory(@NotNull factory: TokenFactory) {\r\n\t\tthis._factory = factory;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\t@NotNull\r\n\tget tokenFactory(): TokenFactory {\r\n\t\treturn this._factory;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:52.3255548-07:00\r\n\r\nimport { ATNConfigSet } from \"./atn/ATNConfigSet\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenStream } from \"./TokenStream\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { NotNull } from \"./Decorators\";\r\n\r\n/** Indicates that the parser could not decide which of two or more paths\r\n *  to take based upon the remaining input. It tracks the starting token\r\n *  of the offending input and also knows where the parser was\r\n *  in the various paths when the error. Reported by reportNoViableAlternative()\r\n */\r\nexport class NoViableAltException extends RecognitionException {\r\n\t//private static serialVersionUID: number =  5096000008992867052L;\r\n\r\n\t/** Which configurations did we try at input.index that couldn't match input.LT(1)? */\r\n\tprivate _deadEndConfigs?: ATNConfigSet;\r\n\r\n\t/** The token object at the start index; the input stream might\r\n\t * \tnot be buffering tokens so get a reference to it. (At the\r\n\t *  time the error occurred, of course the stream needs to keep a\r\n\t *  buffer all of the tokens but later we might not have access to those.)\r\n\t */\r\n\t@NotNull\r\n\tprivate _startToken: Token;\r\n\r\n\tconstructor(/*@NotNull*/ recognizer: Parser);\r\n\tconstructor(\r\n\t\t/*@NotNull*/\r\n\t\trecognizer: Recognizer<Token, any>,\r\n\t\t/*@NotNull*/\r\n\t\tinput: TokenStream,\r\n\t\t/*@NotNull*/\r\n\t\tstartToken: Token,\r\n\t\t/*@NotNull*/\r\n\t\toffendingToken: Token,\r\n\t\tdeadEndConfigs: ATNConfigSet | undefined,\r\n\t\t/*@NotNull*/\r\n\t\tctx: ParserRuleContext);\r\n\r\n\tconstructor(\r\n\t\trecognizer: Recognizer<Token, any>,\r\n\t\tinput?: TokenStream,\r\n\t\tstartToken?: Token,\r\n\t\toffendingToken?: Token,\r\n\t\tdeadEndConfigs?: ATNConfigSet,\r\n\t\tctx?: ParserRuleContext) {\r\n\t\tif (recognizer instanceof Parser) {\r\n\t\t\tif (input === undefined) {\r\n\t\t\t\tinput = recognizer.inputStream;\r\n\t\t\t}\r\n\r\n\t\t\tif (startToken === undefined) {\r\n\t\t\t\tstartToken = recognizer.currentToken;\r\n\t\t\t}\r\n\r\n\t\t\tif (offendingToken === undefined) {\r\n\t\t\t\toffendingToken = recognizer.currentToken;\r\n\t\t\t}\r\n\r\n\t\t\tif (ctx === undefined) {\r\n\t\t\t\tctx = recognizer.context;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper(recognizer, input, ctx);\r\n\t\tthis._deadEndConfigs = deadEndConfigs;\r\n\t\tthis._startToken = startToken as Token;\r\n\t\tthis.setOffendingToken(recognizer, offendingToken);\r\n\t}\r\n\r\n\tget startToken(): Token {\r\n\t\treturn this._startToken;\r\n\t}\r\n\r\n\tget deadEndConfigs(): ATNConfigSet | undefined {\r\n\t\treturn this._deadEndConfigs;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:52.4399193-07:00\r\n\r\nimport * as assert from \"assert\";\r\nimport * as Utils from \"./misc/Utils\";\r\n\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { ANTLRErrorStrategy } from \"./ANTLRErrorStrategy\";\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNDeserializationOptions } from \"./atn/ATNDeserializationOptions\";\r\nimport { ATNDeserializer } from \"./atn/ATNDeserializer\";\r\nimport { ATNSimulator } from \"./atn/ATNSimulator\";\r\nimport { ATNState } from \"./atn/ATNState\";\r\nimport { DefaultErrorStrategy } from \"./DefaultErrorStrategy\";\r\nimport { DFA } from \"./dfa/DFA\";\r\nimport { ErrorNode } from \"./tree/ErrorNode\";\r\nimport { IntegerStack } from \"./misc/IntegerStack\";\r\nimport { IntervalSet } from \"./misc/IntervalSet\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { Lexer } from \"./Lexer\";\r\nimport { Override, NotNull, Nullable } from \"./Decorators\";\r\nimport { ParseInfo } from \"./atn/ParseInfo\";\r\nimport { ParserATNSimulator } from \"./atn/ParserATNSimulator\";\r\nimport { ParserErrorListener } from \"./ParserErrorListener\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { ParseTreeListener } from \"./tree/ParseTreeListener\";\r\nimport { ParseTreePattern } from \"./tree/pattern/ParseTreePattern\";\r\nimport { ProxyParserErrorListener } from \"./ProxyParserErrorListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { RuleTransition } from \"./atn/RuleTransition\";\r\nimport { TerminalNode } from \"./tree/TerminalNode\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenFactory } from \"./TokenFactory\";\r\nimport { TokenSource } from \"./TokenSource\";\r\nimport { TokenStream } from \"./TokenStream\";\r\n\r\nclass TraceListener implements ParseTreeListener {\r\n\tconstructor(private ruleNames: string[], private tokenStream: TokenStream) {\r\n\t}\r\n\r\n\t@Override\r\n\tpublic enterEveryRule(ctx: ParserRuleContext): void {\r\n\t\tconsole.log(\"enter   \" + this.ruleNames[ctx.ruleIndex] +\r\n\t\t\t\", LT(1)=\" + this.tokenStream.LT(1).text);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic exitEveryRule(ctx: ParserRuleContext): void {\r\n\t\tconsole.log(\"exit    \" + this.ruleNames[ctx.ruleIndex] +\r\n\t\t\t\", LT(1)=\" + this.tokenStream.LT(1).text);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic visitErrorNode(node: ErrorNode): void {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t@Override\r\n\tpublic visitTerminal(node: TerminalNode): void {\r\n\t\tlet parent = node.parent!.ruleContext;\r\n\t\tlet token: Token = node.symbol;\r\n\t\tconsole.log(\"consume \" + token + \" rule \" + this.ruleNames[parent.ruleIndex]);\r\n\t}\r\n}\r\n\r\n/** This is all the parsing support code essentially; most of it is error recovery stuff. */\r\nexport abstract class Parser extends Recognizer<Token, ParserATNSimulator> {\r\n\t/**\r\n\t * This field maps from the serialized ATN string to the deserialized {@link ATN} with\r\n\t * bypass alternatives.\r\n\t *\r\n\t * @see ATNDeserializationOptions.isGenerateRuleBypassTransitions\r\n\t */\r\n\tprivate static readonly bypassAltsAtnCache = new Map<string, ATN>();\r\n\r\n\t/**\r\n\t * The error handling strategy for the parser. The default value is a new\r\n\t * instance of {@link DefaultErrorStrategy}.\r\n\t *\r\n\t * @see #getErrorHandler\r\n\t * @see #setErrorHandler\r\n\t */\r\n\t@NotNull\r\n\tprotected _errHandler: ANTLRErrorStrategy = new DefaultErrorStrategy();\r\n\r\n\t/**\r\n\t * The input stream.\r\n\t *\r\n\t * @see #getInputStream\r\n\t * @see #setInputStream\r\n\t */\r\n\tprotected _input!: TokenStream;\r\n\r\n\tprotected readonly _precedenceStack: IntegerStack = new IntegerStack();\r\n\r\n\t/**\r\n\t * The {@link ParserRuleContext} object for the currently executing rule.\r\n\t *\r\n\t * This is always non-undefined during the parsing process.\r\n\t */\r\n\tprotected _ctx!: ParserRuleContext;\r\n\r\n\t/**\r\n\t * Specifies whether or not the parser should construct a parse tree during\r\n\t * the parsing process. The default value is `true`.\r\n\t *\r\n\t * @see `buildParseTree`\r\n\t */\r\n\tprivate _buildParseTrees: boolean = true;\r\n\r\n\t/**\r\n\t * When {@link #setTrace}`(true)` is called, a reference to the\r\n\t * {@link TraceListener} is stored here so it can be easily removed in a\r\n\t * later call to {@link #setTrace}`(false)`. The listener itself is\r\n\t * implemented as a parser listener so this field is not directly used by\r\n\t * other parser methods.\r\n\t */\r\n\tprivate _tracer: TraceListener | undefined;\r\n\r\n\t/**\r\n\t * The list of {@link ParseTreeListener} listeners registered to receive\r\n\t * events during the parse.\r\n\t *\r\n\t * @see #addParseListener\r\n\t */\r\n\tprotected _parseListeners: ParseTreeListener[] = [];\r\n\r\n\t/**\r\n\t * The number of syntax errors reported during parsing. This value is\r\n\t * incremented each time {@link #notifyErrorListeners} is called.\r\n\t */\r\n\tprotected _syntaxErrors: number = 0;\r\n\r\n\t/** Indicates parser has match()ed EOF token. See {@link #exitRule()}. */\r\n\tprotected matchedEOF: boolean = false;\r\n\r\n\tconstructor(input: TokenStream) {\r\n\t\tsuper();\r\n\t\tthis._precedenceStack.push(0);\r\n\t\tthis.inputStream = input;\r\n\t}\r\n\r\n\t/** reset the parser's state */\r\n\tpublic reset(): void;\r\n\tpublic reset(resetInput: boolean): void;\r\n\tpublic reset(resetInput?: boolean): void {\r\n\t\t// Note: this method executes when not parsing, so _ctx can be undefined\r\n\t\tif (resetInput === undefined || resetInput) {\r\n\t\t\tthis.inputStream.seek(0);\r\n\t\t}\r\n\r\n\t\tthis._errHandler.reset(this);\r\n\t\tthis._ctx = undefined as any;\r\n\t\tthis._syntaxErrors = 0;\r\n\t\tthis.matchedEOF = false;\r\n\t\tthis.isTrace = false;\r\n\t\tthis._precedenceStack.clear();\r\n\t\tthis._precedenceStack.push(0);\r\n\t\tlet interpreter: ATNSimulator = this.interpreter;\r\n\t\tif (interpreter != null) {\r\n\t\t\tinterpreter.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Match current input symbol against `ttype`. If the symbol type\r\n\t * matches, {@link ANTLRErrorStrategy#reportMatch} and {@link #consume} are\r\n\t * called to complete the match process.\r\n\t *\r\n\t * If the symbol type does not match,\r\n\t * {@link ANTLRErrorStrategy#recoverInline} is called on the current error\r\n\t * strategy to attempt recovery. If {@link #getBuildParseTree} is\r\n\t * `true` and the token index of the symbol returned by\r\n\t * {@link ANTLRErrorStrategy#recoverInline} is -1, the symbol is added to\r\n\t * the parse tree by calling {@link #createErrorNode(ParserRuleContext, Token)} then\r\n\t * {@link ParserRuleContext#addErrorNode(ErrorNode)}.\r\n\t *\r\n\t * @param ttype the token type to match\r\n\t * @returns the matched symbol\r\n\t * @ if the current input symbol did not match\r\n\t * `ttype` and the error strategy could not recover from the\r\n\t * mismatched symbol\r\n\t */\r\n\t@NotNull\r\n\tpublic match(ttype: number): Token {\r\n\t\tlet t: Token = this.currentToken;\r\n\t\tif (t.type === ttype) {\r\n\t\t\tif (ttype === Token.EOF) {\r\n\t\t\t\tthis.matchedEOF = true;\r\n\t\t\t}\r\n\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\tthis.consume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tt = this._errHandler.recoverInline(this);\r\n\t\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\r\n\t\t\t\t// we must have conjured up a new token during single token insertion\r\n\t\t\t\t// if it's not the current symbol\r\n\t\t\t\tthis._ctx.addErrorNode(this.createErrorNode(this._ctx, t));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Match current input symbol as a wildcard. If the symbol type matches\r\n\t * (i.e. has a value greater than 0), {@link ANTLRErrorStrategy#reportMatch}\r\n\t * and {@link #consume} are called to complete the match process.\r\n\t *\r\n\t * If the symbol type does not match,\r\n\t * {@link ANTLRErrorStrategy#recoverInline} is called on the current error\r\n\t * strategy to attempt recovery. If {@link #getBuildParseTree} is\r\n\t * `true` and the token index of the symbol returned by\r\n\t * {@link ANTLRErrorStrategy#recoverInline} is -1, the symbol is added to\r\n\t * the parse tree by calling {@link Parser#createErrorNode(ParserRuleContext, Token)} then\r\n\t * {@link ParserRuleContext#addErrorNode(ErrorNode)}.\r\n\t *\r\n\t * @returns the matched symbol\r\n\t * @ if the current input symbol did not match\r\n\t * a wildcard and the error strategy could not recover from the mismatched\r\n\t * symbol\r\n\t */\r\n\t@NotNull\r\n\tpublic matchWildcard(): Token {\r\n\t\tlet t: Token = this.currentToken;\r\n\t\tif (t.type > 0) {\r\n\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\tthis.consume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tt = this._errHandler.recoverInline(this);\r\n\t\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\r\n\t\t\t\t// we must have conjured up a new token during single token insertion\r\n\t\t\t\t// if it's not the current symbol\r\n\t\t\t\tthis._ctx.addErrorNode(this.createErrorNode(this._ctx, t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Track the {@link ParserRuleContext} objects during the parse and hook\r\n\t * them up using the {@link ParserRuleContext#children} list so that it\r\n\t * forms a parse tree. The {@link ParserRuleContext} returned from the start\r\n\t * rule represents the root of the parse tree.\r\n\t *\r\n\t * Note that if we are not building parse trees, rule contexts only point\r\n\t * upwards. When a rule exits, it returns the context but that gets garbage\r\n\t * collected if nobody holds a reference. It points upwards but nobody\r\n\t * points at it.\r\n\t *\r\n\t * When we build parse trees, we are adding all of these contexts to\r\n\t * {@link ParserRuleContext#children} list. Contexts are then not candidates\r\n\t * for garbage collection.\r\n\t */\r\n\tset buildParseTree(buildParseTrees: boolean) {\r\n\t\tthis._buildParseTrees = buildParseTrees;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets whether or not a complete parse tree will be constructed while\r\n\t * parsing. This property is `true` for a newly constructed parser.\r\n\t *\r\n\t * @returns `true` if a complete parse tree will be constructed while\r\n\t * parsing, otherwise `false`\r\n\t */\r\n\tget buildParseTree(): boolean {\r\n\t\treturn this._buildParseTrees;\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getParseListeners(): ParseTreeListener[] {\r\n\t\treturn this._parseListeners;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers `listener` to receive events during the parsing process.\r\n\t *\r\n\t * To support output-preserving grammar transformations (including but not\r\n\t * limited to left-recursion removal, automated left-factoring, and\r\n\t * optimized code generation), calls to listener methods during the parse\r\n\t * may differ substantially from calls made by\r\n\t * {@link ParseTreeWalker#DEFAULT} used after the parse is complete. In\r\n\t * particular, rule entry and exit events may occur in a different order\r\n\t * during the parse than after the parser. In addition, calls to certain\r\n\t * rule entry methods may be omitted.\r\n\t *\r\n\t * With the following specific exceptions, calls to listener events are\r\n\t * *deterministic*, i.e. for identical input the calls to listener\r\n\t * methods will be the same.\r\n\t *\r\n\t * * Alterations to the grammar used to generate code may change the\r\n\t *   behavior of the listener calls.\r\n\t * * Alterations to the command line options passed to ANTLR 4 when\r\n\t *   generating the parser may change the behavior of the listener calls.\r\n\t * * Changing the version of the ANTLR Tool used to generate the parser\r\n\t *   may change the behavior of the listener calls.\r\n\t *\r\n\t * @param listener the listener to add\r\n\t *\r\n\t * @throws {@link TypeError} if `listener` is `undefined`\r\n\t */\r\n\tpublic addParseListener(@NotNull listener: ParseTreeListener): void {\r\n\t\tif (listener == null) {\r\n\t\t\tthrow new TypeError(\"listener cannot be null\");\r\n\t\t}\r\n\r\n\t\tthis._parseListeners.push(listener);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove `listener` from the list of parse listeners.\r\n\t *\r\n\t * If `listener` is `undefined` or has not been added as a parse\r\n\t * listener, this method does nothing.\r\n\t *\r\n\t * @see #addParseListener\r\n\t *\r\n\t * @param listener the listener to remove\r\n\t */\r\n\tpublic removeParseListener(listener: ParseTreeListener): void {\r\n\t\tlet index = this._parseListeners.findIndex((l) => l === listener);\r\n\t\tif (index !== -1) {\r\n\t\t\tthis._parseListeners.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Remove all parse listeners.\r\n\t *\r\n\t * @see #addParseListener\r\n\t */\r\n\tpublic removeParseListeners(): void {\r\n\t\tthis._parseListeners.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Notify any parse listeners of an enter rule event.\r\n\t *\r\n\t * @see #addParseListener\r\n\t */\r\n\tprotected triggerEnterRuleEvent(): void {\r\n\t\tfor (let listener of this._parseListeners) {\r\n\t\t\tif (listener.enterEveryRule) {\r\n\t\t\t\tlistener.enterEveryRule(this._ctx);\r\n\t\t\t}\r\n\r\n\t\t\tthis._ctx.enterRule(listener);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Notify any parse listeners of an exit rule event.\r\n\t *\r\n\t * @see #addParseListener\r\n\t */\r\n\tprotected triggerExitRuleEvent(): void {\r\n\t\t// reverse order walk of listeners\r\n\t\tfor (let i = this._parseListeners.length - 1; i >= 0; i--) {\r\n\t\t\tlet listener: ParseTreeListener = this._parseListeners[i];\r\n\t\t\tthis._ctx.exitRule(listener);\r\n\t\t\tif (listener.exitEveryRule) {\r\n\t\t\t\tlistener.exitEveryRule(this._ctx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the number of syntax errors reported during parsing. This value is\r\n\t * incremented each time {@link #notifyErrorListeners} is called.\r\n\t *\r\n\t * @see #notifyErrorListeners\r\n\t */\r\n\tget numberOfSyntaxErrors(): number {\r\n\t\treturn this._syntaxErrors;\r\n\t}\r\n\r\n\tget tokenFactory(): TokenFactory {\r\n\t\treturn this._input.tokenSource.tokenFactory;\r\n\t}\r\n\r\n\t/**\r\n\t * The ATN with bypass alternatives is expensive to create so we create it\r\n\t * lazily.\r\n\t *\r\n\t * @ if the current parser does not\r\n\t * implement the `serializedATN` property.\r\n\t */\r\n\t@NotNull\r\n\tpublic getATNWithBypassAlts(): ATN {\r\n\t\tlet serializedAtn: string = this.serializedATN;\r\n\t\tif (serializedAtn == null) {\r\n\t\t\tthrow new Error(\"The current parser does not support an ATN with bypass alternatives.\");\r\n\t\t}\r\n\r\n\t\tlet result = Parser.bypassAltsAtnCache.get(serializedAtn);\r\n\t\tif (result == null) {\r\n\t\t\tlet deserializationOptions: ATNDeserializationOptions = new ATNDeserializationOptions();\r\n\t\t\tdeserializationOptions.isGenerateRuleBypassTransitions = true;\r\n\t\t\tresult = new ATNDeserializer(deserializationOptions).deserialize(Utils.toCharArray(serializedAtn));\r\n\t\t\tParser.bypassAltsAtnCache.set(serializedAtn, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The preferred method of getting a tree pattern. For example, here's a\r\n\t * sample use:\r\n\t *\r\n\t * ```\r\n\t * let t: ParseTree = parser.expr();\r\n\t * let p: ParseTreePattern = await parser.compileParseTreePattern(\"<ID>+0\", MyParser.RULE_expr);\r\n\t * let m: ParseTreeMatch = p.match(t);\r\n\t * let id: string = m.get(\"ID\");\r\n\t * ```\r\n\t */\r\n\tpublic compileParseTreePattern(pattern: string, patternRuleIndex: number): Promise<ParseTreePattern>;\r\n\r\n\t/**\r\n\t * The same as {@link #compileParseTreePattern(String, int)} but specify a\r\n\t * {@link Lexer} rather than trying to deduce it from this parser.\r\n\t */\r\n\tpublic compileParseTreePattern(pattern: string, patternRuleIndex: number, lexer?: Lexer): Promise<ParseTreePattern>;\r\n\r\n\tpublic async compileParseTreePattern(pattern: string, patternRuleIndex: number, lexer?: Lexer): Promise<ParseTreePattern> {\r\n\t\tif (!lexer) {\r\n\t\t\tif (this.inputStream) {\r\n\t\t\t\tlet tokenSource = this.inputStream.tokenSource;\r\n\t\t\t\tif (tokenSource instanceof Lexer) {\r\n\t\t\t\t\tlexer = tokenSource;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!lexer) {\r\n\t\t\t\tthrow new Error(\"Parser can't discover a lexer to use\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currentLexer = lexer;\r\n\t\tlet m = await import(\"./tree/pattern/ParseTreePatternMatcher\");\r\n\t\tlet matcher = new m.ParseTreePatternMatcher(currentLexer, this);\r\n\t\treturn matcher.compile(pattern, patternRuleIndex);\r\n\t}\r\n\r\n\t@NotNull\r\n\tget errorHandler(): ANTLRErrorStrategy {\r\n\t\treturn this._errHandler;\r\n\t}\r\n\r\n\tset errorHandler(@NotNull handler: ANTLRErrorStrategy) {\r\n\t\tthis._errHandler = handler;\r\n\t}\r\n\r\n\t@Override\r\n\tget inputStream(): TokenStream {\r\n\t\treturn this._input;\r\n\t}\r\n\r\n\t/** Set the token stream and reset the parser. */\r\n\tset inputStream(input: TokenStream) {\r\n\t\tthis.reset(false);\r\n\t\tthis._input = input;\r\n\t}\r\n\r\n\t/** Match needs to return the current input symbol, which gets put\r\n\t *  into the label for the associated token ref; e.g., x=ID.\r\n\t */\r\n\t@NotNull\r\n\tget currentToken(): Token {\r\n\t\treturn this._input.LT(1);\r\n\t}\r\n\r\n\tpublic notifyErrorListeners(/*@NotNull*/ msg: string): void;\r\n\tpublic notifyErrorListeners(/*@NotNull*/ msg: string, /*@NotNull*/ offendingToken: Token | null, e: RecognitionException | undefined): void;\r\n\r\n\tpublic notifyErrorListeners(msg: string, offendingToken?: Token | null, e?: RecognitionException | undefined): void {\r\n\t\tif (offendingToken === undefined) {\r\n\t\t\toffendingToken = this.currentToken;\r\n\t\t} else if (offendingToken === null) {\r\n\t\t\toffendingToken = undefined;\r\n\t\t}\r\n\r\n\t\tthis._syntaxErrors++;\r\n\t\tlet line: number = -1;\r\n\t\tlet charPositionInLine: number = -1;\r\n\t\tif (offendingToken != null) {\r\n\t\t\tline = offendingToken.line;\r\n\t\t\tcharPositionInLine = offendingToken.charPositionInLine;\r\n\t\t}\r\n\r\n\t\tlet listener = this.getErrorListenerDispatch();\r\n\t\tif (listener.syntaxError) {\r\n\t\t\tlistener.syntaxError(this, offendingToken, line, charPositionInLine, msg, e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Consume and return the [current symbol](`currentToken`).\r\n\t *\r\n\t * E.g., given the following input with `A` being the current\r\n\t * lookahead symbol, this function moves the cursor to `B` and returns\r\n\t * `A`.\r\n\t *\r\n\t * ```\r\n\t * A B\r\n\t * ^\r\n\t * ```\r\n\t *\r\n\t * If the parser is not in error recovery mode, the consumed symbol is added\r\n\t * to the parse tree using {@link ParserRuleContext#addChild(TerminalNode)}, and\r\n\t * {@link ParseTreeListener#visitTerminal} is called on any parse listeners.\r\n\t * If the parser *is* in error recovery mode, the consumed symbol is\r\n\t * added to the parse tree using {@link #createErrorNode(ParserRuleContext, Token)} then\r\n\t * {@link ParserRuleContext#addErrorNode(ErrorNode)} and\r\n\t * {@link ParseTreeListener#visitErrorNode} is called on any parse\r\n\t * listeners.\r\n\t */\r\n\tpublic consume(): Token {\r\n\t\tlet o: Token = this.currentToken;\r\n\t\tif (o.type !== Parser.EOF) {\r\n\t\t\tthis.inputStream.consume();\r\n\t\t}\r\n\t\tlet hasListener: boolean = this._parseListeners.length !== 0;\r\n\t\tif (this._buildParseTrees || hasListener) {\r\n\t\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\r\n\t\t\t\tlet node: ErrorNode = this._ctx.addErrorNode(this.createErrorNode(this._ctx, o));\r\n\t\t\t\tif (hasListener) {\r\n\t\t\t\t\tfor (let listener of this._parseListeners) {\r\n\t\t\t\t\t\tif (listener.visitErrorNode) {\r\n\t\t\t\t\t\t\tlistener.visitErrorNode(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet node: TerminalNode = this.createTerminalNode(this._ctx, o);\r\n\t\t\t\tthis._ctx.addChild(node);\r\n\t\t\t\tif (hasListener) {\r\n\t\t\t\t\tfor (let listener of this._parseListeners) {\r\n\t\t\t\t\t\tif (listener.visitTerminal) {\r\n\t\t\t\t\t\t\tlistener.visitTerminal(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\r\n\t/**\r\n\t * How to create a token leaf node associated with a parent.\r\n\t * Typically, the terminal node to create is not a function of the parent.\r\n\t *\r\n\t * @since 4.7\r\n\t */\r\n\tpublic createTerminalNode(parent: ParserRuleContext, t: Token): TerminalNode {\r\n\t\treturn new TerminalNode(t);\r\n\t}\r\n\r\n\t/**\r\n\t * How to create an error node, given a token, associated with a parent.\r\n\t * Typically, the error node to create is not a function of the parent.\r\n\t *\r\n\t * @since 4.7\r\n\t */\r\n\tpublic createErrorNode(parent: ParserRuleContext, t: Token): ErrorNode {\r\n\t\treturn new ErrorNode(t);\r\n\t}\r\n\r\n\tprotected addContextToParseTree(): void {\r\n\t\tlet parent = this._ctx._parent as ParserRuleContext | undefined;\r\n\t\t// add current context to parent if we have a parent\r\n\t\tif (parent != null) {\r\n\t\t\tparent.addChild(this._ctx);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Always called by generated parsers upon entry to a rule. Access field\r\n\t * {@link #_ctx} get the current context.\r\n\t */\r\n\tpublic enterRule(@NotNull localctx: ParserRuleContext, state: number, ruleIndex: number): void {\r\n\t\tthis.state = state;\r\n\t\tthis._ctx = localctx;\r\n\t\tthis._ctx._start = this._input.LT(1);\r\n\t\tif (this._buildParseTrees) {\r\n\t\t\tthis.addContextToParseTree();\r\n\t\t}\r\n\t\tthis.triggerEnterRuleEvent();\r\n\t}\r\n\r\n\tpublic enterLeftFactoredRule(localctx: ParserRuleContext, state: number, ruleIndex: number): void {\r\n\t\tthis.state = state;\r\n\t\tif (this._buildParseTrees) {\r\n\t\t\tlet factoredContext = this._ctx.getChild(this._ctx.childCount - 1) as ParserRuleContext;\r\n\t\t\tthis._ctx.removeLastChild();\r\n\t\t\tfactoredContext._parent = localctx;\r\n\t\t\tlocalctx.addChild(factoredContext);\r\n\t\t}\r\n\r\n\t\tthis._ctx = localctx;\r\n\t\tthis._ctx._start = this._input.LT(1);\r\n\t\tif (this._buildParseTrees) {\r\n\t\t\tthis.addContextToParseTree();\r\n\t\t}\r\n\r\n\t\tthis.triggerEnterRuleEvent();\r\n\t}\r\n\r\n\tpublic exitRule(): void {\r\n\t\tif (this.matchedEOF) {\r\n\t\t\t// if we have matched EOF, it cannot consume past EOF so we use LT(1) here\r\n\t\t\tthis._ctx._stop = this._input.LT(1); // LT(1) will be end of file\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._ctx._stop = this._input.tryLT(-1); // stop node is what we just matched\r\n\t\t}\r\n\t\t// trigger event on _ctx, before it reverts to parent\r\n\t\tthis.triggerExitRuleEvent();\r\n\t\tthis.state = this._ctx.invokingState;\r\n\t\tthis._ctx = this._ctx._parent as ParserRuleContext;\r\n\t}\r\n\r\n\tpublic enterOuterAlt(localctx: ParserRuleContext, altNum: number): void {\r\n\t\tlocalctx.altNumber = altNum;\r\n\t\t// if we have new localctx, make sure we replace existing ctx\r\n\t\t// that is previous child of parse tree\r\n\t\tif (this._buildParseTrees && this._ctx !== localctx) {\r\n\t\t\tlet parent = this._ctx._parent as ParserRuleContext | undefined;\r\n\t\t\tif (parent != null) {\r\n\t\t\t\tparent.removeLastChild();\r\n\t\t\t\tparent.addChild(localctx);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._ctx = localctx;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the precedence level for the top-most precedence rule.\r\n\t *\r\n\t * @returns The precedence level for the top-most precedence rule, or -1 if\r\n\t * the parser context is not nested within a precedence rule.\r\n\t */\r\n\tget precedence(): number {\r\n\t\tif (this._precedenceStack.isEmpty) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\treturn this._precedenceStack.peek();\r\n\t}\r\n\r\n\tpublic enterRecursionRule(localctx: ParserRuleContext, state: number, ruleIndex: number, precedence: number): void {\r\n\t\tthis.state = state;\r\n\t\tthis._precedenceStack.push(precedence);\r\n\t\tthis._ctx = localctx;\r\n\t\tthis._ctx._start = this._input.LT(1);\r\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for left-recursive rules\r\n\t}\r\n\r\n\t/** Like {@link #enterRule} but for recursive rules.\r\n\t *  Make the current context the child of the incoming localctx.\r\n\t */\r\n\tpublic pushNewRecursionContext(localctx: ParserRuleContext, state: number, ruleIndex: number): void {\r\n\t\tlet previous: ParserRuleContext = this._ctx;\r\n\t\tprevious._parent = localctx;\r\n\t\tprevious.invokingState = state;\r\n\t\tprevious._stop = this._input.tryLT(-1);\r\n\r\n\t\tthis._ctx = localctx;\r\n\t\tthis._ctx._start = previous._start;\r\n\t\tif (this._buildParseTrees) {\r\n\t\t\tthis._ctx.addChild(previous);\r\n\t\t}\r\n\r\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for left-recursive rules\r\n\t}\r\n\r\n\tpublic unrollRecursionContexts(_parentctx: ParserRuleContext): void {\r\n\t\tthis._precedenceStack.pop();\r\n\t\tthis._ctx._stop = this._input.tryLT(-1);\r\n\t\tlet retctx: ParserRuleContext = this._ctx; // save current ctx (return value)\r\n\r\n\t\t// unroll so _ctx is as it was before call to recursive method\r\n\t\tif (this._parseListeners.length > 0) {\r\n\t\t\twhile (this._ctx !== _parentctx) {\r\n\t\t\t\tthis.triggerExitRuleEvent();\r\n\t\t\t\tthis._ctx = this._ctx._parent as ParserRuleContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._ctx = _parentctx;\r\n\t\t}\r\n\r\n\t\t// hook into tree\r\n\t\tretctx._parent = _parentctx;\r\n\r\n\t\tif (this._buildParseTrees && _parentctx != null) {\r\n\t\t\t// add return ctx into invoking rule's tree\r\n\t\t\t_parentctx.addChild(retctx);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getInvokingContext(ruleIndex: number): ParserRuleContext | undefined {\r\n\t\tlet p = this._ctx;\r\n\t\twhile (p && p.ruleIndex !== ruleIndex) {\r\n\t\t\tp = p._parent as ParserRuleContext;\r\n\t\t}\r\n\t\treturn p;\r\n\t}\r\n\r\n\tget context(): ParserRuleContext {\r\n\t\treturn this._ctx;\r\n\t}\r\n\r\n\tset context(ctx: ParserRuleContext) {\r\n\t\tthis._ctx = ctx;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic precpred(@Nullable localctx: RuleContext, precedence: number): boolean {\r\n\t\treturn precedence >= this._precedenceStack.peek();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getErrorListenerDispatch(): ParserErrorListener {\r\n\t\treturn new ProxyParserErrorListener(this.getErrorListeners());\r\n\t}\r\n\r\n\tpublic inContext(context: string): boolean {\r\n\t\t// TODO: useful in parser?\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether or not `symbol` can follow the current state in the\r\n\t * ATN. The behavior of this method is equivalent to the following, but is\r\n\t * implemented such that the complete context-sensitive follow set does not\r\n\t * need to be explicitly constructed.\r\n\t *\r\n\t * ```\r\n\t * return getExpectedTokens().contains(symbol);\r\n\t * ```\r\n\t *\r\n\t * @param symbol the symbol type to check\r\n\t * @returns `true` if `symbol` can follow the current state in\r\n\t * the ATN, otherwise `false`.\r\n\t */\r\n\tpublic isExpectedToken(symbol: number): boolean {\r\n//   \t\treturn interpreter.atn.nextTokens(_ctx);\r\n\t\tlet atn: ATN = this.interpreter.atn;\r\n\t\tlet ctx: ParserRuleContext = this._ctx;\r\n\t\tlet s: ATNState = atn.states[this.state];\r\n\t\tlet following: IntervalSet = atn.nextTokens(s);\r\n\t\tif (following.contains(symbol)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n//        System.out.println(\"following \"+s+\"=\"+following);\r\n\t\tif (!following.contains(Token.EPSILON)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twhile (ctx != null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\r\n\t\t\tlet invokingState: ATNState = atn.states[ctx.invokingState];\r\n\t\t\tlet rt = invokingState.transition(0) as RuleTransition;\r\n\t\t\tfollowing = atn.nextTokens(rt.followState);\r\n\t\t\tif (following.contains(symbol)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tctx = ctx._parent as ParserRuleContext;\r\n\t\t}\r\n\r\n\t\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget isMatchedEOF(): boolean {\r\n\t\treturn this.matchedEOF;\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the set of input symbols which could follow the current parser\r\n\t * state and context, as given by {@link #getState} and {@link #getContext},\r\n\t * respectively.\r\n\t *\r\n\t * @see ATN#getExpectedTokens(int, RuleContext)\r\n\t */\r\n\t@NotNull\r\n\tpublic getExpectedTokens(): IntervalSet {\r\n\t\treturn this.atn.getExpectedTokens(this.state, this.context);\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getExpectedTokensWithinCurrentRule(): IntervalSet {\r\n\t\tlet atn: ATN = this.interpreter.atn;\r\n\t\tlet s: ATNState = atn.states[this.state];\r\n\t\treturn atn.nextTokens(s);\r\n\t}\r\n\r\n\t/** Get a rule's index (i.e., `RULE_ruleName` field) or -1 if not found. */\r\n\tpublic getRuleIndex(ruleName: string): number {\r\n\t\tlet ruleIndex = this.getRuleIndexMap().get(ruleName);\r\n\t\tif (ruleIndex != null) {\r\n\t\t\treturn ruleIndex;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tget ruleContext(): ParserRuleContext { return this._ctx; }\r\n\r\n\t/** Return List&lt;String&gt; of the rule names in your parser instance\r\n\t *  leading up to a call to the current rule.  You could override if\r\n\t *  you want more details such as the file/line info of where\r\n\t *  in the ATN a rule is invoked.\r\n\t *\r\n\t *  This is very useful for error messages.\r\n\t */\r\n\r\n\tpublic getRuleInvocationStack(ctx: RuleContext = this._ctx): string[] {\r\n\t\tlet p: RuleContext | undefined = ctx;  \t\t// Workaround for Microsoft/TypeScript#14487\r\n\t\tlet ruleNames: string[] = this.ruleNames;\r\n\t\tlet stack: string[] = [];\r\n\t\twhile (p != null) {\r\n\t\t\t// compute what follows who invoked us\r\n\t\t\tlet ruleIndex: number = p.ruleIndex;\r\n\t\t\tif (ruleIndex < 0) {\r\n\t\t\t\tstack.push(\"n/a\");\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(ruleNames[ruleIndex]);\r\n\t\t\t}\r\n\t\t\tp = p._parent as RuleContext;\r\n\t\t}\r\n\t\treturn stack;\r\n\t}\r\n\r\n\t/** For debugging and other purposes. */\r\n\tpublic getDFAStrings(): string[] {\r\n\t\tlet s: string[] = [];\r\n\t\tfor (let dfa of this._interp.atn.decisionToDFA) {\r\n\t\t\ts.push(dfa.toString(this.vocabulary, this.ruleNames));\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\t/** For debugging and other purposes. */\r\n\tpublic dumpDFA(): void {\r\n\t\tlet seenOne: boolean = false;\r\n\t\tfor (let dfa of this._interp.atn.decisionToDFA) {\r\n\t\t\tif (!dfa.isEmpty) {\r\n\t\t\t\tif (seenOne) {\r\n\t\t\t\t\tconsole.log();\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Decision \" + dfa.decision + \":\");\r\n\t\t\t\tprocess.stdout.write(dfa.toString(this.vocabulary, this.ruleNames));\r\n\t\t\t\tseenOne = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sourceName(): string {\r\n\t\treturn this._input.sourceName;\r\n\t}\r\n\r\n\t@Override\r\n\tget parseInfo(): Promise<ParseInfo | undefined> {\r\n\t\treturn import(\"./atn/ProfilingATNSimulator\").then((m) => {\r\n\t\t\tlet interp: ParserATNSimulator = this.interpreter;\r\n\t\t\tif (interp instanceof m.ProfilingATNSimulator) {\r\n\t\t\t\treturn new ParseInfo(interp);\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @since 4.3\r\n\t */\r\n\tpublic async setProfile(profile: boolean): Promise<void> {\r\n\t\tlet m = await import(\"./atn/ProfilingATNSimulator\");\r\n\t\tlet interp: ParserATNSimulator = this.interpreter;\r\n\t\tif (profile) {\r\n\t\t\tif (!(interp instanceof m.ProfilingATNSimulator)) {\r\n\t\t\t\tthis.interpreter = new m.ProfilingATNSimulator(this);\r\n\t\t\t}\r\n\t\t} else if (interp instanceof m.ProfilingATNSimulator) {\r\n\t\t\tthis.interpreter = new ParserATNSimulator(this.atn, this);\r\n\t\t}\r\n\r\n\t\tthis.interpreter.setPredictionMode(interp.getPredictionMode());\r\n\t}\r\n\r\n\t/** During a parse is sometimes useful to listen in on the rule entry and exit\r\n\t *  events as well as token matches. This is for quick and dirty debugging.\r\n\t */\r\n\tset isTrace(trace: boolean) {\r\n\t\tif (!trace) {\r\n\t\t\tif (this._tracer) {\r\n\t\t\t\tthis.removeParseListener(this._tracer);\r\n\t\t\t\tthis._tracer = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._tracer) {\r\n\t\t\t\tthis.removeParseListener(this._tracer);\r\n\t\t\t} else {\r\n\t\t\t\tthis._tracer = new TraceListener(this.ruleNames, this._input);\r\n\t\t\t}\r\n\r\n\t\t\tthis.addParseListener(this._tracer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets whether a {@link TraceListener} is registered as a parse listener\r\n\t * for the parser.\r\n\t */\r\n\tget isTrace(): boolean {\r\n\t\treturn this._tracer != null;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:53.1043451-07:00\r\n\r\nimport { ActionTransition } from \"./atn/ActionTransition\";\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNState } from \"./atn/ATNState\";\r\nimport { ATNStateType } from \"./atn/ATNStateType\";\r\nimport { AtomTransition } from \"./atn/AtomTransition\";\r\nimport { BitSet } from \"./misc/BitSet\";\r\nimport { DecisionState } from \"./atn/DecisionState\";\r\nimport { FailedPredicateException } from \"./FailedPredicateException\";\r\nimport { InputMismatchException } from \"./InputMismatchException\";\r\nimport { InterpreterRuleContext } from \"./InterpreterRuleContext\";\r\nimport { LoopEndState } from \"./atn/LoopEndState\";\r\nimport { NotNull } from \"./Decorators\";\r\nimport { Override } from \"./Decorators\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserATNSimulator } from \"./atn/ParserATNSimulator\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { PrecedencePredicateTransition } from \"./atn/PrecedencePredicateTransition\";\r\nimport { PredicateTransition } from \"./atn/PredicateTransition\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { RuleStartState } from \"./atn/RuleStartState\";\r\nimport { RuleTransition } from \"./atn/RuleTransition\";\r\nimport { StarLoopEntryState } from \"./atn/StarLoopEntryState\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenStream } from \"./TokenStream\";\r\nimport { Transition } from \"./atn/Transition\";\r\nimport { TransitionType } from \"./atn/TransitionType\";\r\nimport { Vocabulary } from \"./Vocabulary\";\r\n\r\n/** A parser simulator that mimics what ANTLR's generated\r\n *  parser code does. A ParserATNSimulator is used to make\r\n *  predictions via adaptivePredict but this class moves a pointer through the\r\n *  ATN to simulate parsing. ParserATNSimulator just\r\n *  makes us efficient rather than having to backtrack, for example.\r\n *\r\n *  This properly creates parse trees even for left recursive rules.\r\n *\r\n *  We rely on the left recursive rule invocation and special predicate\r\n *  transitions to make left recursive rules work.\r\n *\r\n *  See TestParserInterpreter for examples.\r\n */\r\nexport class ParserInterpreter extends Parser {\r\n\tprotected _grammarFileName: string;\r\n\tprotected _atn: ATN;\r\n\t/** This identifies StarLoopEntryState's that begin the (...)*\r\n\t *  precedence loops of left recursive rules.\r\n\t */\r\n\tprotected pushRecursionContextStates: BitSet;\r\n\r\n\tprotected _ruleNames: string[];\r\n\t@NotNull\r\n\tprivate _vocabulary: Vocabulary;\r\n\r\n\t/** This stack corresponds to the _parentctx, _parentState pair of locals\r\n\t *  that would exist on call stack frames with a recursive descent parser;\r\n\t *  in the generated function for a left-recursive rule you'd see:\r\n\t *\r\n\t *  private EContext e(int _p) {\r\n\t *      ParserRuleContext _parentctx = _ctx;    // Pair.a\r\n\t *      int _parentState = state;          // Pair.b\r\n\t *      ...\r\n\t *  }\r\n\t *\r\n\t *  Those values are used to create new recursive rule invocation contexts\r\n\t *  associated with left operand of an alt like \"expr '*' expr\".\r\n\t */\r\n\tprotected readonly _parentContextStack: Array<[ParserRuleContext, number]> = [];\r\n\r\n\t/** We need a map from (decision,inputIndex)->forced alt for computing ambiguous\r\n\t *  parse trees. For now, we allow exactly one override.\r\n\t */\r\n\tprotected overrideDecision: number = -1;\r\n\tprotected overrideDecisionInputIndex: number = -1;\r\n\tprotected overrideDecisionAlt: number = -1;\r\n\tprotected overrideDecisionReached: boolean = false; // latch and only override once; error might trigger infinite loop\r\n\r\n\t/** What is the current context when we override a decisions?  This tells\r\n\t *  us what the root of the parse tree is when using override\r\n\t *  for an ambiguity/lookahead check.\r\n\t */\r\n\tprotected _overrideDecisionRoot?: InterpreterRuleContext = undefined;\r\n\r\n\tprotected _rootContext!: InterpreterRuleContext;\r\n\r\n\t/** A copy constructor that creates a new parser interpreter by reusing\r\n\t *  the fields of a previous interpreter.\r\n\t *\r\n\t *  @param old The interpreter to copy\r\n\t *\r\n\t *  @since 4.5\r\n\t */\r\n\tconstructor(/*@NotNull*/ old: ParserInterpreter);\r\n\tconstructor(\r\n\t\tgrammarFileName: string, /*@NotNull*/ vocabulary: Vocabulary,\r\n\t\truleNames: string[], atn: ATN, input: TokenStream);\r\n\tconstructor(\r\n\t\tgrammarFileName: ParserInterpreter | string, @NotNull vocabulary?: Vocabulary,\r\n\t\truleNames?: string[], atn?: ATN, input?: TokenStream) {\r\n\t\tsuper(grammarFileName instanceof ParserInterpreter ? grammarFileName.inputStream : input!);\r\n\t\tif (grammarFileName instanceof ParserInterpreter) {\r\n\t\t\tlet old: ParserInterpreter = grammarFileName;\r\n\t\t\tthis._grammarFileName = old._grammarFileName;\r\n\t\t\tthis._atn = old._atn;\r\n\t\t\tthis.pushRecursionContextStates = old.pushRecursionContextStates;\r\n\t\t\tthis._ruleNames = old._ruleNames;\r\n\t\t\tthis._vocabulary = old._vocabulary;\r\n\t\t\tthis.interpreter = new ParserATNSimulator(this._atn, this);\r\n\t\t} else {\r\n\t\t\t// The second constructor requires non-null arguments\r\n\t\t\tvocabulary = vocabulary!;\r\n\t\t\truleNames = ruleNames!;\r\n\t\t\tatn = atn!;\r\n\r\n\t\t\tthis._grammarFileName = grammarFileName;\r\n\t\t\tthis._atn = atn;\r\n\t\t\tthis._ruleNames = ruleNames.slice(0);\r\n\t\t\tthis._vocabulary = vocabulary;\r\n\r\n\t\t\t// identify the ATN states where pushNewRecursionContext() must be called\r\n\t\t\tthis.pushRecursionContextStates = new BitSet(atn.states.length);\r\n\t\t\tfor (let state of atn.states) {\r\n\t\t\t\tif (!(state instanceof StarLoopEntryState)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (state.precedenceRuleDecision) {\r\n\t\t\t\t\tthis.pushRecursionContextStates.set(state.stateNumber);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// get atn simulator that knows how to do predictions\r\n\t\t\tthis.interpreter = new ParserATNSimulator(atn, this);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reset(resetInput?: boolean): void {\r\n\t\tif (resetInput === undefined) {\r\n\t\t\tsuper.reset();\r\n\t\t} else {\r\n\t\t\tsuper.reset(resetInput);\r\n\t\t}\r\n\r\n\t\tthis.overrideDecisionReached = false;\r\n\t\tthis._overrideDecisionRoot = undefined;\r\n\t}\r\n\r\n\t@Override\r\n\tget atn(): ATN {\r\n\t\treturn this._atn;\r\n\t}\r\n\r\n\t@Override\r\n\tget vocabulary(): Vocabulary {\r\n\t\treturn this._vocabulary;\r\n\t}\r\n\r\n\t@Override\r\n\tget ruleNames(): string[] {\r\n\t\treturn this._ruleNames;\r\n\t}\r\n\r\n\t@Override\r\n\tget grammarFileName(): string {\r\n\t\treturn this._grammarFileName;\r\n\t}\r\n\r\n\t/** Begin parsing at startRuleIndex */\r\n\tpublic parse(startRuleIndex: number): ParserRuleContext {\r\n\t\tlet startRuleStartState: RuleStartState = this._atn.ruleToStartState[startRuleIndex];\r\n\r\n\t\tthis._rootContext = this.createInterpreterRuleContext(undefined, ATNState.INVALID_STATE_NUMBER, startRuleIndex);\r\n\t\tif (startRuleStartState.isPrecedenceRule) {\r\n\t\t\tthis.enterRecursionRule(this._rootContext, startRuleStartState.stateNumber, startRuleIndex, 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.enterRule(this._rootContext, startRuleStartState.stateNumber, startRuleIndex);\r\n\t\t}\r\n\r\n\t\twhile (true) {\r\n\t\t\tlet p: ATNState = this.atnState;\r\n\t\t\tswitch (p.stateType) {\r\n\t\t\tcase ATNStateType.RULE_STOP:\r\n\t\t\t\t// pop; return from rule\r\n\t\t\t\tif (this._ctx.isEmpty) {\r\n\t\t\t\t\tif (startRuleStartState.isPrecedenceRule) {\r\n\t\t\t\t\t\tlet result: ParserRuleContext = this._ctx;\r\n\t\t\t\t\t\tlet parentContext: [ParserRuleContext, number] = this._parentContextStack.pop() !;\r\n\t\t\t\t\t\tthis.unrollRecursionContexts(parentContext[0]);\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.exitRule();\r\n\t\t\t\t\t\treturn this._rootContext;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.visitRuleStopState(p);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.visitState(p);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tif (e instanceof RecognitionException) {\r\n\t\t\t\t\t\tthis.state = this._atn.ruleToStopState[p.ruleIndex].stateNumber;\r\n\t\t\t\t\t\tthis.context.exception = e;\r\n\t\t\t\t\t\tthis.errorHandler.reportError(this, e);\r\n\t\t\t\t\t\tthis.recover(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic enterRecursionRule(localctx: ParserRuleContext, state: number, ruleIndex: number, precedence: number): void {\r\n\t\tthis._parentContextStack.push([this._ctx, localctx.invokingState]);\r\n\t\tsuper.enterRecursionRule(localctx, state, ruleIndex, precedence);\r\n\t}\r\n\r\n\tprotected get atnState(): ATNState {\r\n\t\treturn this._atn.states[this.state];\r\n\t}\r\n\r\n\tprotected visitState(p: ATNState): void {\r\n\t\tlet predictedAlt: number = 1;\r\n\t\tif (p.numberOfTransitions > 1) {\r\n\t\t\tpredictedAlt = this.visitDecisionState(p as DecisionState);\r\n\t\t}\r\n\r\n\t\tlet transition: Transition = p.transition(predictedAlt - 1);\r\n\t\tswitch (transition.serializationType) {\r\n\t\tcase TransitionType.EPSILON:\r\n\t\t\tif (this.pushRecursionContextStates.get(p.stateNumber) &&\r\n\t\t\t\t!(transition.target instanceof LoopEndState)) {\r\n\t\t\t\t// We are at the start of a left recursive rule's (...)* loop\r\n\t\t\t\t// and we're not taking the exit branch of loop.\r\n\t\t\t\tlet parentContext = this._parentContextStack[this._parentContextStack.length - 1];\r\n\t\t\t\tlet localctx: InterpreterRuleContext =\r\n\t\t\t\t\tthis.createInterpreterRuleContext(parentContext[0], parentContext[1], this._ctx.ruleIndex);\r\n\t\t\t\tthis.pushNewRecursionContext(localctx,\r\n\t\t\t\t\tthis._atn.ruleToStartState[p.ruleIndex].stateNumber,\r\n\t\t\t\t\tthis._ctx.ruleIndex);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.ATOM:\r\n\t\t\tthis.match((transition as AtomTransition)._label);\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.RANGE:\r\n\t\tcase TransitionType.SET:\r\n\t\tcase TransitionType.NOT_SET:\r\n\t\t\tif (!transition.matches(this._input.LA(1), Token.MIN_USER_TOKEN_TYPE, 65535)) {\r\n\t\t\t\tthis.recoverInline();\r\n\t\t\t}\r\n\t\t\tthis.matchWildcard();\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.WILDCARD:\r\n\t\t\tthis.matchWildcard();\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.RULE:\r\n\t\t\tlet ruleStartState: RuleStartState = transition.target as RuleStartState;\r\n\t\t\tlet ruleIndex: number = ruleStartState.ruleIndex;\r\n\t\t\tlet newctx: InterpreterRuleContext = this.createInterpreterRuleContext(this._ctx, p.stateNumber, ruleIndex);\r\n\t\t\tif (ruleStartState.isPrecedenceRule) {\r\n\t\t\t\tthis.enterRecursionRule(newctx, ruleStartState.stateNumber, ruleIndex, (transition as RuleTransition).precedence);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.enterRule(newctx, transition.target.stateNumber, ruleIndex);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.PREDICATE:\r\n\t\t\tlet predicateTransition: PredicateTransition = transition as PredicateTransition;\r\n\t\t\tif (!this.sempred(this._ctx, predicateTransition.ruleIndex, predicateTransition.predIndex)) {\r\n\t\t\t\tthrow new FailedPredicateException(this);\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.ACTION:\r\n\t\t\tlet actionTransition: ActionTransition = transition as ActionTransition;\r\n\t\t\tthis.action(this._ctx, actionTransition.ruleIndex, actionTransition.actionIndex);\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.PRECEDENCE:\r\n\t\t\tif (!this.precpred(this._ctx, (transition as PrecedencePredicateTransition).precedence)) {\r\n\t\t\t\tlet precedence = (transition as PrecedencePredicateTransition).precedence;\r\n\t\t\t\tthrow new FailedPredicateException(this, `precpred(_ctx, ${precedence})`);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"UnsupportedOperationException: Unrecognized ATN transition type.\");\r\n\t\t}\r\n\r\n\t\tthis.state = transition.target.stateNumber;\r\n\t}\r\n\r\n\t/** Method visitDecisionState() is called when the interpreter reaches\r\n\t *  a decision state (instance of DecisionState). It gives an opportunity\r\n\t *  for subclasses to track interesting things.\r\n\t */\r\n\tprotected visitDecisionState(p: DecisionState): number {\r\n\t\tlet predictedAlt: number;\r\n\t\tthis.errorHandler.sync(this);\r\n\t\tlet decision: number = p.decision;\r\n\t\tif (decision === this.overrideDecision && this._input.index === this.overrideDecisionInputIndex && !this.overrideDecisionReached) {\r\n\t\t\tpredictedAlt = this.overrideDecisionAlt;\r\n\t\t\tthis.overrideDecisionReached = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpredictedAlt = this.interpreter.adaptivePredict(this._input, decision, this._ctx);\r\n\t\t}\r\n\t\treturn predictedAlt;\r\n\t}\r\n\r\n\t/** Provide simple \"factory\" for InterpreterRuleContext's.\r\n\t *  @since 4.5.1\r\n\t */\r\n\tprotected createInterpreterRuleContext(\r\n\t\tparent: ParserRuleContext | undefined,\r\n\t\tinvokingStateNumber: number,\r\n\t\truleIndex: number): InterpreterRuleContext {\r\n\t\treturn new InterpreterRuleContext(ruleIndex, parent, invokingStateNumber);\r\n\t}\r\n\r\n\tprotected visitRuleStopState(p: ATNState): void {\r\n\t\tlet ruleStartState: RuleStartState = this._atn.ruleToStartState[p.ruleIndex];\r\n\t\tif (ruleStartState.isPrecedenceRule) {\r\n\t\t\tlet parentContext: [ParserRuleContext, number] = this._parentContextStack.pop()!;\r\n\t\t\tthis.unrollRecursionContexts(parentContext[0]);\r\n\t\t\tthis.state = parentContext[1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\r\n\t\tlet ruleTransition: RuleTransition = this._atn.states[this.state].transition(0) as RuleTransition;\r\n\t\tthis.state = ruleTransition.followState.stateNumber;\r\n\t}\r\n\r\n\t/** Override this parser interpreters normal decision-making process\r\n\t *  at a particular decision and input token index. Instead of\r\n\t *  allowing the adaptive prediction mechanism to choose the\r\n\t *  first alternative within a block that leads to a successful parse,\r\n\t *  force it to take the alternative, 1..n for n alternatives.\r\n\t *\r\n\t *  As an implementation limitation right now, you can only specify one\r\n\t *  override. This is sufficient to allow construction of different\r\n\t *  parse trees for ambiguous input. It means re-parsing the entire input\r\n\t *  in general because you're never sure where an ambiguous sequence would\r\n\t *  live in the various parse trees. For example, in one interpretation,\r\n\t *  an ambiguous input sequence would be matched completely in expression\r\n\t *  but in another it could match all the way back to the root.\r\n\t *\r\n\t *  s : e '!'? ;\r\n\t *  e : ID\r\n\t *    | ID '!'\r\n\t *    ;\r\n\t *\r\n\t *  Here, x! can be matched as (s (e ID) !) or (s (e ID !)). In the first\r\n\t *  case, the ambiguous sequence is fully contained only by the root.\r\n\t *  In the second case, the ambiguous sequences fully contained within just\r\n\t *  e, as in: (e ID !).\r\n\t *\r\n\t *  Rather than trying to optimize this and make\r\n\t *  some intelligent decisions for optimization purposes, I settled on\r\n\t *  just re-parsing the whole input and then using\r\n\t *  {link Trees#getRootOfSubtreeEnclosingRegion} to find the minimal\r\n\t *  subtree that contains the ambiguous sequence. I originally tried to\r\n\t *  record the call stack at the point the parser detected and ambiguity but\r\n\t *  left recursive rules create a parse tree stack that does not reflect\r\n\t *  the actual call stack. That impedance mismatch was enough to make\r\n\t *  it it challenging to restart the parser at a deeply nested rule\r\n\t *  invocation.\r\n\t *\r\n\t *  Only parser interpreters can override decisions so as to avoid inserting\r\n\t *  override checking code in the critical ALL(*) prediction execution path.\r\n\t *\r\n\t *  @since 4.5\r\n\t */\r\n\tpublic addDecisionOverride(decision: number, tokenIndex: number, forcedAlt: number): void {\r\n\t\tthis.overrideDecision = decision;\r\n\t\tthis.overrideDecisionInputIndex = tokenIndex;\r\n\t\tthis.overrideDecisionAlt = forcedAlt;\r\n\t}\r\n\r\n\tget overrideDecisionRoot(): InterpreterRuleContext | undefined {\r\n\t\treturn this._overrideDecisionRoot;\r\n\t}\r\n\r\n\t/** Rely on the error handler for this parser but, if no tokens are consumed\r\n\t *  to recover, add an error node. Otherwise, nothing is seen in the parse\r\n\t *  tree.\r\n\t */\r\n\tprotected recover(e: RecognitionException): void {\r\n\t\tlet i: number = this._input.index;\r\n\t\tthis.errorHandler.recover(this, e);\r\n\t\tif (this._input.index === i) {\r\n\t\t\t// no input consumed, better add an error node\r\n\t\t\tlet tok: Token | undefined = e.getOffendingToken();\r\n\t\t\tif (!tok) {\r\n\t\t\t\tthrow new Error(\"Expected exception to have an offending token\");\r\n\t\t\t}\r\n\r\n\t\t\tlet source = tok.tokenSource;\r\n\t\t\tlet stream = source !== undefined ? source.inputStream : undefined;\r\n\t\t\tlet sourcePair = { source, stream };\r\n\r\n\t\t\tif (e instanceof InputMismatchException) {\r\n\t\t\t\tlet expectedTokens = e.expectedTokens;\r\n\t\t\t\tif (expectedTokens === undefined) {\r\n\t\t\t\t\tthrow new Error(\"Expected the exception to provide expected tokens\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet expectedTokenType: number = Token.INVALID_TYPE;\r\n\t\t\t\tif (!expectedTokens.isNil) {\r\n\t\t\t\t\t// get any element\r\n\t\t\t\t\texpectedTokenType = expectedTokens.minElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet errToken: Token =\r\n\t\t\t\t\tthis.tokenFactory.create(sourcePair,\r\n\t\t\t\t\t\texpectedTokenType, tok.text,\r\n\t\t\t\t\t\tToken.DEFAULT_CHANNEL,\r\n\t\t\t\t\t\t-1, -1, // invalid start/stop\r\n\t\t\t\t\t\ttok.line, tok.charPositionInLine);\r\n\t\t\t\tthis._ctx.addErrorNode(this.createErrorNode(this._ctx, errToken));\r\n\t\t\t}\r\n\t\t\telse { // NoViableAlt\r\n\t\t\t\tlet source = tok.tokenSource;\r\n\t\t\t\tlet errToken: Token =\r\n\t\t\t\t\tthis.tokenFactory.create(sourcePair,\r\n\t\t\t\t\t\tToken.INVALID_TYPE, tok.text,\r\n\t\t\t\t\t\tToken.DEFAULT_CHANNEL,\r\n\t\t\t\t\t\t-1, -1, // invalid start/stop\r\n\t\t\t\t\t\ttok.line, tok.charPositionInLine);\r\n\t\t\t\tthis._ctx.addErrorNode(this.createErrorNode(this._ctx, errToken));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected recoverInline(): Token {\r\n\t\treturn this._errHandler.recoverInline(this);\r\n\t}\r\n\r\n\t/** Return the root of the parse, which can be useful if the parser\r\n\t *  bails out. You still can access the top node. Note that,\r\n\t *  because of the way left recursive rules add children, it's possible\r\n\t *  that the root will not have any children if the start rule immediately\r\n\t *  called and left recursive rule that fails.\r\n\t *\r\n\t * @since 4.5.1\r\n\t */\r\n\tget rootContext(): InterpreterRuleContext {\r\n\t\treturn this._rootContext;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:56.6285494-07:00\r\nimport { ErrorNode } from \"./tree/ErrorNode\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Override } from \"./Decorators\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParseTree } from \"./tree/ParseTree\";\r\nimport { ParseTreeListener } from \"./tree/ParseTreeListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { TerminalNode } from \"./tree/TerminalNode\";\r\nimport { Token } from \"./Token\";\r\n\r\n/** A rule invocation record for parsing.\r\n *\r\n *  Contains all of the information about the current rule not stored in the\r\n *  RuleContext. It handles parse tree children list, Any ATN state\r\n *  tracing, and the default values available for rule invocations:\r\n *  start, stop, rule index, current alt number.\r\n *\r\n *  Subclasses made for each rule and grammar track the parameters,\r\n *  return values, locals, and labels specific to that rule. These\r\n *  are the objects that are returned from rules.\r\n *\r\n *  Note text is not an actual field of a rule return value; it is computed\r\n *  from start and stop using the input stream's toString() method.  I\r\n *  could add a ctor to this so that we can pass in and store the input\r\n *  stream, but I'm not sure we want to do that.  It would seem to be undefined\r\n *  to get the .text property anyway if the rule matches tokens from multiple\r\n *  input streams.\r\n *\r\n *  I do not use getters for fields of objects that are used simply to\r\n *  group values such as this aggregate.  The getters/setters are there to\r\n *  satisfy the superclass interface.\r\n */\r\nexport class ParserRuleContext extends RuleContext {\r\n\tprivate static readonly EMPTY: ParserRuleContext = new ParserRuleContext();\r\n\r\n\t/** If we are debugging or building a parse tree for a visitor,\r\n\t *  we need to track all of the tokens and rule invocations associated\r\n\t *  with this rule's context. This is empty for parsing w/o tree constr.\r\n\t *  operation because we don't the need to track the details about\r\n\t *  how we parse this rule.\r\n\t */\r\n\tpublic children?: ParseTree[];\r\n\r\n\t/** For debugging/tracing purposes, we want to track all of the nodes in\r\n\t *  the ATN traversed by the parser for a particular rule.\r\n\t *  This list indicates the sequence of ATN nodes used to match\r\n\t *  the elements of the children list. This list does not include\r\n\t *  ATN nodes and other rules used to match rule invocations. It\r\n\t *  traces the rule invocation node itself but nothing inside that\r\n\t *  other rule's ATN submachine.\r\n\t *\r\n\t *  There is NOT a one-to-one correspondence between the children and\r\n\t *  states list. There are typically many nodes in the ATN traversed\r\n\t *  for each element in the children list. For example, for a rule\r\n\t *  invocation there is the invoking state and the following state.\r\n\t *\r\n\t *  The parser state property updates field s and adds it to this list\r\n\t *  if we are debugging/tracing.\r\n\t *\r\n\t *  This does not trace states visited during prediction.\r\n\t */\r\n//\tpublic Array<number> states;\r\n\r\n\tpublic _start!: Token;\r\n\tpublic _stop: Token | undefined;\r\n\r\n\t/**\r\n\t * The exception that forced this rule to return. If the rule successfully\r\n\t * completed, this is `undefined`.\r\n\t */\r\n\tpublic exception?: RecognitionException;\r\n\r\n\tconstructor();\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingStateNumber: number);\r\n\tconstructor(parent?: ParserRuleContext, invokingStateNumber?: number) {\r\n\t\tif (invokingStateNumber == null) {\r\n\t\t\tsuper();\r\n\t\t} else {\r\n\t\t\tsuper(parent, invokingStateNumber);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static emptyContext(): ParserRuleContext {\r\n\t\treturn ParserRuleContext.EMPTY;\r\n\t}\r\n\r\n\t/**\r\n\t * COPY a ctx (I'm deliberately not using copy constructor) to avoid\r\n\t * confusion with creating node with parent. Does not copy children\r\n\t * (except error leaves).\r\n\t *\r\n\t * This is used in the generated parser code to flip a generic XContext\r\n\t * node for rule X to a YContext for alt label Y. In that sense, it is not\r\n\t * really a generic copy function.\r\n\t *\r\n\t * If we do an error sync() at start of a rule, we might add error nodes\r\n\t * to the generic XContext so this function must copy those nodes to the\r\n\t * YContext as well else they are lost!\r\n\t */\r\n\tpublic copyFrom(ctx: ParserRuleContext): void {\r\n\t\tthis._parent = ctx._parent;\r\n\t\tthis.invokingState = ctx.invokingState;\r\n\r\n\t\tthis._start = ctx._start;\r\n\t\tthis._stop = ctx._stop;\r\n\r\n\t\t// copy any error nodes to alt label node\r\n\t\tif (ctx.children) {\r\n\t\t\tthis.children = [];\r\n\t\t\t// reset parent pointer for any error nodes\r\n\t\t\tfor (let child of ctx.children) {\r\n\t\t\t\tif (child instanceof ErrorNode) {\r\n\t\t\t\t\tthis.addChild(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Double dispatch methods for listeners\r\n\r\n\tpublic enterRule(listener: ParseTreeListener): void {\r\n\t\t// intentionally empty\r\n\t}\r\n\tpublic exitRule(listener: ParseTreeListener): void {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t/** Add a parse tree node to this as a child.  Works for\r\n\t *  internal and leaf nodes. Does not set parent link;\r\n\t *  other add methods must do that. Other addChild methods\r\n\t *  call this.\r\n\t *\r\n\t *  We cannot set the parent pointer of the incoming node\r\n\t *  because the existing interfaces do not have a setParent()\r\n\t *  method and I don't want to break backward compatibility for this.\r\n\t *\r\n\t *  @since 4.7\r\n\t */\r\n\tpublic addAnyChild<T extends ParseTree>(t: T): T {\r\n\t\tif (!this.children) {\r\n\t\t\tthis.children = [t];\r\n\t\t} else {\r\n\t\t\tthis.children.push(t);\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/** Add a token leaf node child and force its parent to be this node. */\r\n\tpublic addChild(t: TerminalNode): void;\r\n\tpublic addChild(ruleInvocation: RuleContext): void;\r\n\t/**\r\n\t * Add a child to this node based upon matchedToken. It\r\n\t * creates a TerminalNodeImpl rather than using\r\n\t * {@link Parser#createTerminalNode(ParserRuleContext, Token)}. I'm leaving this\r\n\t * in for compatibility but the parser doesn't use this anymore.\r\n\t *\r\n\t * @deprecated Use another overload instead.\r\n\t */\r\n\tpublic addChild(matchedToken: Token): TerminalNode;\r\n\tpublic addChild(t: TerminalNode | RuleContext | Token): TerminalNode | void {\r\n\t\tlet result: TerminalNode | void;\r\n\t\tif (t instanceof TerminalNode) {\r\n\t\t\tt.setParent(this);\r\n\t\t\tthis.addAnyChild(t);\r\n\t\t\treturn;\r\n\t\t} else if (t instanceof RuleContext) {\r\n\t\t\t// Does not set parent link\r\n\t\t\tthis.addAnyChild(t);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// Deprecated code path\r\n\t\t\tt = new TerminalNode(t);\r\n\t\t\tthis.addAnyChild(t);\r\n\t\t\tt.setParent(this);\r\n\t\t\treturn t;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Add an error node child and force its parent to be this node.\r\n\t *\r\n\t * @since 4.7\r\n\t */\r\n\tpublic addErrorNode(errorNode: ErrorNode): ErrorNode;\r\n\r\n\t/**\r\n\t * Add a child to this node based upon badToken. It\r\n\t * creates a ErrorNode rather than using\r\n\t * {@link Parser#createErrorNode(ParserRuleContext, Token)}. I'm leaving this\r\n\t * in for compatibility but the parser doesn't use this anymore.\r\n\t *\r\n\t * @deprecated Use another overload instead.\r\n\t */\r\n\tpublic addErrorNode(badToken: Token): ErrorNode;\r\n\tpublic addErrorNode(node: ErrorNode | Token): ErrorNode {\r\n\t\tif (node instanceof ErrorNode) {\r\n\t\t\tconst errorNode: ErrorNode = node;\r\n\t\t\terrorNode.setParent(this);\r\n\t\t\treturn this.addAnyChild(errorNode);\r\n\t\t} else {\r\n\t\t\t// deprecated path\r\n\t\t\tconst badToken: Token = node;\r\n\t\t\tlet t = new ErrorNode(badToken);\r\n\t\t\tthis.addAnyChild(t);\r\n\t\t\tt.setParent(this);\r\n\t\t\treturn t;\r\n\t\t}\r\n\t}\r\n\r\n//\tpublic void trace(int s) {\r\n//\t\tif ( states==null ) states = new ArrayList<Integer>();\r\n//\t\tstates.add(s);\r\n//\t}\r\n\r\n\t/** Used by enterOuterAlt to toss out a RuleContext previously added as\r\n\t *  we entered a rule. If we have # label, we will need to remove\r\n\t *  generic ruleContext object.\r\n\t */\r\n\tpublic removeLastChild(): void {\r\n\t\tif (this.children) {\r\n\t\t\tthis.children.pop();\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\t/** Override to make type more specific */\r\n\tget parent(): ParserRuleContext | undefined {\r\n\t\tlet parent = super.parent;\r\n\t\tif (parent === undefined || parent instanceof ParserRuleContext) {\r\n\t\t\treturn parent;\r\n\t\t}\r\n\r\n\t\tthrow new TypeError(\"Invalid parent type for ParserRuleContext\");\r\n\t}\r\n\r\n\tpublic getChild(i: number): ParseTree;\r\n\tpublic getChild<T extends ParseTree>(i: number, ctxType: { new (...args: any[]): T; }): T;\r\n\t// Note: in TypeScript, order or arguments reversed\r\n\tpublic getChild<T extends ParseTree>(i: number, ctxType?: { new (...args: any[]): T; }): ParseTree {\r\n\t\tif (!this.children || i < 0 || i >= this.children.length) {\r\n\t\t\tthrow new RangeError(\"index parameter must be between >= 0 and <= number of children.\");\r\n\t\t}\r\n\r\n\t\tif (ctxType == null) {\r\n\t\t\treturn this.children[i];\r\n\t\t}\r\n\r\n\t\tlet result = this.tryGetChild(i, ctxType);\r\n\t\tif (result === undefined) {\r\n\t\t\tthrow new Error(\"The specified node does not exist\");\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic tryGetChild<T extends ParseTree>(i: number, ctxType: { new (...args: any[]): T; }): T | undefined {\r\n\t\tif (!this.children || i < 0 || i >= this.children.length) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet j: number = -1; // what node with ctxType have we found?\r\n\t\tfor (let o of this.children) {\r\n\t\t\tif (o instanceof ctxType) {\r\n\t\t\t\tj++;\r\n\t\t\t\tif (j === i) {\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic getToken(ttype: number, i: number): TerminalNode {\r\n\t\tlet result = this.tryGetToken(ttype, i);\r\n\t\tif (result === undefined) {\r\n\t\t\tthrow new Error(\"The specified token does not exist\");\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic tryGetToken(ttype: number, i: number): TerminalNode | undefined {\r\n\t\tif (!this.children || i < 0 || i >= this.children.length) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet j: number = -1; // what token with ttype have we found?\r\n\t\tfor (let o of this.children) {\r\n\t\t\tif (o instanceof TerminalNode) {\r\n\t\t\t\tlet symbol: Token = o.symbol;\r\n\t\t\t\tif (symbol.type === ttype) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t\tif (j === i) {\r\n\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic getTokens(ttype: number): TerminalNode[] {\r\n\t\tlet tokens: TerminalNode[] = [];\r\n\r\n\t\tif (!this.children) {\r\n\t\t\treturn tokens;\r\n\t\t}\r\n\r\n\t\tfor (let o of this.children) {\r\n\t\t\tif (o instanceof TerminalNode) {\r\n\t\t\t\tlet symbol = o.symbol;\r\n\t\t\t\tif (symbol.type === ttype) {\r\n\t\t\t\t\ttokens.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokens;\r\n\t}\r\n\r\n\tget ruleContext(): this {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// NOTE: argument order change from Java version\r\n\tpublic getRuleContext<T extends ParserRuleContext>(i: number, ctxType: { new (...args: any[]): T; }): T {\r\n\t\treturn this.getChild(i, ctxType);\r\n\t}\r\n\r\n\tpublic tryGetRuleContext<T extends ParserRuleContext>(i: number, ctxType: { new (...args: any[]): T; }): T | undefined {\r\n\t\treturn this.tryGetChild(i, ctxType);\r\n\t}\r\n\r\n\tpublic getRuleContexts<T extends ParserRuleContext>(ctxType: { new (...args: any[]): T; }): T[] {\r\n\t\tlet contexts: T[] = [];\r\n\t\tif (!this.children) {\r\n\t\t\treturn contexts;\r\n\t\t}\r\n\r\n\t\tfor (let o of this.children) {\r\n\t\t\tif (o instanceof ctxType) {\r\n\t\t\t\tcontexts.push(o);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn contexts;\r\n\t}\r\n\r\n\t@Override\r\n\tget childCount() {\r\n\t\treturn this.children ? this.children.length : 0;\r\n\t}\r\n\r\n\t@Override\r\n\tget sourceInterval(): Interval {\r\n\t\tif (!this._start) {\r\n\t\t\treturn Interval.INVALID;\r\n\t\t}\r\n\t\tif (!this._stop || this._stop.tokenIndex < this._start.tokenIndex) {\r\n\t\t\treturn Interval.of(this._start.tokenIndex, this._start.tokenIndex - 1); // empty\r\n\t\t}\r\n\t\treturn Interval.of(this._start.tokenIndex, this._stop.tokenIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the initial token in this context.\r\n\t * Note that the range from start to stop is inclusive, so for rules that do not consume anything\r\n\t * (for example, zero length or error productions) this token may exceed stop.\r\n\t */\r\n\tget start(): Token { return this._start; }\r\n\t/**\r\n\t * Get the final token in this context.\r\n\t * Note that the range from start to stop is inclusive, so for rules that do not consume anything\r\n\t * (for example, zero length or error productions) this token may precede start.\r\n\t */\r\n\tget stop(): Token | undefined { return this._stop; }\r\n\r\n\t/** Used for rule context info debugging during parse-time, not so much for ATN debugging */\r\n\tpublic toInfoString(recognizer: Parser): string {\r\n\t\tlet rules: string[] =\r\n\t\t\trecognizer.getRuleInvocationStack(this).reverse();\r\n\t\treturn \"ParserRuleContext\" + rules + \"{\" +\r\n\t\t\t\"start=\" + this._start +\r\n\t\t\t\", stop=\" + this._stop +\r\n\t\t\t\"}\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:56.8126690-07:00\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { Override, NotNull } from \"./Decorators\";\r\n\r\n/**\r\n * This implementation of {@link ANTLRErrorListener} dispatches all calls to a\r\n * collection of delegate listeners. This reduces the effort required to support multiple\r\n * listeners.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ProxyErrorListener<TSymbol, TListener extends ANTLRErrorListener<TSymbol>> implements ANTLRErrorListener<TSymbol> {\r\n\r\n\tconstructor(private delegates: TListener[]) {\r\n\t\tif (!delegates) {\r\n\t\t\tthrow new Error(\"Invalid delegates\");\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getDelegates(): ReadonlyArray<TListener> {\r\n\t\treturn this.delegates;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic syntaxError<T extends TSymbol>(\r\n\t\t@NotNull recognizer: Recognizer<T, any>,\r\n\t\toffendingSymbol: T | undefined,\r\n\t\tline: number,\r\n\t\tcharPositionInLine: number,\r\n\t\t@NotNull msg: string,\r\n\t\te: RecognitionException | undefined): void {\r\n\t\tthis.delegates.forEach((listener) => {\r\n\t\t\tif (listener.syntaxError) {\r\n\t\t\t\tlistener.syntaxError(recognizer, offendingSymbol, line, charPositionInLine, msg, e);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:56.9812284-07:00\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { ATNConfigSet } from \"./atn/ATNConfigSet\";\r\nimport { BitSet } from \"./misc/BitSet\";\r\nimport { DFA } from \"./dfa/DFA\";\r\nimport { Parser } from \"./Parser\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { ProxyErrorListener } from \"./ProxyErrorListener\";\r\nimport { ParserErrorListener } from \"./ParserErrorListener\";\r\nimport { SimulatorState } from \"./atn/SimulatorState\";\r\nimport { Token } from \"./Token\";\r\nimport { Override } from \"./Decorators\";\r\n\r\n/**\r\n * @author Sam Harwell\r\n */\r\nexport class ProxyParserErrorListener extends ProxyErrorListener<Token, ParserErrorListener>\r\n\timplements ParserErrorListener {\r\n\r\n\tconstructor(delegates: ParserErrorListener[]) {\r\n\t\tsuper(delegates);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportAmbiguity(\r\n\t\trecognizer: Parser,\r\n\t\tdfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\texact: boolean,\r\n\t\tambigAlts: BitSet | undefined,\r\n\t\tconfigs: ATNConfigSet): void {\r\n\t\tthis.getDelegates()\r\n\t\t\t.forEach((listener) => {\r\n\t\t\t\tif (listener.reportAmbiguity) {\r\n\t\t\t\t\tlistener.reportAmbiguity(\r\n\t\t\t\t\t\trecognizer,\r\n\t\t\t\t\t\tdfa,\r\n\t\t\t\t\t\tstartIndex,\r\n\t\t\t\t\t\tstopIndex,\r\n\t\t\t\t\t\texact,\r\n\t\t\t\t\t\tambigAlts,\r\n\t\t\t\t\t\tconfigs);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportAttemptingFullContext(\r\n\t\trecognizer: Parser,\r\n\t\tdfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tconflictingAlts: BitSet | undefined,\r\n\t\tconflictState: SimulatorState): void {\r\n\t\tthis.getDelegates()\r\n\t\t\t.forEach((listener) => {\r\n\t\t\t\tif (listener.reportAttemptingFullContext) {\r\n\t\t\t\t\tlistener.reportAttemptingFullContext(\r\n\t\t\t\t\t\trecognizer,\r\n\t\t\t\t\t\tdfa,\r\n\t\t\t\t\t\tstartIndex,\r\n\t\t\t\t\t\tstopIndex,\r\n\t\t\t\t\t\tconflictingAlts,\r\n\t\t\t\t\t\tconflictState);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reportContextSensitivity(\r\n\t\trecognizer: Parser,\r\n\t\tdfa: DFA,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tprediction: number,\r\n\t\tacceptState: SimulatorState): void {\r\n\t\tthis.getDelegates()\r\n\t\t\t.forEach((listener) => {\r\n\t\t\t\tif (listener.reportContextSensitivity) {\r\n\t\t\t\t\tlistener.reportContextSensitivity(\r\n\t\t\t\t\t\trecognizer,\r\n\t\t\t\t\t\tdfa,\r\n\t\t\t\t\t\tstartIndex,\r\n\t\t\t\t\t\tstopIndex,\r\n\t\t\t\t\t\tprediction,\r\n\t\t\t\t\t\tacceptState);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.0697674-07:00\r\nimport { CharStream } from \"./CharStream\";\r\nimport { IntervalSet } from \"./misc/IntervalSet\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { Lexer } from \"./Lexer\";\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { Token } from \"./Token\";\r\n\r\n\r\n/** The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\r\n *  3 kinds of errors: prediction errors, failed predicate errors, and\r\n *  mismatched input errors. In each case, the parser knows where it is\r\n *  in the input, where it is in the ATN, the rule invocation stack,\r\n *  and what kind of problem occurred.\r\n */\r\nexport class RecognitionException extends Error {\r\n\t// private static serialVersionUID: number =  -3861826954750022374L;\r\n\r\n\t/** The {@link Recognizer} where this exception originated. */\r\n\tprivate _recognizer?: Recognizer<any, any>;\r\n\r\n\tprivate ctx?: RuleContext;\r\n\r\n\tprivate input?: IntStream;\r\n\r\n\t/**\r\n\t * The current {@link Token} when an error occurred. Since not all streams\r\n\t * support accessing symbols by index, we have to track the {@link Token}\r\n\t * instance itself.\r\n\t */\r\n\tprivate offendingToken?: Token;\r\n\r\n\tprivate _offendingState: number = -1;\r\n\r\n\tconstructor(\r\n\t\tlexer: Lexer | undefined,\r\n\t\tinput: CharStream);\r\n\r\n\tconstructor(\r\n\t\trecognizer: Recognizer<Token, any> | undefined,\r\n\t\tinput: IntStream | undefined,\r\n\t\tctx: ParserRuleContext | undefined);\r\n\r\n\tconstructor(\r\n\t\trecognizer: Recognizer<Token, any> | undefined,\r\n\t\tinput: IntStream | undefined,\r\n\t\tctx: ParserRuleContext | undefined,\r\n\t\tmessage: string);\r\n\r\n\tconstructor(\r\n\t\trecognizer: Lexer | Recognizer<Token, any> | undefined,\r\n\t\tinput: CharStream | IntStream | undefined,\r\n\t\tctx?: ParserRuleContext,\r\n\t\tmessage?: string) {\r\n\t\tsuper(message);\r\n\r\n\t\tthis._recognizer = recognizer;\r\n\t\tthis.input = input;\r\n\t\tthis.ctx = ctx;\r\n\t\tif (recognizer) {\r\n\t\t\tthis._offendingState = recognizer.state;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the ATN state number the parser was in at the time the error\r\n\t * occurred. For {@link NoViableAltException} and\r\n\t * {@link LexerNoViableAltException} exceptions, this is the\r\n\t * {@link DecisionState} number. For others, it is the state whose outgoing\r\n\t * edge we couldn't match.\r\n\t *\r\n\t * If the state number is not known, this method returns -1.\r\n\t */\r\n\tget offendingState(): number {\r\n\t\treturn this._offendingState;\r\n\t}\r\n\r\n\tprotected setOffendingState(offendingState: number): void {\r\n\t\tthis._offendingState = offendingState;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the set of input symbols which could potentially follow the\r\n\t * previously matched symbol at the time this exception was thrown.\r\n\t *\r\n\t * If the set of expected tokens is not known and could not be computed,\r\n\t * this method returns `undefined`.\r\n\t *\r\n\t * @returns The set of token types that could potentially follow the current\r\n\t * state in the ATN, or `undefined` if the information is not available.\r\n\t */\r\n\tget expectedTokens(): IntervalSet | undefined {\r\n\t\tif (this._recognizer) {\r\n\t\t\treturn this._recognizer.atn.getExpectedTokens(this._offendingState, this.ctx);\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the {@link RuleContext} at the time this exception was thrown.\r\n\t *\r\n\t * If the context is not available, this method returns `undefined`.\r\n\t *\r\n\t * @returns The {@link RuleContext} at the time this exception was thrown.\r\n\t * If the context is not available, this method returns `undefined`.\r\n\t */\r\n\tget context(): RuleContext | undefined {\r\n\t\treturn this.ctx;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the input stream which is the symbol source for the recognizer where\r\n\t * this exception was thrown.\r\n\t *\r\n\t * If the input stream is not available, this method returns `undefined`.\r\n\t *\r\n\t * @returns The input stream which is the symbol source for the recognizer\r\n\t * where this exception was thrown, or `undefined` if the stream is not\r\n\t * available.\r\n\t */\r\n\r\n\tget inputStream(): IntStream | undefined {\r\n\t\treturn this.input;\r\n\t}\r\n\r\n\tpublic getOffendingToken(recognizer?: Recognizer<Token, any>): Token | undefined {\r\n\t\tif (recognizer && recognizer !== this._recognizer) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\treturn this.offendingToken;\r\n\t}\r\n\r\n\tprotected setOffendingToken<TSymbol extends Token>(\r\n\t\trecognizer: Recognizer<TSymbol, any>,\r\n\t\toffendingToken?: TSymbol): void {\r\n\t\tif (recognizer === this._recognizer) {\r\n\t\t\tthis.offendingToken = offendingToken;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the {@link Recognizer} where this exception occurred.\r\n\t *\r\n\t * If the recognizer is not available, this method returns `undefined`.\r\n\t *\r\n\t * @returns The recognizer where this exception occurred, or `undefined` if\r\n\t * the recognizer is not available.\r\n\t */\r\n\tget recognizer(): Recognizer<any, any> | undefined {\r\n\t\treturn this._recognizer;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.1954441-07:00\r\nimport { ANTLRErrorListener } from \"./ANTLRErrorListener\";\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { ATNSimulator } from \"./atn/ATNSimulator\";\r\nimport { ConsoleErrorListener } from \"./ConsoleErrorListener\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { ParseInfo } from \"./atn/ParseInfo\";\r\nimport { ProxyErrorListener } from \"./ProxyErrorListener\";\r\nimport { RecognitionException } from \"./RecognitionException\";\r\nimport { RuleContext } from \"./RuleContext\";\r\nimport { SuppressWarnings, NotNull } from \"./Decorators\";\r\nimport { Token } from \"./Token\";\r\nimport { Vocabulary } from \"./Vocabulary\";\r\nimport { VocabularyImpl } from \"./VocabularyImpl\";\r\n\r\nimport * as Utils from \"./misc/Utils\";\r\n\r\nexport abstract class Recognizer<TSymbol, ATNInterpreter extends ATNSimulator> {\r\n\tpublic static readonly EOF: number = -1;\r\n\r\n\tprivate static tokenTypeMapCache =\r\n\t\tnew WeakMap<Vocabulary, ReadonlyMap<string, number>>();\r\n\tprivate static ruleIndexMapCache =\r\n\t\tnew WeakMap<string[], ReadonlyMap<string, number>>();\r\n\r\n\t@SuppressWarnings(\"serial\")\r\n\t@NotNull\r\n\tprivate readonly _listeners: Array<ANTLRErrorListener<TSymbol>> = [ConsoleErrorListener.INSTANCE];\r\n\r\n\tprotected _interp!: ATNInterpreter;\r\n\r\n\tprivate _stateNumber = -1;\r\n\r\n\tpublic abstract readonly ruleNames: string[];\r\n\r\n\t/**\r\n\t * Get the vocabulary used by the recognizer.\r\n\t *\r\n\t * @returns A {@link Vocabulary} instance providing information about the\r\n\t * vocabulary used by the grammar.\r\n\t */\r\n\tpublic abstract readonly vocabulary: Vocabulary;\r\n\r\n\t/**\r\n\t * Get a map from token names to token types.\r\n\t *\r\n\t * Used for XPath and tree pattern compilation.\r\n\t */\r\n\t@NotNull\r\n\tpublic getTokenTypeMap(): ReadonlyMap<string, number> {\r\n\t\tlet vocabulary: Vocabulary = this.vocabulary;\r\n\t\tlet result = Recognizer.tokenTypeMapCache.get(vocabulary);\r\n\t\tif (result == null) {\r\n\t\t\tlet intermediateResult = new Map<string, number>();\r\n\t\t\tfor (let i = 0; i <= this.atn.maxTokenType; i++) {\r\n\t\t\t\tlet literalName = vocabulary.getLiteralName(i);\r\n\t\t\t\tif (literalName != null) {\r\n\t\t\t\t\tintermediateResult.set(literalName, i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet symbolicName = vocabulary.getSymbolicName(i);\r\n\t\t\t\tif (symbolicName != null) {\r\n\t\t\t\t\tintermediateResult.set(symbolicName, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tintermediateResult.set(\"EOF\", Token.EOF);\r\n\t\t\tresult = intermediateResult;\r\n\t\t\tRecognizer.tokenTypeMapCache.set(vocabulary, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a map from rule names to rule indexes.\r\n\t *\r\n\t * Used for XPath and tree pattern compilation.\r\n\t */\r\n\t@NotNull\r\n\tpublic getRuleIndexMap(): ReadonlyMap<string, number> {\r\n\t\tlet ruleNames: string[] = this.ruleNames;\r\n\t\tif (ruleNames == null) {\r\n\t\t\tthrow new Error(\"The current recognizer does not provide a list of rule names.\");\r\n\t\t}\r\n\r\n\t\tlet result: ReadonlyMap<string, number> | undefined = Recognizer.ruleIndexMapCache.get(ruleNames);\r\n\t\tif (result == null) {\r\n\t\t\tresult = Utils.toMap(ruleNames);\r\n\t\t\tRecognizer.ruleIndexMapCache.set(ruleNames, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic getTokenType(tokenName: string): number {\r\n\t\tlet ttype = this.getTokenTypeMap().get(tokenName);\r\n\t\tif (ttype != null) {\r\n\t\t\treturn ttype;\r\n\t\t}\r\n\t\treturn Token.INVALID_TYPE;\r\n\t}\r\n\r\n\t/**\r\n\t * If this recognizer was generated, it will have a serialized ATN\r\n\t * representation of the grammar.\r\n\t *\r\n\t * For interpreters, we don't know their serialized ATN despite having\r\n\t * created the interpreter from it.\r\n\t */\r\n\t@NotNull\r\n\tget serializedATN(): string {\r\n\t\tthrow new Error(\"there is no serialized ATN\");\r\n\t}\r\n\r\n\t/** For debugging and other purposes, might want the grammar name.\r\n\t *  Have ANTLR generate an implementation for this method.\r\n\t */\r\n\tpublic abstract readonly grammarFileName: string;\r\n\r\n\t/**\r\n\t * Get the {@link ATN} used by the recognizer for prediction.\r\n\t *\r\n\t * @returns The {@link ATN} used by the recognizer for prediction.\r\n\t */\r\n\t@NotNull\r\n\tget atn(): ATN {\r\n\t\treturn this._interp.atn;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the ATN interpreter used by the recognizer for prediction.\r\n\t *\r\n\t * @returns The ATN interpreter used by the recognizer for prediction.\r\n\t */\r\n\t@NotNull\r\n\tget interpreter(): ATNInterpreter {\r\n\t\treturn this._interp;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the ATN interpreter used by the recognizer for prediction.\r\n\t *\r\n\t * @param interpreter The ATN interpreter used by the recognizer for\r\n\t * prediction.\r\n\t */\r\n\tset interpreter(@NotNull interpreter: ATNInterpreter) {\r\n\t\tthis._interp = interpreter;\r\n\t}\r\n\r\n\t/** If profiling during the parse/lex, this will return DecisionInfo records\r\n\t *  for each decision in recognizer in a ParseInfo object.\r\n\t *\r\n\t * @since 4.3\r\n\t */\r\n\tget parseInfo(): Promise<ParseInfo | undefined> {\r\n\t\treturn Promise.resolve(undefined);\r\n\t}\r\n\r\n\t/** What is the error header, normally line/character position information? */\r\n\t@NotNull\r\n\tpublic getErrorHeader(@NotNull e: RecognitionException): string {\r\n\t\tlet token = e.getOffendingToken();\r\n\t\tif (!token) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tlet line = token.line;\r\n\t\tlet charPositionInLine: number = token.charPositionInLine;\r\n\t\treturn \"line \" + line + \":\" + charPositionInLine;\r\n\t}\r\n\r\n\t/**\r\n\t * @exception NullPointerException if `listener` is `undefined`.\r\n\t */\r\n\tpublic addErrorListener(@NotNull listener: ANTLRErrorListener<TSymbol>): void {\r\n\t\tif (!listener) {\r\n\t\t\tthrow new TypeError(\"listener must not be null\");\r\n\t\t}\r\n\t\tthis._listeners.push(listener);\r\n\t}\r\n\r\n\tpublic removeErrorListener(@NotNull listener: ANTLRErrorListener<TSymbol>): void {\r\n\t\tlet position = this._listeners.indexOf(listener);\r\n\t\tif (position !== -1) {\r\n\t\t\tthis._listeners.splice(position, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic removeErrorListeners(): void {\r\n\t\tthis._listeners.length = 0;\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getErrorListeners(): Array<ANTLRErrorListener<TSymbol>> {\r\n\t\treturn this._listeners.slice(0);\r\n\t}\r\n\r\n\tpublic getErrorListenerDispatch(): ANTLRErrorListener<TSymbol> {\r\n\t\treturn new ProxyErrorListener<TSymbol, ANTLRErrorListener<TSymbol>>(this.getErrorListeners());\r\n\t}\r\n\r\n\t// subclass needs to override these if there are sempreds or actions\r\n\t// that the ATN interp needs to execute\r\n\tpublic sempred(\r\n\t\t_localctx: RuleContext | undefined,\r\n\t\truleIndex: number,\r\n\t\tactionIndex: number): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic precpred(\r\n\t\tlocalctx: RuleContext | undefined,\r\n\t\tprecedence: number): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic action(\r\n\t\t_localctx: RuleContext | undefined,\r\n\t\truleIndex: number,\r\n\t\tactionIndex: number): void {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\tget state(): number {\r\n\t\treturn this._stateNumber;\r\n\t}\r\n\r\n\t/** Indicate that the recognizer has changed internal state that is\r\n\t *  consistent with the ATN state passed in.  This way we always know\r\n\t *  where we are in the ATN as the parser goes along. The rule\r\n\t *  context objects form a stack that lets us see the stack of\r\n\t *  invoking rules. Combine this and we have complete ATN\r\n\t *  configuration information.\r\n\t */\r\n\tset state(atnState: number) {\r\n//\t\tSystem.err.println(\"setState \"+atnState);\r\n\t\tthis._stateNumber = atnState;\r\n//\t\tif ( traceATNStates ) _ctx.trace(atnState);\r\n\t}\r\n\r\n\tpublic abstract readonly inputStream: IntStream | undefined;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.3490837-07:00\r\n\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { Parser } from \"./Parser\";\r\nimport { Recognizer } from \"./Recognizer\";\r\nimport { RuleNode } from \"./tree/RuleNode\";\r\nimport { ParseTree } from \"./tree/ParseTree\";\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Override } from \"./Decorators\";\r\nimport { Trees } from \"./tree/Trees\";\r\nimport { ParseTreeVisitor } from \"./tree/ParseTreeVisitor\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\n\r\n/** A rule context is a record of a single rule invocation.\r\n *\r\n *  We form a stack of these context objects using the parent\r\n *  pointer. A parent pointer of `undefined` indicates that the current\r\n *  context is the bottom of the stack. The ParserRuleContext subclass\r\n *  as a children list so that we can turn this data structure into a\r\n *  tree.\r\n *\r\n *  The root node always has a `undefined` pointer and invokingState of -1.\r\n *\r\n *  Upon entry to parsing, the first invoked rule function creates a\r\n *  context object (a subclass specialized for that rule such as\r\n *  SContext) and makes it the root of a parse tree, recorded by field\r\n *  Parser._ctx.\r\n *\r\n *  public final SContext s() throws RecognitionException {\r\n *      SContext _localctx = new SContext(_ctx, state); <-- create new node\r\n *      enterRule(_localctx, 0, RULE_s);                     <-- push it\r\n *      ...\r\n *      exitRule();                                          <-- pop back to _localctx\r\n *      return _localctx;\r\n *  }\r\n *\r\n *  A subsequent rule invocation of r from the start rule s pushes a\r\n *  new context object for r whose parent points at s and use invoking\r\n *  state is the state with r emanating as edge label.\r\n *\r\n *  The invokingState fields from a context object to the root\r\n *  together form a stack of rule indication states where the root\r\n *  (bottom of the stack) has a -1 sentinel value. If we invoke start\r\n *  symbol s then call r1, which calls r2, the  would look like\r\n *  this:\r\n *\r\n *     SContext[-1]   <- root node (bottom of the stack)\r\n *     R1Context[p]   <- p in rule s called r1\r\n *     R2Context[q]   <- q in rule r1 called r2\r\n *\r\n *  So the top of the stack, _ctx, represents a call to the current\r\n *  rule and it holds the return address from another rule that invoke\r\n *  to this rule. To invoke a rule, we must always have a current context.\r\n *\r\n *  The parent contexts are useful for computing lookahead sets and\r\n *  getting error information.\r\n *\r\n *  These objects are used during parsing and prediction.\r\n *  For the special case of parsers, we use the subclass\r\n *  ParserRuleContext.\r\n *\r\n *  @see ParserRuleContext\r\n */\r\nexport class RuleContext extends RuleNode {\r\n\tpublic _parent: RuleContext | undefined;\r\n\tpublic invokingState: number;\r\n\r\n\tconstructor();\r\n\tconstructor(parent: RuleContext | undefined, invokingState: number);\r\n\tconstructor(parent?: RuleContext, invokingState?: number) {\r\n\t\tsuper();\r\n\t\tthis._parent = parent;\r\n\t\tthis.invokingState = invokingState != null ? invokingState : -1;\r\n\t}\r\n\r\n\tpublic static getChildContext(parent: RuleContext, invokingState: number): RuleContext {\r\n\t\treturn new RuleContext(parent, invokingState);\r\n\t}\r\n\r\n\tpublic depth(): number {\r\n\t\tlet n = 0;\r\n\t\tlet p: RuleContext | undefined = this;\r\n\t\twhile (p) {\r\n\t\t\tp = p._parent;\r\n\t\t\tn++;\r\n\t\t}\r\n\t\treturn n;\r\n\t}\r\n\r\n\t/** A context is empty if there is no invoking state; meaning nobody called\r\n\t *  current context.\r\n\t */\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.invokingState === -1;\r\n\t}\r\n\r\n\t// satisfy the ParseTree / SyntaxTree interface\r\n\r\n\t@Override\r\n\tget sourceInterval(): Interval {\r\n\t\treturn Interval.INVALID;\r\n\t}\r\n\r\n\t@Override\r\n\tget ruleContext(): RuleContext { return this; }\r\n\r\n\t@Override\r\n\tget parent(): RuleContext | undefined { return this._parent; }\r\n\r\n\t/** @since 4.7. {@see ParseTree#setParent} comment */\r\n\t@Override\r\n\tpublic setParent(parent: RuleContext): void {\r\n\t\tthis._parent = parent;\r\n\t}\r\n\r\n\t@Override\r\n\tget payload(): RuleContext { return this; }\r\n\r\n\t/** Return the combined text of all child nodes. This method only considers\r\n\t *  tokens which have been added to the parse tree.\r\n\t *\r\n\t *  Since tokens on hidden channels (e.g. whitespace or comments) are not\r\n\t *  added to the parse trees, they will not appear in the output of this\r\n\t *  method.\r\n\t */\r\n\t@Override\r\n\tget text(): string {\r\n\t\tif (this.childCount === 0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet builder = \"\";\r\n\t\tfor (let i = 0; i < this.childCount; i++) {\r\n\t\t\tbuilder += this.getChild(i).text;\r\n\t\t}\r\n\r\n\t\treturn builder.toString();\r\n\t}\r\n\r\n\tget ruleIndex(): number { return -1; }\r\n\r\n\t/** For rule associated with this parse tree internal node, return\r\n\t *  the outer alternative number used to match the input. Default\r\n\t *  implementation does not compute nor store this alt num. Create\r\n\t *  a subclass of ParserRuleContext with backing field and set\r\n\t *  option contextSuperClass.\r\n\t *  to set it.\r\n\t *\r\n\t *  @since 4.5.3\r\n\t */\r\n\tget altNumber(): number { return ATN.INVALID_ALT_NUMBER; }\r\n\r\n\t/** Set the outer alternative number for this context node. Default\r\n\t *  implementation does nothing to avoid backing field overhead for\r\n\t *  trees that don't need it.  Create\r\n\t *  a subclass of ParserRuleContext with backing field and set\r\n\t *  option contextSuperClass.\r\n\t *\r\n\t *  @since 4.5.3\r\n\t */\r\n\tset altNumber(altNumber: number) {\r\n\t\t// intentionally ignored by the base implementation\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getChild(i: number): ParseTree {\r\n\t\tthrow new RangeError(\"i must be greater than or equal to 0 and less than childCount\");\r\n\t}\r\n\r\n\t@Override\r\n\tget childCount(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic accept<T>(visitor: ParseTreeVisitor<T>): T {\r\n\t\treturn visitor.visitChildren(this);\r\n\t}\r\n\r\n\t/** Print out a whole tree, not just a node, in LISP format\r\n\t *  (root child1 .. childN). Print just a node if this is a leaf.\r\n\t *  We have to know the recognizer so we can get rule names.\r\n\t */\r\n\tpublic toStringTree(recog: Parser): string;\r\n\r\n\t/** Print out a whole tree, not just a node, in LISP format\r\n\t *  (root child1 .. childN). Print just a node if this is a leaf.\r\n\t */\r\n\tpublic toStringTree(ruleNames: string[] | undefined): string;\r\n\r\n\tpublic toStringTree(): string;\r\n\r\n\t@Override\r\n\tpublic toStringTree(recog?: Parser | string[]): string {\r\n\t\treturn Trees.toStringTree(this, recog);\r\n\t}\r\n\r\n\tpublic toString(): string;\r\n\tpublic toString(recog: Recognizer<any, any> | undefined): string;\r\n\tpublic toString(ruleNames: string[] | undefined): string;\r\n\r\n\t// // recog undefined unless ParserRuleContext, in which case we use subclass toString(...)\r\n\tpublic toString(recog: Recognizer<any, any> | undefined, stop: RuleContext | undefined): string;\r\n\r\n\tpublic toString(ruleNames: string[] | undefined, stop: RuleContext | undefined): string;\r\n\r\n\tpublic toString(\r\n\t\targ1?: Recognizer<any, any> | string[],\r\n\t\tstop?: RuleContext)\r\n\t\t: string {\r\n\t\tconst ruleNames = (arg1 instanceof Recognizer) ? arg1.ruleNames : arg1;\r\n\t\tstop = stop || ParserRuleContext.emptyContext();\r\n\r\n\t\tlet buf = \"\";\r\n\t\tlet p: RuleContext | undefined = this;\r\n\t\tbuf += (\"[\");\r\n\t\twhile (p && p !== stop) {\r\n\t\t\tif (!ruleNames) {\r\n\t\t\t\tif (!p.isEmpty) {\r\n\t\t\t\t\tbuf += (p.invokingState);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet ruleIndex: number = p.ruleIndex;\r\n\t\t\t\tlet ruleName: string = (ruleIndex >= 0 && ruleIndex < ruleNames.length)\r\n\t\t\t\t\t? ruleNames[ruleIndex] : ruleIndex.toString();\r\n\t\t\t\tbuf += (ruleName);\r\n\t\t\t}\r\n\r\n\t\t\tif (p._parent && (ruleNames || !p._parent.isEmpty)) {\r\n\t\t\t\tbuf += (\" \");\r\n\t\t\t}\r\n\r\n\t\t\tp = p._parent;\r\n\t\t}\r\n\r\n\t\tbuf += (\"]\");\r\n\t\treturn buf.toString();\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.4741196-07:00\r\n\r\nimport { ATN } from \"./atn/ATN\";\r\nimport { Override } from \"./Decorators\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\n\r\n/** A handy class for use with\r\n *\r\n *  options {contextSuperClass=org.antlr.v4.runtime.RuleContextWithAltNum;}\r\n *\r\n *  that provides a backing field / impl for the outer alternative number\r\n *  matched for an internal parse tree node.\r\n *\r\n *  I'm only putting into Java runtime as I'm certain I'm the only one that\r\n *  will really every use this.\r\n */\r\nexport class RuleContextWithAltNum extends ParserRuleContext {\r\n\tprivate _altNumber: number;\r\n\r\n\tconstructor();\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingStateNumber: number);\r\n\tconstructor(parent?: ParserRuleContext, invokingStateNumber?: number) {\r\n\t\tif (invokingStateNumber !== undefined) {\r\n\t\t\tsuper(parent, invokingStateNumber);\r\n\t\t} else {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\tthis._altNumber = ATN.INVALID_ALT_NUMBER;\r\n\t}\r\n\r\n\t@Override\r\n\tget altNumber(): number {\r\n\t\treturn this._altNumber;\r\n\t}\r\n\r\n\t// @Override\r\n\tset altNumber(altNum: number) {\r\n\t\tthis._altNumber = altNum;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.6271221-07:00\r\n\r\nimport { Dependents } from \"./Dependents\";\r\nimport { Parser } from \"./Parser\";\r\n\r\n/**\r\n * Declares a dependency upon a grammar rule, along with a set of zero or more dependent rules.\r\n *\r\n * Version numbers within a grammar should be assigned on a monotonically increasing basis to allow for accurate\r\n * tracking of dependent rules.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport function RuleDependency(dependency: DependencySpecification) {\r\n\treturn (target: object, propertyKey: PropertyKey, propertyDescriptor: PropertyDescriptor) => {\r\n\t\t// intentionally empty\r\n\t};\r\n}\r\n\r\nexport interface DependencySpecification {\r\n\treadonly recognizer: { new (...args: any[]): Parser; };\r\n\r\n\treadonly rule: number;\r\n\r\n\treadonly version: number;\r\n\r\n\t/**\r\n\t * Specifies the set of grammar rules related to `rule` which the annotated element depends on. Even when absent\r\n\t * from this set, the annotated element is implicitly dependent upon the explicitly specified `rule`, which\r\n\t * corresponds to the `Dependents.SELF` element.\r\n\t *\r\n\t * By default, the annotated element is dependent upon the specified `rule` and its `Dependents.PARENTS`, i.e. the\r\n\t * rule within one level of context information. The parents are included since the most frequent assumption about a\r\n\t * rule is where it's used in the grammar.\r\n\t */\r\n\treadonly dependents?: Dependents[];\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.7170027-07:00\r\n\r\nimport { Parser } from \"./Parser\";\r\nimport { ParserRuleContext } from \"./ParserRuleContext\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport function RuleVersion(version: number) {\r\n\r\n\treturn <T extends ParserRuleContext>(target: Parser, propertyKey: PropertyKey, propertyDescriptor: TypedPropertyDescriptor<(...args: any[]) => T>) => {\r\n\t\t// intentionally empty\r\n\t};\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:57.7862802-07:00\r\n\r\nimport { CharStream } from \"./CharStream\";\r\nimport { IntStream } from \"./IntStream\";\r\nimport { TokenSource } from \"./TokenSource\";\r\nimport { TokenStream } from \"./TokenStream\";\r\n\r\n/** A token has properties: text, type, line, character position in the line\r\n *  (so we can ignore tabs), token channel, index, and source from which\r\n *  we obtained this token.\r\n */\r\nexport interface Token {\r\n\t/**\r\n\t * Get the text of the token.\r\n\t */\r\n\treadonly text: string | undefined;\r\n\r\n\t/** Get the token type of the token */\r\n\treadonly type: number;\r\n\r\n\t/** The line number on which the 1st character of this token was matched,\r\n\t *  line=1..n\r\n\t */\r\n\treadonly line: number;\r\n\r\n\t/** The index of the first character of this token relative to the\r\n\t *  beginning of the line at which it occurs, 0..n-1\r\n\t */\r\n\treadonly charPositionInLine: number;\r\n\r\n\t/** Return the channel this token. Each token can arrive at the parser\r\n\t *  on a different channel, but the parser only \"tunes\" to a single channel.\r\n\t *  The parser ignores everything not on DEFAULT_CHANNEL.\r\n\t */\r\n\treadonly channel: number;\r\n\r\n\t/** An index from 0..n-1 of the token object in the input stream.\r\n\t *  This must be valid in order to print token streams and\r\n\t *  use TokenRewriteStream.\r\n\t *\r\n\t *  Return -1 to indicate that this token was conjured up since\r\n\t *  it doesn't have a valid index.\r\n\t */\r\n\treadonly tokenIndex: number;\r\n\r\n\t/** The starting character index of the token\r\n\t *  This method is optional; return -1 if not implemented.\r\n\t */\r\n\treadonly startIndex: number;\r\n\r\n\t/** The last character index of the token.\r\n\t *  This method is optional; return -1 if not implemented.\r\n\t */\r\n\treadonly stopIndex: number;\r\n\r\n\t/** Gets the {@link TokenSource} which created this token.\r\n\t */\r\n\treadonly tokenSource: TokenSource | undefined;\r\n\r\n\t/**\r\n\t * Gets the {@link CharStream} from which this token was derived.\r\n\t */\r\n\treadonly inputStream: CharStream | undefined;\r\n}\r\n\r\nexport namespace Token {\r\n\texport const INVALID_TYPE: number = 0;\r\n\r\n\t/** During lookahead operations, this \"token\" signifies we hit rule end ATN state\r\n\t *  and did not follow it despite needing to.\r\n\t */\r\n\texport const EPSILON: number = -2;\r\n\r\n\texport const MIN_USER_TOKEN_TYPE: number = 1;\r\n\r\n\texport const EOF: number = IntStream.EOF;\r\n\r\n\t/** All tokens go to the parser (unless skip() is called in that rule)\r\n\t *  on a particular \"channel\".  The parser tunes to a particular channel\r\n\t *  so that whitespace etc... can go to the parser on a \"hidden\" channel.\r\n\t */\r\n\texport const DEFAULT_CHANNEL: number = 0;\r\n\r\n\t/** Anything on different channel than DEFAULT_CHANNEL is not parsed\r\n\t *  by parser.\r\n\t */\r\n\texport const HIDDEN_CHANNEL: number = 1;\r\n\r\n\t/**\r\n\t * This is the minimum constant value which can be assigned to a\r\n\t * user-defined token channel.\r\n\t *\r\n\t * The non-negative numbers less than {@link #MIN_USER_CHANNEL_VALUE} are\r\n\t * assigned to the predefined channels {@link #DEFAULT_CHANNEL} and\r\n\t * {@link #HIDDEN_CHANNEL}.\r\n\t *\r\n\t * @see `Token.channel`\r\n\t */\r\n\texport const MIN_USER_CHANNEL_VALUE: number = 2;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:58.1768850-07:00\r\n\r\nimport { Interval } from \"./misc/Interval\";\r\nimport { Override } from \"./Decorators\";\r\nimport { Token } from \"./Token\";\r\nimport { TokenStream } from \"./TokenStream\";\r\n\r\nimport * as Utils from \"./misc/Utils\";\r\n\r\n/**\r\n * Useful for rewriting out a buffered input token stream after doing some\r\n * augmentation or other manipulations on it.\r\n *\r\n * You can insert stuff, replace, and delete chunks. Note that the operations\r\n * are done lazily--only if you convert the buffer to a {@link String} with\r\n * {@link TokenStream#getText()}. This is very efficient because you are not\r\n * moving data around all the time. As the buffer of tokens is converted to\r\n * strings, the {@link #getText()} method(s) scan the input token stream and\r\n * check to see if there is an operation at the current index. If so, the\r\n * operation is done and then normal {@link String} rendering continues on the\r\n * buffer. This is like having multiple Turing machine instruction streams\r\n * (programs) operating on a single input tape. :)\r\n *\r\n * This rewriter makes no modifications to the token stream. It does not ask the\r\n * stream to fill itself up nor does it advance the input cursor. The token\r\n * stream `TokenStream.index` will return the same value before and\r\n * after any {@link #getText()} call.\r\n *\r\n * The rewriter only works on tokens that you have in the buffer and ignores the\r\n * current input cursor. If you are buffering tokens on-demand, calling\r\n * {@link #getText()} halfway through the input will only do rewrites for those\r\n * tokens in the first half of the file.\r\n *\r\n * Since the operations are done lazily at {@link #getText}-time, operations do\r\n * not screw up the token index values. That is, an insert operation at token\r\n * index `i` does not change the index values for tokens\r\n * `i`+1..n-1.\r\n *\r\n * Because operations never actually alter the buffer, you may always get the\r\n * original token stream back without undoing anything. Since the instructions\r\n * are queued up, you can easily simulate transactions and roll back any changes\r\n * if there is an error just by removing instructions. For example,\r\n *\r\n * ```\r\n * CharStream input = new ANTLRFileStream(\"input\");\r\n * TLexer lex = new TLexer(input);\r\n * CommonTokenStream tokens = new CommonTokenStream(lex);\r\n * T parser = new T(tokens);\r\n * TokenStreamRewriter rewriter = new TokenStreamRewriter(tokens);\r\n * parser.startRule();\r\n * ```\r\n *\r\n * Then in the rules, you can execute (assuming rewriter is visible):\r\n *\r\n * ```\r\n * Token t,u;\r\n * ...\r\n * rewriter.insertAfter(t, \"text to put after t\");}\r\n * rewriter.insertAfter(u, \"text after u\");}\r\n * System.out.println(rewriter.getText());\r\n * ```\r\n *\r\n * You can also have multiple \"instruction streams\" and get multiple rewrites\r\n * from a single pass over the input. Just name the instruction streams and use\r\n * that name again when printing the buffer. This could be useful for generating\r\n * a C file and also its header file--all from the same buffer:\r\n *\r\n * ```\r\n * rewriter.insertAfter(\"pass1\", t, \"text to put after t\");}\r\n * rewriter.insertAfter(\"pass2\", u, \"text after u\");}\r\n * System.out.println(rewriter.getText(\"pass1\"));\r\n * System.out.println(rewriter.getText(\"pass2\"));\r\n * ```\r\n *\r\n * If you don't use named rewrite streams, a \"default\" stream is used as the\r\n * first example shows.\r\n */\r\nexport class TokenStreamRewriter {\r\n\tpublic static readonly DEFAULT_PROGRAM_NAME: string =  \"default\";\r\n\tpublic static readonly PROGRAM_INIT_SIZE: number =  100;\r\n\tpublic static readonly MIN_TOKEN_INDEX: number =  0;\r\n\r\n\t/** Our source stream */\r\n\tprotected tokens: TokenStream;\r\n\r\n\t/** You may have multiple, named streams of rewrite operations.\r\n\t *  I'm calling these things \"programs.\"\r\n\t *  Maps String (name) &rarr; rewrite (List)\r\n\t */\r\n\tprotected programs: Map<string, RewriteOperation[]>;\r\n\r\n\t/** Map String (program name) &rarr; Integer index */\r\n\tprotected lastRewriteTokenIndexes: Map<string, number>;\r\n\r\n\tconstructor(tokens: TokenStream)  {\r\n\t\tthis.tokens = tokens;\r\n\t\tthis.programs = new Map<string, RewriteOperation[]>();\r\n\t\tthis.programs.set(TokenStreamRewriter.DEFAULT_PROGRAM_NAME, []);\r\n\t\tthis.lastRewriteTokenIndexes = new Map<string, number>();\r\n\t}\r\n\r\n\tpublic getTokenStream(): TokenStream {\r\n\t\treturn this.tokens;\r\n\t}\r\n\r\n\tpublic rollback(instructionIndex: number): void;\r\n\t/** Rollback the instruction stream for a program so that\r\n\t *  the indicated instruction (via instructionIndex) is no\r\n\t *  longer in the stream. UNTESTED!\r\n\t */\r\n\tpublic rollback(instructionIndex: number, programName: string): void;\r\n\tpublic rollback(instructionIndex: number, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tlet is: RewriteOperation[] | undefined =  this.programs.get(programName);\r\n\t\tif ( is != null ) {\r\n\t\t\tthis.programs.set(programName, is.slice(TokenStreamRewriter.MIN_TOKEN_INDEX, instructionIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic deleteProgram(): void;\r\n\r\n\t/** Reset the program so that no instructions exist */\r\n\tpublic deleteProgram(programName: string): void;\r\n\tpublic deleteProgram(programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tthis.rollback(TokenStreamRewriter.MIN_TOKEN_INDEX, programName);\r\n\t}\r\n\r\n\tpublic insertAfter(t: Token, text: {}): void;\r\n\tpublic insertAfter(index: number, text: {}): void;\r\n\tpublic insertAfter(t: Token, text: {}, programName: string): void;\r\n\tpublic insertAfter(index: number, text: {}, programName: string): void;\r\n\tpublic insertAfter(tokenOrIndex: Token | number, text: {}, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tlet index: number;\r\n\t\tif (typeof tokenOrIndex === \"number\") {\r\n\t\t\tindex = tokenOrIndex;\r\n\t\t} else {\r\n\t\t\tindex = tokenOrIndex.tokenIndex;\r\n\t\t}\r\n\r\n\t\t// to insert after, just insert before next index (even if past end)\r\n\t\tlet rewrites: RewriteOperation[] = this.getProgram(programName);\r\n\t\tlet op = new InsertAfterOp(this.tokens, index, rewrites.length, text);\r\n\t\trewrites.push(op);\r\n\t}\r\n\r\n\tpublic insertBefore(t: Token, text: {}): void;\r\n\tpublic insertBefore(index: number, text: {}): void;\r\n\tpublic insertBefore(t: Token, text: {}, programName: string): void;\r\n\tpublic insertBefore(index: number, text: {}, programName: string): void;\r\n\tpublic insertBefore(tokenOrIndex: Token | number, text: {}, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tlet index: number;\r\n\t\tif (typeof tokenOrIndex === \"number\") {\r\n\t\t\tindex = tokenOrIndex;\r\n\t\t} else {\r\n\t\t\tindex = tokenOrIndex.tokenIndex;\r\n\t\t}\r\n\r\n\t\tlet rewrites: RewriteOperation[] = this.getProgram(programName);\r\n\t\tlet op: RewriteOperation = new InsertBeforeOp(this.tokens, index, rewrites.length, text);\r\n\t\trewrites.push(op);\r\n\t}\r\n\r\n\tpublic replaceSingle(index: number, text: {}): void;\r\n\tpublic replaceSingle(indexT: Token, text: {}): void;\r\n\tpublic replaceSingle(index: Token | number, text: {}): void {\r\n\t\tif (typeof index === \"number\") {\r\n\t\t\tthis.replace(index, index, text);\r\n\t\t} else {\r\n\t\t\tthis.replace(index, index, text);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic replace(from: number, to: number, text: {}): void;\r\n\r\n\tpublic replace(from: Token, to: Token, text: {}): void;\r\n\r\n\tpublic replace(from: number, to: number, text: {}, programName: string): void;\r\n\r\n\tpublic replace(from: Token, to: Token, text: {}, programName: string): void;\r\n\r\n\tpublic replace(from: Token | number, to: Token | number, text: {}, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tif (typeof from !== \"number\") {\r\n\t\t\tfrom = from.tokenIndex;\r\n\t\t}\r\n\r\n\t\tif (typeof to !== \"number\") {\r\n\t\t\tto = to.tokenIndex;\r\n\t\t}\r\n\r\n\t\tif ( from > to || from < 0 || to < 0 || to >= this.tokens.size ) {\r\n\t\t\tthrow new RangeError(`replace: range invalid: ${from}..${to}(size=${this.tokens.size})`);\r\n\t\t}\r\n\r\n\t\tlet rewrites: RewriteOperation[] = this.getProgram(programName);\r\n\t\tlet op: RewriteOperation =  new ReplaceOp(this.tokens, from, to, rewrites.length, text);\r\n\t\trewrites.push(op);\r\n\t}\r\n\r\n\tpublic delete(index: number): void;\r\n\r\n\tpublic delete(from: number, to: number): void;\r\n\r\n\tpublic delete(indexT: Token): void;\r\n\r\n\tpublic delete(from: Token, to: Token): void;\r\n\r\n\tpublic delete(from: number, to: number, programName: string): void;\r\n\r\n\tpublic delete(from: Token, to: Token, programName: string): void;\r\n\r\n\tpublic delete(from: Token | number, to?: Token | number, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): void {\r\n\t\tif (to === undefined) {\r\n\t\t\tto = from;\r\n\t\t}\r\n\r\n\t\tif (typeof from === \"number\") {\r\n\t\t\tthis.replace(from, to as number, \"\", programName);\r\n\t\t} else {\r\n\t\t\tthis.replace(from, to as Token, \"\", programName);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLastRewriteTokenIndex(): number;\r\n\r\n\tprotected getLastRewriteTokenIndex(programName: string): number;\r\n\r\n\tprotected getLastRewriteTokenIndex(programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): number {\r\n\t\tlet I: number | undefined = this.lastRewriteTokenIndexes.get(programName);\r\n\t\tif ( I == null ) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\treturn I;\r\n\t}\r\n\r\n\tprotected setLastRewriteTokenIndex(programName: string, i: number): void {\r\n\t\tthis.lastRewriteTokenIndexes.set(programName, i);\r\n\t}\r\n\r\n\tprotected getProgram(name: string): RewriteOperation[] {\r\n\t\tlet is: RewriteOperation[] | undefined = this.programs.get(name);\r\n\t\tif ( is == null ) {\r\n\t\t\tis = this.initializeProgram(name);\r\n\t\t}\r\n\r\n\t\treturn is;\r\n\t}\r\n\r\n\tprivate initializeProgram(name: string): RewriteOperation[] {\r\n\t\tlet is: RewriteOperation[] = [];\r\n\t\tthis.programs.set(name, is);\r\n\t\treturn is;\r\n\t}\r\n\r\n\t/** Return the text from the original tokens altered per the\r\n\t *  instructions given to this rewriter.\r\n\t */\r\n\tpublic getText(): string;\r\n\r\n\t/** Return the text from the original tokens altered per the\r\n\t *  instructions given to this rewriter in programName.\r\n\t *\r\n\t * @since 4.5\r\n\t */\r\n\tpublic getText(programName: string): string;\r\n\r\n\t/** Return the text associated with the tokens in the interval from the\r\n\t *  original token stream but with the alterations given to this rewriter.\r\n\t *  The interval refers to the indexes in the original token stream.\r\n\t *  We do not alter the token stream in any way, so the indexes\r\n\t *  and intervals are still consistent. Includes any operations done\r\n\t *  to the first and last token in the interval. So, if you did an\r\n\t *  insertBefore on the first token, you would get that insertion.\r\n\t *  The same is true if you do an insertAfter the stop token.\r\n\t */\r\n\tpublic getText(interval: Interval): string;\r\n\r\n\tpublic getText(interval: Interval, programName: string): string;\r\n\r\n\tpublic getText(intervalOrProgram?: Interval | string, programName: string = TokenStreamRewriter.DEFAULT_PROGRAM_NAME): string {\r\n\t\tlet interval: Interval;\r\n\t\tif (intervalOrProgram instanceof Interval) {\r\n\t\t\tinterval = intervalOrProgram;\r\n\t\t} else {\r\n\t\t\tinterval = Interval.of(0, this.tokens.size - 1);\r\n\t\t}\r\n\r\n\t\tif (typeof intervalOrProgram === \"string\") {\r\n\t\t\tprogramName = intervalOrProgram;\r\n\t\t}\r\n\r\n\t\tlet rewrites: RewriteOperation[] | undefined = this.programs.get(programName);\r\n\t\tlet start: number =  interval.a;\r\n\t\tlet stop: number =  interval.b;\r\n\r\n\t\t// ensure start/end are in range\r\n\t\tif ( stop > this.tokens.size - 1 ) {\r\n\t\t\tstop = this.tokens.size - 1;\r\n\t\t}\r\n\t\tif ( start < 0 ) {\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\r\n\t\tif ( rewrites == null || rewrites.length === 0 ) {\r\n\t\t\treturn this.tokens.getText(interval); // no instructions to execute\r\n\t\t}\r\n\r\n\t\tlet buf: string[] = [];\r\n\r\n\t\t// First, optimize instruction stream\r\n\t\tlet indexToOp: Map<number, RewriteOperation> = this.reduceToSingleOperationPerIndex(rewrites);\r\n\r\n\t\t// Walk buffer, executing instructions and emitting tokens\r\n\t\tlet i: number =  start;\r\n\t\twhile ( i <= stop && i < this.tokens.size ) {\r\n\t\t\tlet op: RewriteOperation | undefined =  indexToOp.get(i);\r\n\t\t\tindexToOp.delete(i); // remove so any left have index size-1\r\n\t\t\tlet t: Token = this.tokens.get(i);\r\n\t\t\tif ( op == null ) {\r\n\t\t\t\t// no operation at that index, just dump token\r\n\t\t\t\tif ( t.type !== Token.EOF ) {\r\n\t\t\t\t\tbuf.push(String(t.text));\r\n\t\t\t\t}\r\n\t\t\t\ti++; // move to next token\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ti = op.execute(buf); // execute operation and skip\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// include stuff after end if it's last index in buffer\r\n\t\t// So, if they did an insertAfter(lastValidIndex, \"foo\"), include\r\n\t\t// foo if end==lastValidIndex.\r\n\t\tif ( stop === this.tokens.size - 1 ) {\r\n\t\t\t// Scan any remaining operations after last token\r\n\t\t\t// should be included (they will be inserts).\r\n\t\t\tfor (let op of indexToOp.values()) {\r\n\t\t\t\tif ( op.index >= this.tokens.size - 1 ) {\r\n\t\t\t\t\tbuf.push(op.text.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn buf.join(\"\");\r\n\t}\r\n\r\n\t/** We need to combine operations and report invalid operations (like\r\n\t *  overlapping replaces that are not completed nested). Inserts to\r\n\t *  same index need to be combined etc...  Here are the cases:\r\n\t *\r\n\t *  I.i.u I.j.v\t\t\t\t\t\t\t\tleave alone, nonoverlapping\r\n\t *  I.i.u I.i.v\t\t\t\t\t\t\t\tcombine: Iivu\r\n\t *\r\n\t *  R.i-j.u R.x-y.v\t| i-j in x-y\t\t\tdelete first R\r\n\t *  R.i-j.u R.i-j.v\t\t\t\t\t\t\tdelete first R\r\n\t *  R.i-j.u R.x-y.v\t| x-y in i-j\t\t\tERROR\r\n\t *  R.i-j.u R.x-y.v\t| boundaries overlap\tERROR\r\n\t *\r\n\t *  Delete special case of replace (text==undefined):\r\n\t *  D.i-j.u D.x-y.v\t| boundaries overlap\tcombine to max(min)..max(right)\r\n\t *\r\n\t *  I.i.u R.x-y.v | i in (x+1)-y\t\t\tdelete I (since insert before\r\n\t * \t\t\t\t\t\t\t\t\t\t\twe're not deleting i)\r\n\t *  I.i.u R.x-y.v | i not in (x+1)-y\t\tleave alone, nonoverlapping\r\n\t *  R.x-y.v I.i.u | i in x-y\t\t\t\tERROR\r\n\t *  R.x-y.v I.x.u \t\t\t\t\t\t\tR.x-y.uv (combine, delete I)\r\n\t *  R.x-y.v I.i.u | i not in x-y\t\t\tleave alone, nonoverlapping\r\n\t *\r\n\t *  I.i.u = insert u before op @ index i\r\n\t *  R.x-y.u = replace x-y indexed tokens with u\r\n\t *\r\n\t *  First we need to examine replaces. For any replace op:\r\n\t *\r\n\t * \t\t1. wipe out any insertions before op within that range.\r\n\t * \t\t2. Drop any replace op before that is contained completely within\r\n\t * \t that range.\r\n\t * \t\t3. Throw exception upon boundary overlap with any previous replace.\r\n\t *\r\n\t *  Then we can deal with inserts:\r\n\t *\r\n\t * \t\t1. for any inserts to same index, combine even if not adjacent.\r\n\t * \t\t2. for any prior replace with same left boundary, combine this\r\n\t * \t insert with replace and delete this replace.\r\n\t * \t\t3. throw exception if index in same range as previous replace\r\n\t *\r\n\t *  Don't actually delete; make op undefined in list. Easier to walk list.\r\n\t *  Later we can throw as we add to index &rarr; op map.\r\n\t *\r\n\t *  Note that I.2 R.2-2 will wipe out I.2 even though, technically, the\r\n\t *  inserted stuff would be before the replace range. But, if you\r\n\t *  add tokens in front of a method body '{' and then delete the method\r\n\t *  body, I think the stuff before the '{' you added should disappear too.\r\n\t *\r\n\t *  Return a map from token index to operation.\r\n\t */\r\n\tprotected reduceToSingleOperationPerIndex(rewrites: Array<RewriteOperation | undefined>): Map<number, RewriteOperation> {\r\n\t\t// console.log(`rewrites=[${Utils.join(rewrites, \", \")}]`);\r\n\r\n\t\t// WALK REPLACES\r\n\t\tfor (let i = 0; i < rewrites.length; i++) {\r\n\t\t\tlet op: RewriteOperation | undefined = rewrites[i];\r\n\t\t\tif ( op == null ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif ( !(op instanceof ReplaceOp) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet rop: ReplaceOp = op;\r\n\t\t\t// Wipe prior inserts within range\r\n\t\t\tlet inserts: InsertBeforeOp[] = this.getKindOfOps(rewrites, InsertBeforeOp, i);\r\n\t\t\tfor (let iop of inserts) {\r\n\t\t\t\tif ( iop.index === rop.index ) {\r\n\t\t\t\t\t// E.g., insert before 2, delete 2..2; update replace\r\n\t\t\t\t\t// text to include insert before, kill insert\r\n\t\t\t\t\trewrites[iop.instructionIndex] = undefined;\r\n\t\t\t\t\trop.text = iop.text.toString() + (rop.text != null ? rop.text.toString() : \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse if ( iop.index > rop.index && iop.index <= rop.lastIndex ) {\r\n\t\t\t\t\t// delete insert as it's a no-op.\r\n\t\t\t\t\trewrites[iop.instructionIndex] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Drop any prior replaces contained within\r\n\t\t\tlet prevReplaces: ReplaceOp[] = this.getKindOfOps(rewrites, ReplaceOp, i);\r\n\t\t\tfor (let prevRop of prevReplaces) {\r\n\t\t\t\tif ( prevRop.index >= rop.index && prevRop.lastIndex <= rop.lastIndex ) {\r\n\t\t\t\t\t// delete replace as it's a no-op.\r\n\t\t\t\t\trewrites[prevRop.instructionIndex] = undefined;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// throw exception unless disjoint or identical\r\n\t\t\t\tlet disjoint: boolean =\r\n\t\t\t\t\tprevRop.lastIndex < rop.index || prevRop.index > rop.lastIndex;\r\n\t\t\t\t// Delete special case of replace (text==null):\r\n\t\t\t\t// D.i-j.u D.x-y.v\t| boundaries overlap\tcombine to max(min)..max(right)\r\n\t\t\t\tif ( prevRop.text == null && rop.text == null && !disjoint ) {\r\n\t\t\t\t\t// console.log(`overlapping deletes: ${prevRop}, ${rop}`);\r\n\t\t\t\t\trewrites[prevRop.instructionIndex] = undefined; // kill first delete\r\n\t\t\t\t\trop.index = Math.min(prevRop.index, rop.index);\r\n\t\t\t\t\trop.lastIndex = Math.max(prevRop.lastIndex, rop.lastIndex);\r\n\t\t\t\t\t// console.log(`new rop ${rop}`);\r\n\t\t\t\t}\r\n\t\t\t\telse if ( !disjoint ) {\r\n\t\t\t\t\tthrow new Error(`replace op boundaries of ${rop} overlap with previous ${prevRop}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// WALK INSERTS\r\n\t\tfor (let i = 0; i < rewrites.length; i++) {\r\n\t\t\tlet op: RewriteOperation | undefined = rewrites[i];\r\n\t\t\tif ( op == null ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif ( !(op instanceof InsertBeforeOp) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet iop: InsertBeforeOp =  op;\r\n\t\t\t// combine current insert with prior if any at same index\r\n\t\t\tlet prevInserts: InsertBeforeOp[] = this.getKindOfOps(rewrites, InsertBeforeOp, i);\r\n\t\t\tfor (let prevIop of prevInserts) {\r\n\t\t\t\tif ( prevIop.index === iop.index ) {\r\n\t\t\t\t\tif (prevIop instanceof InsertAfterOp) {\r\n\t\t\t\t\t\tiop.text = this.catOpText(prevIop.text, iop.text);\r\n\t\t\t\t\t\trewrites[prevIop.instructionIndex] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (prevIop instanceof InsertBeforeOp) { // combine objects\r\n\t\t\t\t\t\t// convert to strings...we're in process of toString'ing\r\n\t\t\t\t\t\t// whole token buffer so no lazy eval issue with any templates\r\n\t\t\t\t\t\tiop.text = this.catOpText(iop.text, prevIop.text);\r\n\t\t\t\t\t\t// delete redundant prior insert\r\n\t\t\t\t\t\trewrites[prevIop.instructionIndex] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// look for replaces where iop.index is in range; error\r\n\t\t\tlet prevReplaces: ReplaceOp[] = this.getKindOfOps(rewrites, ReplaceOp, i);\r\n\t\t\tfor (let rop of prevReplaces) {\r\n\t\t\t\tif ( iop.index === rop.index ) {\r\n\t\t\t\t\trop.text = this.catOpText(iop.text, rop.text);\r\n\t\t\t\t\trewrites[i] = undefined;\t// delete current insert\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif ( iop.index >= rop.index && iop.index <= rop.lastIndex ) {\r\n\t\t\t\t\tthrow new Error(`insert op ${iop} within boundaries of previous ${rop}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(`rewrites after=[${Utils.join(rewrites, \", \")}]`);\r\n\t\tlet m: Map<number, RewriteOperation> =  new Map<number, RewriteOperation>();\r\n\t\tfor (let op of rewrites) {\r\n\t\t\tif ( op == null ) {\r\n\t\t\t\t// ignore deleted ops\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif ( m.get(op.index) != null ) {\r\n\t\t\t\tthrow new Error(\"should only be one op per index\");\r\n\t\t\t}\r\n\t\t\tm.set(op.index, op);\r\n\t\t}\r\n\t\t// console.log(`index to op: ${m}`);\r\n\t\treturn m;\r\n\t}\r\n\r\n\tprotected catOpText(a: {}, b: {}): string {\r\n\t\tlet x: string =  \"\";\r\n\t\tlet y: string =  \"\";\r\n\t\tif ( a != null ) {\r\n\t\t\tx = a.toString();\r\n\t\t}\r\n\t\tif ( b != null ) {\r\n\t\t\ty = b.toString();\r\n\t\t}\r\n\t\treturn x + y;\r\n\t}\r\n\r\n\t/** Get all operations before an index of a particular kind */\r\n\tprotected getKindOfOps<T extends RewriteOperation>(rewrites: Array<RewriteOperation | undefined>, kind: {new(...args: any[]): T}, before: number): T[] {\r\n\t\tlet ops: T[] = [];\r\n\t\tfor (let i = 0; i < before && i < rewrites.length; i++) {\r\n\t\t\tlet op: RewriteOperation | undefined =  rewrites[i];\r\n\t\t\tif ( op == null ) {\r\n\t\t\t\t// ignore deleted\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif ( op instanceof kind ) {\r\n\t\t\t\tops.push(op);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ops;\r\n\t}\r\n}\r\n\r\n// Define the rewrite operation hierarchy\r\n\r\nexport class RewriteOperation {\r\n\tprotected readonly tokens: TokenStream;\r\n\t/** What index into rewrites List are we? */\r\n\tpublic readonly instructionIndex: number;\r\n\t/** Token buffer index. */\r\n\tpublic index: number;\r\n\tpublic text: {};\r\n\r\n\tconstructor(tokens: TokenStream, index: number, instructionIndex: number);\r\n\tconstructor(tokens: TokenStream, index: number, instructionIndex: number, text: {});\r\n\tconstructor(tokens: TokenStream, index: number, instructionIndex: number, text?: {}) {\r\n\t\tthis.tokens = tokens;\r\n\t\tthis.instructionIndex = instructionIndex;\r\n\t\tthis.index = index;\r\n\t\tthis.text = text === undefined ? \"\" : text;\r\n\t}\r\n\r\n\t/** Execute the rewrite operation by possibly adding to the buffer.\r\n\t *  Return the index of the next token to operate on.\r\n\t */\r\n\tpublic execute(buf: string[]): number {\r\n\t\treturn this.index;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tlet opName: string = this.constructor.name;\r\n\t\tlet $index = opName.indexOf(\"$\");\r\n\t\topName = opName.substring($index + 1, opName.length);\r\n\t\treturn \"<\" + opName + \"@\" + this.tokens.get(this.index) +\r\n\t\t\t\t\":\\\"\" + this.text + \"\\\">\";\r\n\t}\r\n}\r\n\r\nclass InsertBeforeOp extends RewriteOperation {\r\n\tconstructor(tokens: TokenStream, index: number, instructionIndex: number, text: {}) {\r\n\t\tsuper(tokens, index, instructionIndex, text);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic execute(buf: string[]): number {\r\n\t\tbuf.push(this.text.toString());\r\n\t\tif ( this.tokens.get(this.index).type !== Token.EOF ) {\r\n\t\t\tbuf.push(String(this.tokens.get(this.index).text));\r\n\t\t}\r\n\t\treturn this.index + 1;\r\n\t}\r\n}\r\n\r\n/** Distinguish between insert after/before to do the \"insert afters\"\r\n *  first and then the \"insert befores\" at same index. Implementation\r\n *  of \"insert after\" is \"insert before index+1\".\r\n */\r\nclass InsertAfterOp extends InsertBeforeOp {\r\n\tconstructor(tokens: TokenStream, index: number, instructionIndex: number, text: {}) {\r\n\t\tsuper(tokens, index + 1, instructionIndex, text); // insert after is insert before index+1\r\n\t}\r\n}\r\n\r\n/** I'm going to try replacing range from x..y with (y-x)+1 ReplaceOp\r\n *  instructions.\r\n */\r\nclass ReplaceOp extends RewriteOperation {\r\n\tpublic lastIndex: number;\r\n\tconstructor(tokens: TokenStream, from: number, to: number, instructionIndex: number, text: {}) {\r\n\t\tsuper(tokens, from, instructionIndex, text);\r\n\t\tthis.lastIndex = to;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic execute(buf: string[]): number {\r\n\t\tif ( this.text != null ) {\r\n\t\t\tbuf.push(this.text.toString());\r\n\t\t}\r\n\t\treturn this.lastIndex + 1;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tif ( this.text == null ) {\r\n\t\t\treturn \"<DeleteOp@\" + this.tokens.get(this.index) +\r\n\t\t\t\t\t\"..\" + this.tokens.get(this.lastIndex) + \">\";\r\n\t\t}\r\n\t\treturn \"<ReplaceOp@\" + this.tokens.get(this.index) +\r\n\t\t\t\t\"..\" + this.tokens.get(this.lastIndex) + \":\\\"\" + this.text + \"\\\">\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:59.5829654-07:00\r\n\r\nimport { NotNull, Override } from \"./Decorators\";\r\nimport { Token } from \"./Token\";\r\nimport { Vocabulary } from \"./Vocabulary\";\r\n\r\n/**\r\n * This class provides a default implementation of the {@link Vocabulary}\r\n * interface.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class VocabularyImpl implements Vocabulary {\r\n\t/**\r\n\t * Gets an empty {@link Vocabulary} instance.\r\n\t *\r\n\t * No literal or symbol names are assigned to token types, so\r\n\t * {@link #getDisplayName(int)} returns the numeric value for all tokens\r\n\t * except {@link Token#EOF}.\r\n\t */\r\n\t@NotNull\r\n\tpublic static readonly EMPTY_VOCABULARY: VocabularyImpl = new VocabularyImpl([], [], []);\r\n\r\n\t@NotNull\r\n\tprivate readonly literalNames: Array<string | undefined>;\r\n\t@NotNull\r\n\tprivate readonly symbolicNames: Array<string | undefined>;\r\n\t@NotNull\r\n\tprivate readonly displayNames: Array<string | undefined>;\r\n\r\n\tprivate _maxTokenType: number;\r\n\r\n\t/**\r\n\t * Constructs a new instance of {@link VocabularyImpl} from the specified\r\n\t * literal, symbolic, and display token names.\r\n\t *\r\n\t * @param literalNames The literal names assigned to tokens, or an empty array\r\n\t * if no literal names are assigned.\r\n\t * @param symbolicNames The symbolic names assigned to tokens, or\r\n\t * an empty array if no symbolic names are assigned.\r\n\t * @param displayNames The display names assigned to tokens, or an empty array\r\n\t * to use the values in `literalNames` and `symbolicNames` as\r\n\t * the source of display names, as described in\r\n\t * {@link #getDisplayName(int)}.\r\n\t *\r\n\t * @see #getLiteralName(int)\r\n\t * @see #getSymbolicName(int)\r\n\t * @see #getDisplayName(int)\r\n\t */\r\n\tconstructor(literalNames: Array<string | undefined>, symbolicNames: Array<string | undefined>, displayNames: Array<string | undefined>) {\r\n\t\tthis.literalNames = literalNames;\r\n\t\tthis.symbolicNames = symbolicNames;\r\n\t\tthis.displayNames = displayNames;\r\n\t\t// See note here on -1 part: https://github.com/antlr/antlr4/pull/1146\r\n\t\tthis._maxTokenType =\r\n\t\t\tMath.max(this.displayNames.length,\r\n\t\t\t\tMath.max(this.literalNames.length, this.symbolicNames.length)) - 1;\r\n\t}\r\n\r\n\t@Override\r\n\tget maxTokenType(): number {\r\n\t\treturn this._maxTokenType;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getLiteralName(tokenType: number): string | undefined {\r\n\t\tif (tokenType >= 0 && tokenType < this.literalNames.length) {\r\n\t\t\treturn this.literalNames[tokenType];\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getSymbolicName(tokenType: number): string | undefined {\r\n\t\tif (tokenType >= 0 && tokenType < this.symbolicNames.length) {\r\n\t\t\treturn this.symbolicNames[tokenType];\r\n\t\t}\r\n\r\n\t\tif (tokenType === Token.EOF) {\r\n\t\t\treturn \"EOF\";\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic getDisplayName(tokenType: number): string {\r\n\t\tif (tokenType >= 0 && tokenType < this.displayNames.length) {\r\n\t\t\tlet displayName = this.displayNames[tokenType];\r\n\t\t\tif (displayName) {\r\n\t\t\t\treturn displayName;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet literalName = this.getLiteralName(tokenType);\r\n\t\tif (literalName) {\r\n\t\t\treturn literalName;\r\n\t\t}\r\n\r\n\t\tlet symbolicName = this.getSymbolicName(tokenType);\r\n\t\tif (symbolicName) {\r\n\t\t\treturn symbolicName;\r\n\t\t}\r\n\r\n\t\treturn String(tokenType);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:25.1063510-07:00\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNType } from \"./ATNType\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { InvalidState } from \"./InvalidState\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LL1Analyzer } from \"./LL1Analyzer\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { RuleStartState } from \"./RuleStartState\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\nimport { Token } from \"../Token\";\r\nimport { TokensStartState } from \"./TokensStartState\";\r\n\r\nimport * as assert from \"assert\";\r\n\r\n/** */\r\nexport class ATN {\r\n\t@NotNull\r\n\tpublic readonly states: ATNState[] = [];\r\n\r\n\t/** Each subrule/rule is a decision point and we must track them so we\r\n\t *  can go back later and build DFA predictors for them.  This includes\r\n\t *  all the rules, subrules, optional blocks, ()+, ()* etc...\r\n\t */\r\n\t@NotNull\r\n\tpublic decisionToState: DecisionState[] = [];\r\n\r\n\t/**\r\n\t * Maps from rule index to starting state number.\r\n\t */\r\n\tpublic ruleToStartState!: RuleStartState[];\r\n\r\n\t/**\r\n\t * Maps from rule index to stop state number.\r\n\t */\r\n\tpublic ruleToStopState!: RuleStopState[];\r\n\r\n\t@NotNull\r\n\tpublic modeNameToStartState: Map<string, TokensStartState> =\r\n\t\tnew Map<string, TokensStartState>();\r\n\r\n\t/**\r\n\t * The type of the ATN.\r\n\t */\r\n\tpublic grammarType: ATNType;\r\n\r\n\t/**\r\n\t * The maximum value for any symbol recognized by a transition in the ATN.\r\n\t */\r\n\tpublic maxTokenType: number;\r\n\r\n\t/**\r\n\t * For lexer ATNs, this maps the rule index to the resulting token type.\r\n\t * For parser ATNs, this maps the rule index to the generated bypass token\r\n\t * type if the\r\n\t * {@link ATNDeserializationOptions#isGenerateRuleBypassTransitions}\r\n\t * deserialization option was specified; otherwise, this is `undefined`.\r\n\t */\r\n\tpublic ruleToTokenType!: Int32Array;\r\n\r\n\t/**\r\n\t * For lexer ATNs, this is an array of {@link LexerAction} objects which may\r\n\t * be referenced by action transitions in the ATN.\r\n\t */\r\n\tpublic lexerActions!: LexerAction[];\r\n\r\n\t@NotNull\r\n\tpublic modeToStartState: TokensStartState[] = [];\r\n\r\n\tprivate contextCache: Array2DHashMap<PredictionContext, PredictionContext> =\r\n\t\tnew Array2DHashMap<PredictionContext, PredictionContext>(ObjectEqualityComparator.INSTANCE);\r\n\r\n\t@NotNull\r\n\tpublic decisionToDFA: DFA[] = [];\r\n\t@NotNull\r\n\tpublic modeToDFA: DFA[] = [];\r\n\r\n\tpublic LL1Table: Map<number, number> = new Map<number, number>();\r\n\r\n\t/** Used for runtime deserialization of ATNs from strings */\r\n\tconstructor(@NotNull grammarType: ATNType, maxTokenType: number) {\r\n\t\tthis.grammarType = grammarType;\r\n\t\tthis.maxTokenType = maxTokenType;\r\n\t}\r\n\r\n\tpublic clearDFA(): void {\r\n\t\tthis.decisionToDFA = new Array<DFA>(this.decisionToState.length);\r\n\t\tfor (let i = 0; i < this.decisionToDFA.length; i++) {\r\n\t\t\tthis.decisionToDFA[i] = new DFA(this.decisionToState[i], i);\r\n\t\t}\r\n\r\n\t\tthis.modeToDFA = new Array<DFA>(this.modeToStartState.length);\r\n\t\tfor (let i = 0; i < this.modeToDFA.length; i++) {\r\n\t\t\tthis.modeToDFA[i] = new DFA(this.modeToStartState[i]);\r\n\t\t}\r\n\r\n\t\tthis.contextCache.clear();\r\n\t\tthis.LL1Table.clear();\r\n\t}\r\n\r\n\tget contextCacheSize(): number {\r\n\t\treturn this.contextCache.size;\r\n\t}\r\n\r\n\tpublic getCachedContext(context: PredictionContext): PredictionContext {\r\n\t\treturn PredictionContext.getCachedContext(context, this.contextCache, new PredictionContext.IdentityHashMap());\r\n\t}\r\n\r\n\tpublic getDecisionToDFA(): DFA[] {\r\n\t\tassert(this.decisionToDFA != null && this.decisionToDFA.length === this.decisionToState.length);\r\n\t\treturn this.decisionToDFA;\r\n\t}\r\n\r\n\t/** Compute the set of valid tokens that can occur starting in state `s`.\r\n\t *  If `ctx` is {@link PredictionContext#EMPTY_LOCAL}, the set of tokens will not include what can follow\r\n\t *  the rule surrounding `s`. In other words, the set will be\r\n\t *  restricted to tokens reachable staying within `s`'s rule.\r\n\t */\r\n\t// @NotNull\r\n\tpublic nextTokens(s: ATNState, /*@NotNull*/ ctx: PredictionContext): IntervalSet;\r\n\r\n\t/**\r\n\t * Compute the set of valid tokens that can occur starting in `s` and\r\n\t * staying in same rule. {@link Token#EPSILON} is in set if we reach end of\r\n\t * rule.\r\n\t */\r\n\t// @NotNull\r\n\tpublic nextTokens(/*@NotNull*/ s: ATNState): IntervalSet;\r\n\r\n\t@NotNull\r\n\tpublic nextTokens(s: ATNState, ctx?: PredictionContext): IntervalSet {\r\n\t\tif (ctx) {\r\n\t\t\tlet anal: LL1Analyzer = new LL1Analyzer(this);\r\n\t\t\tlet next: IntervalSet = anal.LOOK(s, ctx);\r\n\t\t\treturn next;\r\n\t\t} else {\r\n\t\t\tif (s.nextTokenWithinRule) {\r\n\t\t\t\treturn s.nextTokenWithinRule;\r\n\t\t\t}\r\n\r\n\t\t\ts.nextTokenWithinRule = this.nextTokens(s, PredictionContext.EMPTY_LOCAL);\r\n\t\t\ts.nextTokenWithinRule.setReadonly(true);\r\n\t\t\treturn s.nextTokenWithinRule;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addState(state: ATNState): void {\r\n\t\tstate.atn = this;\r\n\t\tstate.stateNumber = this.states.length;\r\n\t\tthis.states.push(state);\r\n\t}\r\n\r\n\tpublic removeState(@NotNull state: ATNState): void {\r\n\t\t// just replace the state, don't shift states in list\r\n\t\tlet invalidState = new InvalidState();\r\n\t\tinvalidState.atn = this;\r\n\t\tinvalidState.stateNumber = state.stateNumber;\r\n\t\tthis.states[state.stateNumber] = invalidState;\r\n\t}\r\n\r\n\tpublic defineMode(@NotNull name: string, @NotNull s: TokensStartState): void {\r\n\t\tthis.modeNameToStartState.set(name, s);\r\n\t\tthis.modeToStartState.push(s);\r\n\t\tthis.modeToDFA.push(new DFA(s));\r\n\t\tthis.defineDecisionState(s);\r\n\t}\r\n\r\n\tpublic defineDecisionState(@NotNull s: DecisionState): number {\r\n\t\tthis.decisionToState.push(s);\r\n\t\ts.decision = this.decisionToState.length - 1;\r\n\t\tthis.decisionToDFA.push(new DFA(s, s.decision));\r\n\t\treturn s.decision;\r\n\t}\r\n\r\n\tpublic getDecisionState(decision: number): DecisionState | undefined {\r\n\t\tif (this.decisionToState.length > 0) {\r\n\t\t\treturn this.decisionToState[decision];\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tget numberOfDecisions(): number {\r\n\t\treturn this.decisionToState.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the set of input symbols which could follow ATN state number\r\n\t * `stateNumber` in the specified full `context`. This method\r\n\t * considers the complete parser context, but does not evaluate semantic\r\n\t * predicates (i.e. all predicates encountered during the calculation are\r\n\t * assumed true). If a path in the ATN exists from the starting state to the\r\n\t * {@link RuleStopState} of the outermost context without matching any\r\n\t * symbols, {@link Token#EOF} is added to the returned set.\r\n\t *\r\n\t * If `context` is `undefined`, it is treated as\r\n\t * {@link ParserRuleContext#EMPTY}.\r\n\t *\r\n\t * Note that this does NOT give you the set of all tokens that could\r\n\t * appear at a given token position in the input phrase.  In other words, it\r\n\t * does not answer:\r\n\t *\r\n\t * > Given a specific partial input phrase, return the set of all\r\n\t * > tokens that can follow the last token in the input phrase.\r\n\t *\r\n\t * The big difference is that with just the input, the parser could land\r\n\t * right in the middle of a lookahead decision. Getting all\r\n\t * *possible* tokens given a partial input stream is a separate\r\n\t * computation. See https://github.com/antlr/antlr4/issues/1428\r\n\t *\r\n\t * For this function, we are specifying an ATN state and call stack to\r\n\t * compute what token(s) can come next and specifically: outside of a\r\n\t * lookahead decision. That is what you want for error reporting and\r\n\t * recovery upon parse error.\r\n\t *\r\n\t * @param stateNumber the ATN state number\r\n\t * @param context the full parse context\r\n\t * @returns The set of potentially valid input symbols which could follow the\r\n\t * specified state in the specified context.\r\n\t * @ if the ATN does not contain a state with\r\n\t * number `stateNumber`\r\n\t */\r\n\t@NotNull\r\n\tpublic getExpectedTokens(stateNumber: number, context: RuleContext | undefined): IntervalSet {\r\n\t\tif (stateNumber < 0 || stateNumber >= this.states.length) {\r\n\t\t\tthrow new RangeError(\"Invalid state number.\");\r\n\t\t}\r\n\r\n\t\tlet ctx: RuleContext | undefined = context;\r\n\t\tlet s: ATNState = this.states[stateNumber];\r\n\t\tlet following: IntervalSet = this.nextTokens(s);\r\n\t\tif (!following.contains(Token.EPSILON)) {\r\n\t\t\treturn following;\r\n\t\t}\r\n\r\n\t\tlet expected: IntervalSet = new IntervalSet();\r\n\t\texpected.addAll(following);\r\n\t\texpected.remove(Token.EPSILON);\r\n\t\twhile (ctx != null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\r\n\t\t\tlet invokingState: ATNState = this.states[ctx.invokingState];\r\n\t\t\tlet rt: RuleTransition = invokingState.transition(0) as RuleTransition;\r\n\t\t\tfollowing = this.nextTokens(rt.followState);\r\n\t\t\texpected.addAll(following);\r\n\t\t\texpected.remove(Token.EPSILON);\r\n\t\t\tctx = ctx._parent;\r\n\t\t}\r\n\r\n\t\tif (following.contains(Token.EPSILON)) {\r\n\t\t\texpected.add(Token.EOF);\r\n\t\t}\r\n\r\n\t\treturn expected;\r\n\t}\r\n}\r\n\r\nexport namespace ATN {\r\n\texport const INVALID_ALT_NUMBER: number = 0;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:25.2796692-07:00\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { Equatable } from \"../misc/Stubs\";\r\nimport { LexerActionExecutor } from \"./LexerActionExecutor\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { PredictionContextCache } from \"./PredictionContextCache\";\r\nimport { Recognizer } from \"../Recognizer\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\n\r\nimport * as assert from \"assert\";\r\n\r\n/**\r\n * This field stores the bit mask for implementing the\r\n * {@link #isPrecedenceFilterSuppressed} property as a bit within the\r\n * existing {@link #altAndOuterContextDepth} field.\r\n */\r\nconst SUPPRESS_PRECEDENCE_FILTER: number = 0x80000000;\r\n\r\n/**\r\n * Represents a location with context in an ATN. The location is identified by the following values:\r\n *\r\n * * The current ATN state\r\n * * The predicted alternative\r\n * * The semantic context which must be true for this configuration to be enabled\r\n * * The syntactic context, which is represented as a graph-structured stack whose path(s) lead to the root of the rule\r\n *   invocations leading to this state\r\n *\r\n * In addition to these values, `ATNConfig` stores several properties about paths taken to get to the location which\r\n * were added over time to help with performance, correctness, and/or debugging.\r\n *\r\n * * `reachesIntoOuterContext`:: Used to ensure semantic predicates are not evaluated in the wrong context.\r\n * * `hasPassedThroughNonGreedyDecision`: Used for enabling first-match-wins instead of longest-match-wins after\r\n *   crossing a non-greedy decision.\r\n * * `lexerActionExecutor`: Used for tracking the lexer action(s) to execute should this instance be selected during\r\n *   lexing.\r\n * * `isPrecedenceFilterSuppressed`: A state variable for one of the dynamic disambiguation strategies employed by\r\n *   `ParserATNSimulator.applyPrecedenceFilter`.\r\n *\r\n * Due to the use of a graph-structured stack, a single `ATNConfig` is capable of representing many individual ATN\r\n * configurations which reached the same location in an ATN by following different paths.\r\n *\r\n * PERF: To conserve memory, `ATNConfig` is split into several different concrete types. `ATNConfig` itself stores the\r\n * minimum amount of information typically used to define an `ATNConfig` instance. Various derived types provide\r\n * additional storage space for cases where a non-default value is used for some of the object properties. The\r\n * `ATNConfig.create` and `ATNConfig.transform` methods automatically select the smallest concrete type capable of\r\n * representing the unique information for any given `ATNConfig`.\r\n */\r\nexport class ATNConfig implements Equatable {\r\n\t/** The ATN state associated with this configuration */\r\n\t@NotNull\r\n\tprivate _state: ATNState;\r\n\r\n\t/**\r\n\t * This is a bit-field currently containing the following values.\r\n\t *\r\n\t * * 0x00FFFFFF: Alternative\r\n\t * * 0x7F000000: Outer context depth\r\n\t * * 0x80000000: Suppress precedence filter\r\n\t */\r\n\tprivate altAndOuterContextDepth: number;\r\n\r\n\t/** The stack of invoking states leading to the rule/states associated\r\n\t *  with this config.  We track only those contexts pushed during\r\n\t *  execution of the ATN simulator.\r\n\t */\r\n\t@NotNull\r\n\tprivate _context: PredictionContext;\r\n\r\n\tconstructor(/*@NotNull*/ state: ATNState, alt: number, /*@NotNull*/ context: PredictionContext);\r\n\tconstructor(/*@NotNull*/ state: ATNState, /*@NotNull*/ c: ATNConfig, /*@NotNull*/ context: PredictionContext);\r\n\r\n\tconstructor(@NotNull state: ATNState, altOrConfig: number | ATNConfig, @NotNull context: PredictionContext) {\r\n\t\tif (typeof altOrConfig === \"number\") {\r\n\t\t\tassert((altOrConfig & 0xFFFFFF) === altOrConfig);\r\n\t\t\tthis._state = state;\r\n\t\t\tthis.altAndOuterContextDepth = altOrConfig;\r\n\t\t\tthis._context = context;\r\n\t\t} else {\r\n\t\t\tthis._state = state;\r\n\t\t\tthis.altAndOuterContextDepth = altOrConfig.altAndOuterContextDepth;\r\n\t\t\tthis._context = context;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static create(/*@NotNull*/ state: ATNState, alt: number, context: PredictionContext): ATNConfig;\r\n\r\n\tpublic static create(/*@NotNull*/ state: ATNState, alt: number, context: PredictionContext, /*@NotNull*/ semanticContext: SemanticContext): ATNConfig;\r\n\r\n\tpublic static create(/*@NotNull*/ state: ATNState, alt: number, context: PredictionContext, /*@*/ semanticContext: SemanticContext, lexerActionExecutor: LexerActionExecutor | undefined): ATNConfig;\r\n\r\n\tpublic static create(@NotNull state: ATNState, alt: number, context: PredictionContext, @NotNull semanticContext: SemanticContext = SemanticContext.NONE, lexerActionExecutor?: LexerActionExecutor): ATNConfig {\r\n\t\tif (semanticContext !== SemanticContext.NONE) {\r\n\t\t\tif (lexerActionExecutor != null) {\r\n\t\t\t\treturn new ActionSemanticContextATNConfig(lexerActionExecutor, semanticContext, state, alt, context, false);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn new SemanticContextATNConfig(semanticContext, state, alt, context);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (lexerActionExecutor != null) {\r\n\t\t\treturn new ActionATNConfig(lexerActionExecutor, state, alt, context, false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new ATNConfig(state, alt, context);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Gets the ATN state associated with this configuration */\r\n\t@NotNull\r\n\tget state(): ATNState {\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\t/** What alt (or lexer rule) is predicted by this configuration */\r\n\tget alt(): number {\r\n\t\treturn this.altAndOuterContextDepth & 0x00FFFFFF;\r\n\t}\r\n\r\n\t@NotNull\r\n\tget context(): PredictionContext {\r\n\t\treturn this._context;\r\n\t}\r\n\r\n\tset context(@NotNull context: PredictionContext) {\r\n\t\tthis._context = context;\r\n\t}\r\n\r\n\tget reachesIntoOuterContext(): boolean {\r\n\t\treturn this.outerContextDepth !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * We cannot execute predicates dependent upon local context unless\r\n\t * we know for sure we are in the correct context. Because there is\r\n\t * no way to do this efficiently, we simply cannot evaluate\r\n\t * dependent predicates unless we are in the rule that initially\r\n\t * invokes the ATN simulator.\r\n\t *\r\n\t * closure() tracks the depth of how far we dip into the outer context:\r\n\t * depth &gt; 0.  Note that it may not be totally accurate depth since I\r\n\t * don't ever decrement. TODO: make it a boolean then\r\n\t */\r\n\tget outerContextDepth(): number {\r\n\t\treturn (this.altAndOuterContextDepth >>> 24) & 0x7F;\r\n\t}\r\n\r\n\tset outerContextDepth(outerContextDepth: number) {\r\n\t\tassert(outerContextDepth >= 0);\r\n\t\t// saturate at 0x7F - everything but zero/positive is only used for debug information anyway\r\n\t\touterContextDepth = Math.min(outerContextDepth, 0x7F);\r\n\t\tthis.altAndOuterContextDepth = ((outerContextDepth << 24) | (this.altAndOuterContextDepth & ~0x7F000000) >>> 0);\r\n\t}\r\n\r\n\tget lexerActionExecutor(): LexerActionExecutor | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t@NotNull\r\n\tget semanticContext(): SemanticContext {\r\n\t\treturn SemanticContext.NONE;\r\n\t}\r\n\r\n\tget hasPassedThroughNonGreedyDecision(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic clone(): ATNConfig {\r\n\t\treturn this.transform(this.state, false);\r\n\t}\r\n\r\n\tpublic transform(/*@NotNull*/ state: ATNState, checkNonGreedy: boolean): ATNConfig;\r\n\tpublic transform(/*@NotNull*/ state: ATNState, checkNonGreedy: boolean, /*@NotNull*/ semanticContext: SemanticContext): ATNConfig;\r\n\tpublic transform(/*@NotNull*/ state: ATNState, checkNonGreedy: boolean, context: PredictionContext): ATNConfig;\r\n\tpublic transform(/*@NotNull*/ state: ATNState, checkNonGreedy: boolean, lexerActionExecutor: LexerActionExecutor): ATNConfig;\r\n\tpublic transform(/*@NotNull*/ state: ATNState, checkNonGreedy: boolean, arg2?: SemanticContext | PredictionContext | LexerActionExecutor): ATNConfig {\r\n\t\tif (arg2 == null) {\r\n\t\t\treturn this.transformImpl(state, this._context, this.semanticContext, checkNonGreedy, this.lexerActionExecutor);\r\n\t\t} else if (arg2 instanceof PredictionContext) {\r\n\t\t\treturn this.transformImpl(state, arg2, this.semanticContext, checkNonGreedy, this.lexerActionExecutor);\r\n\t\t} else if (arg2 instanceof SemanticContext) {\r\n\t\t\treturn this.transformImpl(state, this._context, arg2, checkNonGreedy, this.lexerActionExecutor);\r\n\t\t} else {\r\n\t\t\treturn this.transformImpl(state, this._context, this.semanticContext, checkNonGreedy, arg2);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate transformImpl(@NotNull state: ATNState, context: PredictionContext, @NotNull semanticContext: SemanticContext, checkNonGreedy: boolean, lexerActionExecutor: LexerActionExecutor | undefined): ATNConfig {\r\n\t\tlet passedThroughNonGreedy: boolean = checkNonGreedy && ATNConfig.checkNonGreedyDecision(this, state);\r\n\t\tif (semanticContext !== SemanticContext.NONE) {\r\n\t\t\tif (lexerActionExecutor != null || passedThroughNonGreedy) {\r\n\t\t\t\treturn new ActionSemanticContextATNConfig(lexerActionExecutor, semanticContext, state, this, context, passedThroughNonGreedy);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn new SemanticContextATNConfig(semanticContext, state, this, context);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (lexerActionExecutor != null || passedThroughNonGreedy) {\r\n\t\t\treturn new ActionATNConfig(lexerActionExecutor, state, this, context, passedThroughNonGreedy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new ATNConfig(state, this, context);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static checkNonGreedyDecision(source: ATNConfig, target: ATNState): boolean {\r\n\t\treturn source.hasPassedThroughNonGreedyDecision\r\n\t\t\t|| target instanceof DecisionState && target.nonGreedy;\r\n\t}\r\n\r\n\tpublic appendContext(context: number, contextCache: PredictionContextCache): ATNConfig;\r\n\tpublic appendContext(context: PredictionContext, contextCache: PredictionContextCache): ATNConfig;\r\n\tpublic appendContext(context: number | PredictionContext, contextCache: PredictionContextCache): ATNConfig {\r\n\t\tif (typeof context === \"number\") {\r\n\t\t\tlet appendedContext: PredictionContext = this.context.appendSingleContext(context, contextCache);\r\n\t\t\tlet result: ATNConfig = this.transform(this.state, false, appendedContext);\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\tlet appendedContext: PredictionContext = this.context.appendContext(context, contextCache);\r\n\t\t\tlet result: ATNConfig = this.transform(this.state, false, appendedContext);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if this `ATNConfig` fully contains another `ATNConfig`.\r\n\t *\r\n\t * An ATN configuration represents a position (including context) in an ATN during parsing. Since `ATNConfig` stores\r\n\t * the context as a graph, a single `ATNConfig` instance is capable of representing many ATN configurations which\r\n\t * are all in the same \"location\" but have different contexts. These `ATNConfig` instances are again merged when\r\n\t * they are added to an `ATNConfigSet`. This method supports `ATNConfigSet.contains` by evaluating whether a\r\n\t * particular `ATNConfig` contains all of the ATN configurations represented by another `ATNConfig`.\r\n\t *\r\n\t * An `ATNConfig` _a_ contains another `ATNConfig` _b_ if all of the following conditions are met:\r\n\t *\r\n\t * * The configurations are in the same state (`state`)\r\n\t * * The configurations predict the same alternative (`alt`)\r\n\t * * The semantic context of _a_ implies the semantic context of _b_ (this method performs a weaker equality check)\r\n\t * * Joining the prediction contexts of _a_ and _b_ results in the prediction context of _a_\r\n\t *\r\n\t * This method implements a conservative approximation of containment. As a result, when this method returns `true`\r\n\t * it is known that parsing from `subconfig` can only recognize a subset of the inputs which can be recognized\r\n\t * starting at the current `ATNConfig`. However, due to the imprecise evaluation of implication for the semantic\r\n\t * contexts, no assumptions can be made about the relationship between the configurations when this method returns\r\n\t * `false`.\r\n\t *\r\n\t * @param subconfig The sub configuration.\r\n\t * @returns `true` if this configuration contains `subconfig`; otherwise, `false`.\r\n\t */\r\n\tpublic contains(subconfig: ATNConfig): boolean {\r\n\t\tif (this.state.stateNumber !== subconfig.state.stateNumber\r\n\t\t\t|| this.alt !== subconfig.alt\r\n\t\t\t|| !this.semanticContext.equals(subconfig.semanticContext)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet leftWorkList: PredictionContext[] = [];\r\n\t\tlet rightWorkList: PredictionContext[] = [];\r\n\t\tleftWorkList.push(this.context);\r\n\t\trightWorkList.push(subconfig.context);\r\n\t\twhile (true) {\r\n\t\t\tlet left = leftWorkList.pop();\r\n\t\t\tlet right = rightWorkList.pop();\r\n\t\t\tif (!left || !right) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (left === right) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (left.size < right.size) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (right.isEmpty) {\r\n\t\t\t\treturn left.hasEmpty;\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < right.size; i++) {\r\n\t\t\t\t\tlet index: number = left.findReturnState(right.getReturnState(i));\r\n\t\t\t\t\tif (index < 0) {\r\n\t\t\t\t\t\t// assumes invokingStates has no duplicate entries\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tleftWorkList.push(left.getParent(index));\r\n\t\t\t\t\trightWorkList.push(right.getParent(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget isPrecedenceFilterSuppressed(): boolean {\r\n\t\treturn (this.altAndOuterContextDepth & SUPPRESS_PRECEDENCE_FILTER) !== 0;\r\n\t}\r\n\r\n\tset isPrecedenceFilterSuppressed(value: boolean) {\r\n\t\tif (value) {\r\n\t\t\tthis.altAndOuterContextDepth |= SUPPRESS_PRECEDENCE_FILTER;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.altAndOuterContextDepth &= ~SUPPRESS_PRECEDENCE_FILTER;\r\n\t\t}\r\n\t}\r\n\r\n\t/** An ATN configuration is equal to another if both have\r\n\t *  the same state, they predict the same alternative, and\r\n\t *  syntactic/semantic contexts are the same.\r\n\t */\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (this === o) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(o instanceof ATNConfig)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.state.stateNumber === o.state.stateNumber\r\n\t\t\t&& this.alt === o.alt\r\n\t\t\t&& this.reachesIntoOuterContext === o.reachesIntoOuterContext\r\n\t\t\t&& this.context.equals(o.context)\r\n\t\t\t&& this.semanticContext.equals(o.semanticContext)\r\n\t\t\t&& this.isPrecedenceFilterSuppressed === o.isPrecedenceFilterSuppressed\r\n\t\t\t&& this.hasPassedThroughNonGreedyDecision === o.hasPassedThroughNonGreedyDecision\r\n\t\t\t&& ObjectEqualityComparator.INSTANCE.equals(this.lexerActionExecutor, o.lexerActionExecutor);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hashCode: number = MurmurHash.initialize(7);\r\n\t\thashCode = MurmurHash.update(hashCode, this.state.stateNumber);\r\n\t\thashCode = MurmurHash.update(hashCode, this.alt);\r\n\t\thashCode = MurmurHash.update(hashCode, this.reachesIntoOuterContext ? 1 : 0);\r\n\t\thashCode = MurmurHash.update(hashCode, this.context);\r\n\t\thashCode = MurmurHash.update(hashCode, this.semanticContext);\r\n\t\thashCode = MurmurHash.update(hashCode, this.hasPassedThroughNonGreedyDecision ? 1 : 0);\r\n\t\thashCode = MurmurHash.update(hashCode, this.lexerActionExecutor);\r\n\t\thashCode = MurmurHash.finish(hashCode, 7);\r\n\t\treturn hashCode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a graphical representation of the current `ATNConfig` in Graphviz format. The graph can be stored to a\r\n\t * **.dot** file and then rendered to an image using Graphviz.\r\n\t *\r\n\t * @returns A Graphviz graph representing the current `ATNConfig`.\r\n\t *\r\n\t * @see http://www.graphviz.org/\r\n\t */\r\n\tpublic toDotString(): string {\r\n\t\tlet builder = \"\";\r\n\t\tbuilder += (\"digraph G {\\n\");\r\n\t\tbuilder += (\"rankdir=LR;\\n\");\r\n\r\n\t\tlet visited = new Array2DHashMap<PredictionContext, number>(PredictionContext.IdentityEqualityComparator.INSTANCE);\r\n\t\tlet workList: PredictionContext[] = [];\r\n\t\tfunction getOrAddContext(context: PredictionContext): number {\r\n\t\t\tlet newNumber = visited.size;\r\n\t\t\tlet result = visited.putIfAbsent(context, newNumber);\r\n\t\t\tif (result != null) {\r\n\t\t\t\t// Already saw this context\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\tworkList.push(context);\r\n\t\t\treturn newNumber;\r\n\t\t}\r\n\r\n\t\tworkList.push(this.context);\r\n\t\tvisited.put(this.context, 0);\r\n\t\twhile (true) {\r\n\t\t\tlet current = workList.pop();\r\n\t\t\tif (!current) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < current.size; i++) {\r\n\t\t\t\tbuilder += (\"  s\") + (getOrAddContext(current));\r\n\t\t\t\tbuilder += (\"->\");\r\n\t\t\t\tbuilder += (\"s\") + (getOrAddContext(current.getParent(i)));\r\n\t\t\t\tbuilder += (\"[label=\\\"\") + (current.getReturnState(i)) + (\"\\\"];\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuilder += (\"}\\n\");\r\n\t\treturn builder.toString();\r\n\t}\r\n\r\n\tpublic toString(): string;\r\n\tpublic toString(recog: Recognizer<any, any> | undefined, showAlt: boolean): string;\r\n\tpublic toString(recog: Recognizer<any, any> | undefined, showAlt: boolean, showContext: boolean): string;\r\n\tpublic toString(recog?: Recognizer<any, any>, showAlt?: boolean, showContext?: boolean): string {\r\n\t\t// Must check showContext before showAlt to preserve original overload behavior\r\n\t\tif (showContext == null) {\r\n\t\t\tshowContext = showAlt != null;\r\n\t\t}\r\n\r\n\t\tif (showAlt == null) {\r\n\t\t\tshowAlt = true;\r\n\t\t}\r\n\r\n\t\tlet buf = \"\";\r\n\t\t// if (this.state.ruleIndex >= 0) {\r\n\t\t// \tif (recog != null) {\r\n\t\t// \t\tbuf += (recog.ruleNames[this.state.ruleIndex] + \":\");\r\n\t\t// \t} else {\r\n\t\t// \t\tbuf += (this.state.ruleIndex + \":\");\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tlet contexts: string[];\r\n\t\tif (showContext) {\r\n\t\t\tcontexts = this.context.toStrings(recog, this.state.stateNumber);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontexts = [\"?\"];\r\n\t\t}\r\n\r\n\t\tlet first: boolean = true;\r\n\t\tfor (let contextDesc of contexts) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbuf += (\", \");\r\n\t\t\t}\r\n\r\n\t\t\tbuf += (\"(\");\r\n\t\t\tbuf += (this.state);\r\n\t\t\tif (showAlt) {\r\n\t\t\t\tbuf += (\",\");\r\n\t\t\t\tbuf += (this.alt);\r\n\t\t\t}\r\n\t\t\tif (this.context) {\r\n\t\t\t\tbuf += (\",\");\r\n\t\t\t\tbuf += (contextDesc);\r\n\t\t\t}\r\n\t\t\tif (this.semanticContext !== SemanticContext.NONE) {\r\n\t\t\t\tbuf += (\",\");\r\n\t\t\t\tbuf += (this.semanticContext);\r\n\t\t\t}\r\n\t\t\tif (this.reachesIntoOuterContext) {\r\n\t\t\t\tbuf += (\",up=\") + (this.outerContextDepth);\r\n\t\t\t}\r\n\t\t\tbuf += (\")\");\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}\r\n}\r\n\r\n/**\r\n * This class was derived from `ATNConfig` purely as a memory optimization. It allows for the creation of an `ATNConfig`\r\n * with a non-default semantic context.\r\n *\r\n * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete\r\n * types.\r\n */\r\nclass SemanticContextATNConfig extends ATNConfig {\r\n\t@NotNull\r\n\tprivate _semanticContext: SemanticContext;\r\n\r\n\tconstructor(semanticContext: SemanticContext, /*@NotNull*/ state: ATNState, alt: number, context: PredictionContext);\r\n\tconstructor(semanticContext: SemanticContext, /*@NotNull*/ state: ATNState, /*@NotNull*/ c: ATNConfig, context: PredictionContext);\r\n\tconstructor(semanticContext: SemanticContext, @NotNull state: ATNState, @NotNull altOrConfig: number | ATNConfig, context: PredictionContext) {\r\n\t\tif (typeof altOrConfig === \"number\") {\r\n\t\t\tsuper(state, altOrConfig, context);\r\n\t\t} else {\r\n\t\t\tsuper(state, altOrConfig, context);\r\n\t\t}\r\n\r\n\t\tthis._semanticContext = semanticContext;\r\n\t}\r\n\r\n\t@Override\r\n\tget semanticContext(): SemanticContext {\r\n\t\treturn this._semanticContext;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * This class was derived from `ATNConfig` purely as a memory optimization. It allows for the creation of an `ATNConfig`\r\n * with a lexer action.\r\n *\r\n * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete\r\n * types.\r\n */\r\nclass ActionATNConfig extends ATNConfig {\r\n\tprivate _lexerActionExecutor?: LexerActionExecutor;\r\n\tprivate passedThroughNonGreedyDecision: boolean;\r\n\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, /*@NotNull*/ state: ATNState, alt: number, context: PredictionContext, passedThroughNonGreedyDecision: boolean);\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, /*@NotNull*/ state: ATNState, /*@NotNull*/ c: ATNConfig, context: PredictionContext, passedThroughNonGreedyDecision: boolean);\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, @NotNull state: ATNState, @NotNull altOrConfig: number | ATNConfig, context: PredictionContext, passedThroughNonGreedyDecision: boolean) {\r\n\t\tif (typeof altOrConfig === \"number\") {\r\n\t\t\tsuper(state, altOrConfig, context);\r\n\t\t} else {\r\n\t\t\tsuper(state, altOrConfig, context);\r\n\t\t\tif (altOrConfig.semanticContext !== SemanticContext.NONE) {\r\n\t\t\t\tthrow new Error(\"Not supported\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._lexerActionExecutor = lexerActionExecutor;\r\n\t\tthis.passedThroughNonGreedyDecision = passedThroughNonGreedyDecision;\r\n\t}\r\n\r\n\t@Override\r\n\tget lexerActionExecutor(): LexerActionExecutor | undefined {\r\n\t\treturn this._lexerActionExecutor;\r\n\t}\r\n\r\n\t@Override\r\n\tget hasPassedThroughNonGreedyDecision(): boolean {\r\n\t\treturn this.passedThroughNonGreedyDecision;\r\n\t}\r\n}\r\n\r\n/**\r\n * This class was derived from `SemanticContextATNConfig` purely as a memory optimization. It allows for the creation of\r\n * an `ATNConfig` with both a lexer action and a non-default semantic context.\r\n *\r\n * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete\r\n * types.\r\n */\r\nclass ActionSemanticContextATNConfig extends SemanticContextATNConfig {\r\n\tprivate _lexerActionExecutor?: LexerActionExecutor;\r\n\tprivate passedThroughNonGreedyDecision: boolean;\r\n\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, /*@NotNull*/ semanticContext: SemanticContext, /*@NotNull*/ state: ATNState, alt: number, context: PredictionContext, passedThroughNonGreedyDecision: boolean);\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, /*@NotNull*/ semanticContext: SemanticContext, /*@NotNull*/ state: ATNState, /*@NotNull*/ c: ATNConfig, context: PredictionContext, passedThroughNonGreedyDecision: boolean);\r\n\tconstructor(lexerActionExecutor: LexerActionExecutor | undefined, @NotNull semanticContext: SemanticContext, @NotNull state: ATNState, altOrConfig: number | ATNConfig, context: PredictionContext, passedThroughNonGreedyDecision: boolean) {\r\n\t\tif (typeof altOrConfig === \"number\") {\r\n\t\t\tsuper(semanticContext, state, altOrConfig, context);\r\n\t\t} else {\r\n\t\t\tsuper(semanticContext, state, altOrConfig, context);\r\n\t\t}\r\n\r\n\t\tthis._lexerActionExecutor = lexerActionExecutor;\r\n\t\tthis.passedThroughNonGreedyDecision = passedThroughNonGreedyDecision;\r\n\t}\r\n\r\n\t@Override\r\n\tget lexerActionExecutor(): LexerActionExecutor | undefined {\r\n\t\treturn this._lexerActionExecutor;\r\n\t}\r\n\r\n\t@Override\r\n\tget hasPassedThroughNonGreedyDecision(): boolean {\r\n\t\treturn this.passedThroughNonGreedyDecision;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:25.5488013-07:00\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { ArrayEqualityComparator } from \"../misc/ArrayEqualityComparator\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNSimulator } from \"./ATNSimulator\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { ConflictInfo } from \"./ConflictInfo\";\r\nimport { EqualityComparator } from \"../misc/EqualityComparator\";\r\nimport { JavaSet } from \"../misc/Stubs\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { PredictionContextCache } from \"./PredictionContextCache\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\n\r\nimport * as assert from \"assert\";\r\nimport * as Utils from \"../misc/Utils\";\r\n\r\ninterface KeyType { state: number; alt: number; }\r\n\r\nclass KeyTypeEqualityComparer implements EqualityComparator<KeyType> {\r\n\tpublic hashCode(key: KeyType) {\r\n\t\treturn key.state ^ key.alt;\r\n\t}\r\n\r\n\tpublic equals(a: KeyType, b: KeyType) {\r\n\t\treturn a.state === b.state && a.alt === b.alt;\r\n\t}\r\n\r\n\tpublic static readonly INSTANCE = new KeyTypeEqualityComparer();\r\n}\r\n\r\nfunction NewKeyedConfigMap(map?: Array2DHashMap<KeyType, ATNConfig>) {\r\n\tif (map) {\r\n\t\treturn new Array2DHashMap<KeyType, ATNConfig>(map);\r\n\t} else {\r\n\t\treturn new Array2DHashMap<KeyType, ATNConfig>(KeyTypeEqualityComparer.INSTANCE);\r\n\t}\r\n}\r\n\r\n/**\r\n * Represents a set of ATN configurations (see `ATNConfig`). As configurations are added to the set, they are merged\r\n * with other `ATNConfig` instances already in the set when possible using the graph-structured stack.\r\n *\r\n * An instance of this class represents the complete set of positions (with context) in an ATN which would be associated\r\n * with a single DFA state. Its internal representation is more complex than traditional state used for NFA to DFA\r\n * conversion due to performance requirements (both improving speed and reducing memory overhead) as well as supporting\r\n * features such as semantic predicates and non-greedy operators in a form to support ANTLR's prediction algorithm.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ATNConfigSet implements JavaSet<ATNConfig> {\r\n\t/**\r\n\t * This maps (state, alt) -> merged {@link ATNConfig}. The key does not account for\r\n\t * the {@link ATNConfig#getSemanticContext} of the value, which is only a problem if a single\r\n\t * `ATNConfigSet` contains two configs with the same state and alternative\r\n\t * but different semantic contexts. When this case arises, the first config\r\n\t * added to this map stays, and the remaining configs are placed in {@link #unmerged}.\r\n\t *\r\n\t * This map is only used for optimizing the process of adding configs to the set,\r\n\t * and is `undefined` for read-only sets stored in the DFA.\r\n\t */\r\n\tprivate mergedConfigs?: Array2DHashMap<KeyType, ATNConfig>;\r\n\r\n\t/**\r\n\t * This is an \"overflow\" list holding configs which cannot be merged with one\r\n\t * of the configs in {@link #mergedConfigs} but have a colliding key. This\r\n\t * occurs when two configs in the set have the same state and alternative but\r\n\t * different semantic contexts.\r\n\t *\r\n\t * This list is only used for optimizing the process of adding configs to the set,\r\n\t * and is `undefined` for read-only sets stored in the DFA.\r\n\t */\r\n\tprivate unmerged?: ATNConfig[];\r\n\r\n\t/**\r\n\t * This is a list of all configs in this set.\r\n\t */\r\n\tprivate configs: ATNConfig[];\r\n\r\n\tprivate _uniqueAlt: number = 0;\r\n\tprivate _conflictInfo?: ConflictInfo;\r\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\r\n\t// while computing a closure operation.  Don't make a DFA state from this.\r\n\tprivate _hasSemanticContext: boolean = false;\r\n\tprivate _dipsIntoOuterContext: boolean = false;\r\n\t/**\r\n\t * When `true`, this config set represents configurations where the entire\r\n\t * outer context has been consumed by the ATN interpreter. This prevents the\r\n\t * {@link ParserATNSimulator#closure} from pursuing the global FOLLOW when a\r\n\t * rule stop state is reached with an empty prediction context.\r\n\t *\r\n\t * Note: `outermostConfigSet` and {@link #dipsIntoOuterContext} should never\r\n\t * be true at the same time.\r\n\t */\r\n\tprivate outermostConfigSet: boolean = false;\r\n\r\n\tprivate cachedHashCode: number = -1;\r\n\r\n\tconstructor();\r\n\tconstructor(set: ATNConfigSet, readonly: boolean);\r\n\tconstructor(set?: ATNConfigSet, readonly?: boolean) {\r\n\t\tif (!set) {\r\n\t\t\tthis.mergedConfigs = NewKeyedConfigMap();\r\n\t\t\tthis.unmerged = [];\r\n\t\t\tthis.configs = [];\r\n\r\n\t\t\tthis._uniqueAlt = ATN.INVALID_ALT_NUMBER;\r\n\t\t} else {\r\n\r\n\t\t\tif (readonly) {\r\n\t\t\t\tthis.mergedConfigs = undefined;\r\n\t\t\t\tthis.unmerged = undefined;\r\n\t\t\t} else if (!set.isReadOnly) {\r\n\t\t\t\tthis.mergedConfigs = NewKeyedConfigMap(set.mergedConfigs);\r\n\t\t\t\tthis.unmerged = (set.unmerged as ATNConfig[]).slice(0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.mergedConfigs = NewKeyedConfigMap();\r\n\t\t\t\tthis.unmerged = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.configs = set.configs.slice(0);\r\n\r\n\t\t\tthis._dipsIntoOuterContext = set._dipsIntoOuterContext;\r\n\t\t\tthis._hasSemanticContext = set._hasSemanticContext;\r\n\t\t\tthis.outermostConfigSet = set.outermostConfigSet;\r\n\r\n\t\t\tif (readonly || !set.isReadOnly) {\r\n\t\t\t\tthis._uniqueAlt = set._uniqueAlt;\r\n\t\t\t\tthis._conflictInfo = set._conflictInfo;\r\n\t\t\t}\r\n\r\n\t\t\t// if (!readonly && set.isReadOnly) -> addAll is called from clone()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the set of all alternatives represented by configurations in this\r\n\t * set.\r\n\t */\r\n\t@NotNull\r\n\tpublic getRepresentedAlternatives(): BitSet {\r\n\t\tif (this._conflictInfo != null) {\r\n\t\t\treturn this._conflictInfo.conflictedAlts.clone();\r\n\t\t}\r\n\r\n\t\tlet alts: BitSet = new BitSet();\r\n\t\tfor (let config of this) {\r\n\t\t\talts.set(config.alt);\r\n\t\t}\r\n\r\n\t\treturn alts;\r\n\t}\r\n\r\n\tget isReadOnly(): boolean {\r\n\t\treturn this.mergedConfigs == null;\r\n\t}\r\n\r\n\tget isOutermostConfigSet(): boolean {\r\n\t\treturn this.outermostConfigSet;\r\n\t}\r\n\r\n\tset isOutermostConfigSet(outermostConfigSet: boolean) {\r\n\t\tif (this.outermostConfigSet && !outermostConfigSet) {\r\n\t\t\tthrow new Error(\"IllegalStateException\");\r\n\t\t}\r\n\r\n\t\tassert(!outermostConfigSet || !this._dipsIntoOuterContext);\r\n\t\tthis.outermostConfigSet = outermostConfigSet;\r\n\t}\r\n\r\n\tpublic getStates(): Array2DHashSet<ATNState> {\r\n\t\tlet states = new Array2DHashSet<ATNState>(ObjectEqualityComparator.INSTANCE);\r\n\t\tfor (let c of this.configs) {\r\n\t\t\tstates.add(c.state);\r\n\t\t}\r\n\r\n\t\treturn states;\r\n\t}\r\n\r\n\tpublic optimizeConfigs(interpreter: ATNSimulator): void {\r\n\t\tif (this.configs.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let config of this.configs) {\r\n\t\t\tconfig.context = interpreter.atn.getCachedContext(config.context);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clone(readonly: boolean): ATNConfigSet {\r\n\t\tlet copy: ATNConfigSet = new ATNConfigSet(this, readonly);\r\n\t\tif (!readonly && this.isReadOnly) {\r\n\t\t\tcopy.addAll(this.configs);\r\n\t\t}\r\n\r\n\t\treturn copy;\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn this.configs.length;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.configs.length === 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic contains(o: any): boolean {\r\n\t\tif (!(o instanceof ATNConfig)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.mergedConfigs && this.unmerged) {\r\n\t\t\tlet config: ATNConfig = o;\r\n\t\t\tlet configKey = this.getKey(config);\r\n\t\t\tlet mergedConfig = this.mergedConfigs.get(configKey);\r\n\t\t\tif (mergedConfig != null && this.canMerge(config, configKey, mergedConfig)) {\r\n\t\t\t\treturn mergedConfig.contains(config);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let c of this.unmerged) {\r\n\t\t\t\tif (c.contains(o)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let c of this.configs) {\r\n\t\t\t\tif (c.contains(o)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic *[Symbol.iterator](): IterableIterator<ATNConfig> {\r\n\t\tyield* this.configs;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toArray(): ATNConfig[] {\r\n\t\treturn this.configs;\r\n\t}\r\n\r\n\tpublic add(e: ATNConfig): boolean;\r\n\tpublic add(e: ATNConfig, contextCache: PredictionContextCache | undefined): boolean;\r\n\tpublic add(e: ATNConfig, contextCache?: PredictionContextCache): boolean {\r\n\t\tthis.ensureWritable();\r\n\t\tif (!this.mergedConfigs || !this.unmerged) {\r\n\t\t\tthrow new Error(\"Covered by ensureWritable but duplicated here for strict null check limitation\");\r\n\t\t}\r\n\r\n\t\tassert(!this.outermostConfigSet || !e.reachesIntoOuterContext);\r\n\r\n\t\tif (contextCache == null) {\r\n\t\t\tcontextCache = PredictionContextCache.UNCACHED;\r\n\t\t}\r\n\r\n\t\tlet addKey: boolean;\r\n\t\tlet key = this.getKey(e);\r\n\t\tlet mergedConfig = this.mergedConfigs.get(key);\r\n\t\taddKey = (mergedConfig == null);\r\n\t\tif (mergedConfig != null && this.canMerge(e, key, mergedConfig)) {\r\n\t\t\tmergedConfig.outerContextDepth = Math.max(mergedConfig.outerContextDepth, e.outerContextDepth);\r\n\t\t\tif (e.isPrecedenceFilterSuppressed) {\r\n\t\t\t\tmergedConfig.isPrecedenceFilterSuppressed = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet joined: PredictionContext = PredictionContext.join(mergedConfig.context, e.context, contextCache);\r\n\t\t\tthis.updatePropertiesForMergedConfig(e);\r\n\t\t\tif (mergedConfig.context === joined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tmergedConfig.context = joined;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.unmerged.length; i++) {\r\n\t\t\tlet unmergedConfig: ATNConfig = this.unmerged[i];\r\n\t\t\tif (this.canMerge(e, key, unmergedConfig)) {\r\n\t\t\t\tunmergedConfig.outerContextDepth = Math.max(unmergedConfig.outerContextDepth, e.outerContextDepth);\r\n\t\t\t\tif (e.isPrecedenceFilterSuppressed) {\r\n\t\t\t\t\tunmergedConfig.isPrecedenceFilterSuppressed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet joined: PredictionContext = PredictionContext.join(unmergedConfig.context, e.context, contextCache);\r\n\t\t\t\tthis.updatePropertiesForMergedConfig(e);\r\n\t\t\t\tif (unmergedConfig.context === joined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunmergedConfig.context = joined;\r\n\r\n\t\t\t\tif (addKey) {\r\n\t\t\t\t\tthis.mergedConfigs.put(key, unmergedConfig);\r\n\t\t\t\t\tthis.unmerged.splice(i, 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.configs.push(e);\r\n\t\tif (addKey) {\r\n\t\t\tthis.mergedConfigs.put(key, e);\r\n\t\t} else {\r\n\t\t\tthis.unmerged.push(e);\r\n\t\t}\r\n\r\n\t\tthis.updatePropertiesForAddedConfig(e);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate updatePropertiesForMergedConfig(config: ATNConfig): void {\r\n\t\t// merged configs can't change the alt or semantic context\r\n\t\tthis._dipsIntoOuterContext = this._dipsIntoOuterContext || config.reachesIntoOuterContext;\r\n\t\tassert(!this.outermostConfigSet || !this._dipsIntoOuterContext);\r\n\t}\r\n\r\n\tprivate updatePropertiesForAddedConfig(config: ATNConfig): void {\r\n\t\tif (this.configs.length === 1) {\r\n\t\t\tthis._uniqueAlt = config.alt;\r\n\t\t} else if (this._uniqueAlt !== config.alt) {\r\n\t\t\tthis._uniqueAlt = ATN.INVALID_ALT_NUMBER;\r\n\t\t}\r\n\r\n\t\tthis._hasSemanticContext = this._hasSemanticContext || !SemanticContext.NONE.equals(config.semanticContext);\r\n\t\tthis._dipsIntoOuterContext = this._dipsIntoOuterContext || config.reachesIntoOuterContext;\r\n\t\tassert(!this.outermostConfigSet || !this._dipsIntoOuterContext);\r\n\t}\r\n\r\n\tprotected canMerge(left: ATNConfig, leftKey: { state: number, alt: number }, right: ATNConfig): boolean {\r\n\t\tif (left.state.stateNumber !== right.state.stateNumber) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (leftKey.alt !== right.alt) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn left.semanticContext.equals(right.semanticContext);\r\n\t}\r\n\r\n\tprotected getKey(e: ATNConfig): { state: number, alt: number } {\r\n\t\treturn { state: e.state.stateNumber, alt: e.alt };\r\n\t}\r\n\r\n\t@Override\r\n\tpublic containsAll(c: Iterable<any>): boolean {\r\n\t\tfor (let o of c) {\r\n\t\t\tif (!(o instanceof ATNConfig)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.contains(o)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic addAll(c: Iterable<ATNConfig>): boolean;\r\n\tpublic addAll(c: Iterable<ATNConfig>, contextCache: PredictionContextCache): boolean;\r\n\tpublic addAll(c: Iterable<ATNConfig>, contextCache?: PredictionContextCache): boolean {\r\n\t\tthis.ensureWritable();\r\n\r\n\t\tlet changed: boolean = false;\r\n\t\tfor (let group of c) {\r\n\t\t\tif (this.add(group, contextCache)) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic clear(): void {\r\n\t\tthis.ensureWritable();\r\n\t\tif (!this.mergedConfigs || !this.unmerged) {\r\n\t\t\tthrow new Error(\"Covered by ensureWritable but duplicated here for strict null check limitation\");\r\n\t\t}\r\n\r\n\t\tthis.mergedConfigs.clear();\r\n\t\tthis.unmerged.length = 0;\r\n\t\tthis.configs.length = 0;\r\n\r\n\t\tthis._dipsIntoOuterContext = false;\r\n\t\tthis._hasSemanticContext = false;\r\n\t\tthis._uniqueAlt = ATN.INVALID_ALT_NUMBER;\r\n\t\tthis._conflictInfo = undefined;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (this === obj) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!(obj instanceof ATNConfigSet)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.outermostConfigSet === obj.outermostConfigSet\r\n\t\t\t&& Utils.equals(this._conflictInfo, obj._conflictInfo)\r\n\t\t\t&& ArrayEqualityComparator.INSTANCE.equals(this.configs, obj.configs);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tif (this.isReadOnly && this.cachedHashCode !== -1) {\r\n\t\t\treturn this.cachedHashCode;\r\n\t\t}\r\n\r\n\t\tlet hashCode: number = 1;\r\n\t\thashCode = 5 * hashCode ^ (this.outermostConfigSet ? 1 : 0);\r\n\t\thashCode = 5 * hashCode ^ ArrayEqualityComparator.INSTANCE.hashCode(this.configs);\r\n\r\n\t\tif (this.isReadOnly) {\r\n\t\t\tthis.cachedHashCode = hashCode;\r\n\t\t}\r\n\r\n\t\treturn hashCode;\r\n\t}\r\n\r\n\tpublic toString(): string;\r\n\tpublic toString(showContext: boolean): string;\r\n\tpublic toString(showContext?: boolean): string {\r\n\t\tif (showContext == null) {\r\n\t\t\tshowContext = false;\r\n\t\t}\r\n\r\n\t\tlet buf = \"\";\r\n\t\tlet sortedConfigs = this.configs.slice(0);\r\n\t\tsortedConfigs.sort((o1, o2) => {\r\n\t\t\tif (o1.alt !== o2.alt) {\r\n\t\t\t\treturn o1.alt - o2.alt;\r\n\t\t\t}\r\n\t\t\telse if (o1.state.stateNumber !== o2.state.stateNumber) {\r\n\t\t\t\treturn o1.state.stateNumber - o2.state.stateNumber;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn o1.semanticContext.toString().localeCompare(o2.semanticContext.toString());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbuf += (\"[\");\r\n\t\tfor (let i = 0; i < sortedConfigs.length; i++) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tbuf += (\", \");\r\n\t\t\t}\r\n\t\t\tbuf += (sortedConfigs[i].toString(undefined, true, showContext));\r\n\t\t}\r\n\t\tbuf += (\"]\");\r\n\r\n\t\tif (this._hasSemanticContext) {\r\n\t\t\tbuf += (\",hasSemanticContext=\") + (this._hasSemanticContext);\r\n\t\t}\r\n\t\tif (this._uniqueAlt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\tbuf += (\",uniqueAlt=\") + (this._uniqueAlt);\r\n\t\t}\r\n\t\tif (this._conflictInfo != null) {\r\n\t\t\tbuf += (\",conflictingAlts=\") + (this._conflictInfo.conflictedAlts);\r\n\t\t\tif (!this._conflictInfo.isExact) {\r\n\t\t\t\tbuf += (\"*\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._dipsIntoOuterContext) {\r\n\t\t\tbuf += (\",dipsIntoOuterContext\");\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\tget uniqueAlt(): number {\r\n\t\treturn this._uniqueAlt;\r\n\t}\r\n\r\n\tget hasSemanticContext(): boolean {\r\n\t\treturn this._hasSemanticContext;\r\n\t}\r\n\r\n\tset hasSemanticContext(value: boolean) {\r\n\t\tthis.ensureWritable();\r\n\t\tthis._hasSemanticContext = value;\r\n\t}\r\n\r\n\tget conflictInfo(): ConflictInfo | undefined {\r\n\t\treturn this._conflictInfo;\r\n\t}\r\n\r\n\tset conflictInfo(conflictInfo: ConflictInfo | undefined) {\r\n\t\tthis.ensureWritable();\r\n\t\tthis._conflictInfo = conflictInfo;\r\n\t}\r\n\r\n\tget conflictingAlts(): BitSet | undefined {\r\n\t\tif (this._conflictInfo == null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn this._conflictInfo.conflictedAlts;\r\n\t}\r\n\r\n\tget isExactConflict(): boolean {\r\n\t\tif (this._conflictInfo == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._conflictInfo.isExact;\r\n\t}\r\n\r\n\tget dipsIntoOuterContext(): boolean {\r\n\t\treturn this._dipsIntoOuterContext;\r\n\t}\r\n\r\n\tpublic get(index: number): ATNConfig {\r\n\t\treturn this.configs[index];\r\n\t}\r\n\r\n\tprotected ensureWritable(): void {\r\n\t\tif (this.isReadOnly) {\r\n\t\t\tthrow new Error(\"This ATNConfigSet is read only.\");\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:25.8187912-07:00\r\n\r\nimport { NotNull } from \"../Decorators\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ATNDeserializationOptions {\r\n\tprivate static _defaultOptions?: ATNDeserializationOptions;\r\n\r\n\tprivate readOnly: boolean = false;\r\n\tprivate verifyATN: boolean;\r\n\tprivate generateRuleBypassTransitions: boolean;\r\n\tprivate optimize: boolean;\r\n\r\n\tconstructor(options?: ATNDeserializationOptions) {\r\n\t\tif (options) {\r\n\t\t\tthis.verifyATN = options.verifyATN;\r\n\t\t\tthis.generateRuleBypassTransitions = options.generateRuleBypassTransitions;\r\n\t\t\tthis.optimize = options.optimize;\r\n\t\t} else {\r\n\t\t\tthis.verifyATN = true;\r\n\t\t\tthis.generateRuleBypassTransitions = false;\r\n\t\t\tthis.optimize = true;\r\n\t\t}\r\n\t}\r\n\r\n\t@NotNull\r\n\tstatic get defaultOptions(): ATNDeserializationOptions {\r\n\t\tif (ATNDeserializationOptions._defaultOptions == null) {\r\n\t\t\tATNDeserializationOptions._defaultOptions = new ATNDeserializationOptions();\r\n\t\t\tATNDeserializationOptions._defaultOptions.makeReadOnly();\r\n\t\t}\r\n\r\n\t\treturn ATNDeserializationOptions._defaultOptions;\r\n\t}\r\n\r\n\tget isReadOnly(): boolean {\r\n\t\treturn this.readOnly;\r\n\t}\r\n\r\n\tpublic makeReadOnly(): void {\r\n\t\tthis.readOnly = true;\r\n\t}\r\n\r\n\tget isVerifyATN(): boolean {\r\n\t\treturn this.verifyATN;\r\n\t}\r\n\r\n\tset isVerifyATN(verifyATN: boolean) {\r\n\t\tthis.throwIfReadOnly();\r\n\t\tthis.verifyATN = verifyATN;\r\n\t}\r\n\r\n\tget isGenerateRuleBypassTransitions(): boolean {\r\n\t\treturn this.generateRuleBypassTransitions;\r\n\t}\r\n\r\n\tset isGenerateRuleBypassTransitions(generateRuleBypassTransitions: boolean) {\r\n\t\tthis.throwIfReadOnly();\r\n\t\tthis.generateRuleBypassTransitions = generateRuleBypassTransitions;\r\n\t}\r\n\r\n\tget isOptimize(): boolean {\r\n\t\treturn this.optimize;\r\n\t}\r\n\r\n\tset isOptimize(optimize: boolean) {\r\n\t\tthis.throwIfReadOnly();\r\n\t\tthis.optimize = optimize;\r\n\t}\r\n\r\n\tprotected throwIfReadOnly(): void {\r\n\t\tif (this.isReadOnly) {\r\n\t\t\tthrow new Error(\"The object is read only.\");\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:25.9683447-07:00\r\n\r\nimport { ActionTransition } from \"./ActionTransition\";\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNDeserializationOptions } from \"./ATNDeserializationOptions\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { ATNType } from \"./ATNType\";\r\nimport { AtomTransition } from \"./AtomTransition\";\r\nimport { BasicBlockStartState } from \"./BasicBlockStartState\";\r\nimport { BasicState } from \"./BasicState\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { BlockEndState } from \"./BlockEndState\";\r\nimport { BlockStartState } from \"./BlockStartState\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { EpsilonTransition } from \"./EpsilonTransition\";\r\nimport { Interval } from \"../misc/Interval\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { InvalidState } from \"./InvalidState\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { LexerChannelAction } from \"./LexerChannelAction\";\r\nimport { LexerCustomAction } from \"./LexerCustomAction\";\r\nimport { LexerModeAction } from \"./LexerModeAction\";\r\nimport { LexerMoreAction } from \"./LexerMoreAction\";\r\nimport { LexerPopModeAction } from \"./LexerPopModeAction\";\r\nimport { LexerPushModeAction } from \"./LexerPushModeAction\";\r\nimport { LexerSkipAction } from \"./LexerSkipAction\";\r\nimport { LexerTypeAction } from \"./LexerTypeAction\";\r\nimport { LoopEndState } from \"./LoopEndState\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { NotSetTransition } from \"./NotSetTransition\";\r\nimport { ParserATNSimulator } from \"./ParserATNSimulator\";\r\nimport { PlusBlockStartState } from \"./PlusBlockStartState\";\r\nimport { PlusLoopbackState } from \"./PlusLoopbackState\";\r\nimport { PrecedencePredicateTransition } from \"./PrecedencePredicateTransition\";\r\nimport { PredicateTransition } from \"./PredicateTransition\";\r\nimport { RangeTransition } from \"./RangeTransition\";\r\nimport { RuleStartState } from \"./RuleStartState\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\nimport { SetTransition } from \"./SetTransition\";\r\nimport { StarBlockStartState } from \"./StarBlockStartState\";\r\nimport { StarLoopbackState } from \"./StarLoopbackState\";\r\nimport { StarLoopEntryState } from \"./StarLoopEntryState\";\r\nimport { Token } from \"../Token\";\r\nimport { TokensStartState } from \"./TokensStartState\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\nimport { UUID } from \"../misc/UUID\";\r\nimport { WildcardTransition } from \"./WildcardTransition\";\r\n\r\ninterface UnicodeDeserializer {\r\n\t// Wrapper for readInt() or readInt32()\r\n\treadUnicode(data: Uint16Array, p: number): number;\r\n\r\n\t// Work around Java not allowing mutation of captured variables\r\n\t// by returning amount by which to increment p after each read\r\n\treadonly size: number;\r\n}\r\n\r\nconst enum UnicodeDeserializingMode {\r\n\tUNICODE_BMP,\r\n\tUNICODE_SMP,\r\n}\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ATNDeserializer {\r\n\tstatic get SERIALIZED_VERSION(): number {\r\n\t\t/* This value should never change. Updates following this version are\r\n\t\t * reflected as change in the unique ID SERIALIZED_UUID.\r\n\t\t */\r\n\t\treturn 3;\r\n\t}\r\n\r\n\t/* WARNING: DO NOT MERGE THESE LINES. If UUIDs differ during a merge,\r\n\t * resolve the conflict by generating a new ID!\r\n\t */\r\n\r\n\t/**\r\n\t * This is the earliest supported serialized UUID.\r\n\t */\r\n\tprivate static readonly BASE_SERIALIZED_UUID: UUID = UUID.fromString(\"E4178468-DF95-44D0-AD87-F22A5D5FB6D3\");\r\n\t/**\r\n\t * This UUID indicates an extension of {@link #ADDED_PRECEDENCE_TRANSITIONS}\r\n\t * for the addition of lexer actions encoded as a sequence of\r\n\t * {@link LexerAction} instances.\r\n\t */\r\n\tprivate static readonly ADDED_LEXER_ACTIONS: UUID = UUID.fromString(\"AB35191A-1603-487E-B75A-479B831EAF6D\");\r\n\t/**\r\n\t * This UUID indicates the serialized ATN contains two sets of\r\n\t * IntervalSets, where the second set's values are encoded as\r\n\t * 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\r\n\t */\r\n\tprivate static readonly ADDED_UNICODE_SMP: UUID = UUID.fromString(\"C23FEA89-0605-4f51-AFB8-058BCAB8C91B\");\r\n\t/**\r\n\t * This list contains all of the currently supported UUIDs, ordered by when\r\n\t * the feature first appeared in this branch.\r\n\t */\r\n\tprivate static readonly SUPPORTED_UUIDS: UUID[] = [\r\n\t\tATNDeserializer.BASE_SERIALIZED_UUID,\r\n\t\tATNDeserializer.ADDED_LEXER_ACTIONS,\r\n\t\tATNDeserializer.ADDED_UNICODE_SMP,\r\n\t];\r\n\r\n\t/**\r\n\t * This is the current serialized UUID.\r\n\t */\r\n\tprivate static readonly SERIALIZED_UUID: UUID = ATNDeserializer.ADDED_UNICODE_SMP;\r\n\r\n\t@NotNull\r\n\tprivate readonly deserializationOptions: ATNDeserializationOptions;\r\n\r\n\tconstructor(deserializationOptions?: ATNDeserializationOptions) {\r\n\t\tif (deserializationOptions === undefined) {\r\n\t\t\tdeserializationOptions = ATNDeserializationOptions.defaultOptions;\r\n\t\t}\r\n\r\n\t\tthis.deserializationOptions = deserializationOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if a particular serialized representation of an ATN supports\r\n\t * a particular feature, identified by the {@link UUID} used for serializing\r\n\t * the ATN at the time the feature was first introduced.\r\n\t *\r\n\t * @param feature The {@link UUID} marking the first time the feature was\r\n\t * supported in the serialized ATN.\r\n\t * @param actualUuid The {@link UUID} of the actual serialized ATN which is\r\n\t * currently being deserialized.\r\n\t * @returns `true` if the `actualUuid` value represents a\r\n\t * serialized ATN at or after the feature identified by `feature` was\r\n\t * introduced; otherwise, `false`.\r\n\t */\r\n\tprotected static isFeatureSupported(feature: UUID, actualUuid: UUID): boolean {\r\n\t\tlet featureIndex: number = ATNDeserializer.SUPPORTED_UUIDS.findIndex((e) => e.equals(feature));\r\n\t\tif (featureIndex < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn ATNDeserializer.SUPPORTED_UUIDS.findIndex((e) => e.equals(actualUuid)) >= featureIndex;\r\n\t}\r\n\r\n\tprivate static getUnicodeDeserializer(mode: UnicodeDeserializingMode): UnicodeDeserializer {\r\n\t\tif (mode === UnicodeDeserializingMode.UNICODE_BMP) {\r\n\t\t\treturn {\r\n\t\t\t\treadUnicode: (data: Uint16Array, p: number): number => {\r\n\t\t\t\t\treturn ATNDeserializer.toInt(data[p]);\r\n\t\t\t\t},\r\n\t\t\t\tsize: 1,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\treadUnicode: (data: Uint16Array, p: number): number => {\r\n\t\t\t\t\treturn ATNDeserializer.toInt32(data, p);\r\n\t\t\t\t},\r\n\t\t\t\tsize: 2,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpublic deserialize(@NotNull data: Uint16Array): ATN {\r\n\t\tdata = data.slice(0);\r\n\r\n\t\t// Each Uint16 value in data is shifted by +2 at the entry to this method. This is an encoding optimization\r\n\t\t// targeting the serialized values 0 and -1 (serialized to 0xFFFF), each of which are very common in the\r\n\t\t// serialized form of the ATN. In the modified UTF-8 that Java uses for compiled string literals, these two\r\n\t\t// character values have multi-byte forms. By shifting each value by +2, they become characters 2 and 1 prior to\r\n\t\t// writing the string, each of which have single-byte representations. Since the shift occurs in the tool during\r\n\t\t// ATN serialization, each target is responsible for adjusting the values during deserialization.\r\n\t\t//\r\n\t\t// As a special case, note that the first element of data is not adjusted because it contains the major version\r\n\t\t// number of the serialized ATN, which was fixed at 3 at the time the value shifting was implemented.\r\n\t\tfor (let i = 1; i < data.length; i++) {\r\n\t\t\tdata[i] = (data[i] - 2) & 0xFFFF;\r\n\t\t}\r\n\r\n\t\tlet p: number = 0;\r\n\t\tlet version: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tif (version !== ATNDeserializer.SERIALIZED_VERSION) {\r\n\t\t\tlet reason = `Could not deserialize ATN with version ${version} (expected ${ATNDeserializer.SERIALIZED_VERSION}).`;\r\n\t\t\tthrow new Error(reason);\r\n\t\t}\r\n\r\n\t\tlet uuid: UUID = ATNDeserializer.toUUID(data, p);\r\n\t\tp += 8;\r\n\t\tif (ATNDeserializer.SUPPORTED_UUIDS.findIndex((e) => e.equals(uuid)) < 0) {\r\n\t\t\tlet reason = `Could not deserialize ATN with UUID ${uuid} (expected ${ATNDeserializer.SERIALIZED_UUID} or a legacy UUID).`;\r\n\t\t\tthrow new Error(reason);\r\n\t\t}\r\n\r\n\t\tlet supportsLexerActions: boolean = ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_LEXER_ACTIONS, uuid);\r\n\r\n\t\tlet grammarType: ATNType = ATNDeserializer.toInt(data[p++]);\r\n\t\tlet maxTokenType: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tlet atn: ATN = new ATN(grammarType, maxTokenType);\r\n\r\n\t\t//\r\n\t\t// STATES\r\n\t\t//\r\n\t\tlet loopBackStateNumbers: Array<[LoopEndState, number]> = [];\r\n\t\tlet endStateNumbers: Array<[BlockStartState, number]> = [];\r\n\t\tlet nstates: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < nstates; i++) {\r\n\t\t\tlet stype: ATNStateType = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t// ignore bad type of states\r\n\t\t\tif (stype === ATNStateType.INVALID_TYPE) {\r\n\t\t\t\tatn.addState(new InvalidState());\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet ruleIndex: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\tif (ruleIndex === 0xFFFF) {\r\n\t\t\t\truleIndex = -1;\r\n\t\t\t}\r\n\r\n\t\t\tlet s: ATNState = this.stateFactory(stype, ruleIndex);\r\n\t\t\tif (stype === ATNStateType.LOOP_END) { // special case\r\n\t\t\t\tlet loopBackStateNumber: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\tloopBackStateNumbers.push([s as LoopEndState, loopBackStateNumber]);\r\n\t\t\t}\r\n\t\t\telse if (s instanceof BlockStartState) {\r\n\t\t\t\tlet endStateNumber: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\tendStateNumbers.push([s, endStateNumber]);\r\n\t\t\t}\r\n\t\t\tatn.addState(s);\r\n\t\t}\r\n\r\n\t\t// delay the assignment of loop back and end states until we know all the state instances have been initialized\r\n\t\tfor (let pair of loopBackStateNumbers) {\r\n\t\t\tpair[0].loopBackState = atn.states[pair[1]];\r\n\t\t}\r\n\r\n\t\tfor (let pair of endStateNumbers) {\r\n\t\t\tpair[0].endState = atn.states[pair[1]] as BlockEndState;\r\n\t\t}\r\n\r\n\t\tlet numNonGreedyStates: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < numNonGreedyStates; i++) {\r\n\t\t\tlet stateNumber: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t(atn.states[stateNumber] as DecisionState).nonGreedy = true;\r\n\t\t}\r\n\r\n\t\tlet numSllDecisions: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < numSllDecisions; i++) {\r\n\t\t\tlet stateNumber: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t(atn.states[stateNumber] as DecisionState).sll = true;\r\n\t\t}\r\n\r\n\t\tlet numPrecedenceStates: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < numPrecedenceStates; i++) {\r\n\t\t\tlet stateNumber: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t(atn.states[stateNumber] as RuleStartState).isPrecedenceRule = true;\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// RULES\r\n\t\t//\r\n\t\tlet nrules: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tif (atn.grammarType === ATNType.LEXER) {\r\n\t\t\tatn.ruleToTokenType = new Int32Array(nrules);\r\n\t\t}\r\n\r\n\t\tatn.ruleToStartState = new Array<RuleStartState>(nrules);\r\n\t\tfor (let i = 0; i < nrules; i++) {\r\n\t\t\tlet s: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\tlet startState: RuleStartState = atn.states[s] as RuleStartState;\r\n\t\t\tstartState.leftFactored = ATNDeserializer.toInt(data[p++]) !== 0;\r\n\t\t\tatn.ruleToStartState[i] = startState;\r\n\t\t\tif (atn.grammarType === ATNType.LEXER) {\r\n\t\t\t\tlet tokenType: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\tif (tokenType === 0xFFFF) {\r\n\t\t\t\t\ttokenType = Token.EOF;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tatn.ruleToTokenType[i] = tokenType;\r\n\r\n\t\t\t\tif (!ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_LEXER_ACTIONS, uuid)) {\r\n\t\t\t\t\t// this piece of unused metadata was serialized prior to the\r\n\t\t\t\t\t// addition of LexerAction\r\n\t\t\t\t\tlet actionIndexIgnored: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\t\tif (actionIndexIgnored === 0xFFFF) {\r\n\t\t\t\t\t\tactionIndexIgnored = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tatn.ruleToStopState = new Array<RuleStopState>(nrules);\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tif (!(state instanceof RuleStopState)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tatn.ruleToStopState[state.ruleIndex] = state;\r\n\t\t\tatn.ruleToStartState[state.ruleIndex].stopState = state;\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// MODES\r\n\t\t//\r\n\t\tlet nmodes: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < nmodes; i++) {\r\n\t\t\tlet s: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\tatn.modeToStartState.push(atn.states[s] as TokensStartState);\r\n\t\t}\r\n\r\n\t\tatn.modeToDFA = new Array<DFA>(nmodes);\r\n\t\tfor (let i = 0; i < nmodes; i++) {\r\n\t\t\tatn.modeToDFA[i] = new DFA(atn.modeToStartState[i]);\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// SETS\r\n\t\t//\r\n\t\tlet sets: IntervalSet[] = [];\r\n\r\n\t\t// First, read all sets with 16-bit Unicode code points <= U+FFFF.\r\n\t\tp = this.deserializeSets(data, p, sets, ATNDeserializer.getUnicodeDeserializer(UnicodeDeserializingMode.UNICODE_BMP));\r\n\r\n\t\t// Next, if the ATN was serialized with the Unicode SMP feature,\r\n\t\t// deserialize sets with 32-bit arguments <= U+10FFFF.\r\n\t\tif (ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_UNICODE_SMP, uuid)) {\r\n\t\t\tp = this.deserializeSets(data, p, sets, ATNDeserializer.getUnicodeDeserializer(UnicodeDeserializingMode.UNICODE_SMP));\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// EDGES\r\n\t\t//\r\n\t\tlet nedges: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < nedges; i++) {\r\n\t\t\tlet src: number = ATNDeserializer.toInt(data[p]);\r\n\t\t\tlet trg: number = ATNDeserializer.toInt(data[p + 1]);\r\n\t\t\tlet ttype: number = ATNDeserializer.toInt(data[p + 2]);\r\n\t\t\tlet arg1: number = ATNDeserializer.toInt(data[p + 3]);\r\n\t\t\tlet arg2: number = ATNDeserializer.toInt(data[p + 4]);\r\n\t\t\tlet arg3: number = ATNDeserializer.toInt(data[p + 5]);\r\n\t\t\tlet trans: Transition = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\r\n\t\t\t// console.log(`EDGE ${trans.constructor.name} ${src}->${trg} ${Transition.serializationNames[ttype]} ${arg1},${arg2},${arg3}`);\r\n\t\t\tlet srcState: ATNState = atn.states[src];\r\n\t\t\tsrcState.addTransition(trans);\r\n\t\t\tp += 6;\r\n\t\t}\r\n\r\n\t\t// edges for rule stop states can be derived, so they aren't serialized\r\n\t\tinterface T { stopState: number; returnState: number; outermostPrecedenceReturn: number; }\r\n\t\tlet returnTransitionsSet = new Array2DHashSet<T>({\r\n\t\t\thashCode: (o: T) => o.stopState ^ o.returnState ^ o.outermostPrecedenceReturn,\r\n\r\n\t\t\tequals: (a: T, b: T): boolean => {\r\n\t\t\t\treturn a.stopState === b.stopState\r\n\t\t\t\t\t&& a.returnState === b.returnState\r\n\t\t\t\t\t&& a.outermostPrecedenceReturn === b.outermostPrecedenceReturn;\r\n\t\t\t},\r\n\t\t});\r\n\t\tlet returnTransitions: T[] = [];\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tlet returningToLeftFactored: boolean = state.ruleIndex >= 0 && atn.ruleToStartState[state.ruleIndex].leftFactored;\r\n\t\t\tfor (let i = 0; i < state.numberOfTransitions; i++) {\r\n\t\t\t\tlet t: Transition = state.transition(i);\r\n\t\t\t\tif (!(t instanceof RuleTransition)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ruleTransition: RuleTransition = t;\r\n\t\t\t\tlet returningFromLeftFactored: boolean = atn.ruleToStartState[ruleTransition.target.ruleIndex].leftFactored;\r\n\t\t\t\tif (!returningFromLeftFactored && returningToLeftFactored) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet outermostPrecedenceReturn: number = -1;\r\n\t\t\t\tif (atn.ruleToStartState[ruleTransition.target.ruleIndex].isPrecedenceRule) {\r\n\t\t\t\t\tif (ruleTransition.precedence === 0) {\r\n\t\t\t\t\t\toutermostPrecedenceReturn = ruleTransition.target.ruleIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet current = { stopState: ruleTransition.target.ruleIndex, returnState: ruleTransition.followState.stateNumber, outermostPrecedenceReturn };\r\n\t\t\t\tif (returnTransitionsSet.add(current)) {\r\n\t\t\t\t\treturnTransitions.push(current);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add all elements from returnTransitions to the ATN\r\n\t\tfor (let returnTransition of returnTransitions) {\r\n\t\t\tlet transition = new EpsilonTransition(atn.states[returnTransition.returnState], returnTransition.outermostPrecedenceReturn);\r\n\t\t\tatn.ruleToStopState[returnTransition.stopState].addTransition(transition);\r\n\t\t}\r\n\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tif (state instanceof BlockStartState) {\r\n\t\t\t\t// we need to know the end state to set its start state\r\n\t\t\t\tif (state.endState === undefined) {\r\n\t\t\t\t\tthrow new Error(\"IllegalStateException\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// block end states can only be associated to a single block start state\r\n\t\t\t\tif (state.endState.startState !== undefined) {\r\n\t\t\t\t\tthrow new Error(\"IllegalStateException\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.endState.startState = state;\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof PlusLoopbackState) {\r\n\t\t\t\tlet loopbackState: PlusLoopbackState = state;\r\n\t\t\t\tfor (let i = 0; i < loopbackState.numberOfTransitions; i++) {\r\n\t\t\t\t\tlet target: ATNState = loopbackState.transition(i).target;\r\n\t\t\t\t\tif (target instanceof PlusBlockStartState) {\r\n\t\t\t\t\t\ttarget.loopBackState = loopbackState;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (state instanceof StarLoopbackState) {\r\n\t\t\t\tlet loopbackState: StarLoopbackState = state;\r\n\t\t\t\tfor (let i = 0; i < loopbackState.numberOfTransitions; i++) {\r\n\t\t\t\t\tlet target: ATNState = loopbackState.transition(i).target;\r\n\t\t\t\t\tif (target instanceof StarLoopEntryState) {\r\n\t\t\t\t\t\ttarget.loopBackState = loopbackState;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// DECISIONS\r\n\t\t//\r\n\t\tlet ndecisions: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 1; i <= ndecisions; i++) {\r\n\t\t\tlet s: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\tlet decState: DecisionState = atn.states[s] as DecisionState;\r\n\t\t\tatn.decisionToState.push(decState);\r\n\t\t\tdecState.decision = i - 1;\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// LEXER ACTIONS\r\n\t\t//\r\n\t\tif (atn.grammarType === ATNType.LEXER) {\r\n\t\t\tif (supportsLexerActions) {\r\n\t\t\t\tatn.lexerActions = new Array<LexerAction>(ATNDeserializer.toInt(data[p++]));\r\n\t\t\t\tfor (let i = 0; i < atn.lexerActions.length; i++) {\r\n\t\t\t\t\tlet actionType: LexerActionType = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\t\tlet data1: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\t\tif (data1 === 0xFFFF) {\r\n\t\t\t\t\t\tdata1 = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet data2: number = ATNDeserializer.toInt(data[p++]);\r\n\t\t\t\t\tif (data2 === 0xFFFF) {\r\n\t\t\t\t\t\tdata2 = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet lexerAction: LexerAction = this.lexerActionFactory(actionType, data1, data2);\r\n\r\n\t\t\t\t\tatn.lexerActions[i] = lexerAction;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// for compatibility with older serialized ATNs, convert the old\r\n\t\t\t\t// serialized action index for action transitions to the new\r\n\t\t\t\t// form, which is the index of a LexerCustomAction\r\n\t\t\t\tlet legacyLexerActions: LexerAction[] = [];\r\n\t\t\t\tfor (let state of atn.states) {\r\n\t\t\t\t\tfor (let i = 0; i < state.numberOfTransitions; i++) {\r\n\t\t\t\t\t\tlet transition: Transition = state.transition(i);\r\n\t\t\t\t\t\tif (!(transition instanceof ActionTransition)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet ruleIndex: number = transition.ruleIndex;\r\n\t\t\t\t\t\tlet actionIndex: number = transition.actionIndex;\r\n\t\t\t\t\t\tlet lexerAction: LexerCustomAction = new LexerCustomAction(ruleIndex, actionIndex);\r\n\t\t\t\t\t\tstate.setTransition(i, new ActionTransition(transition.target, ruleIndex, legacyLexerActions.length, false));\r\n\t\t\t\t\t\tlegacyLexerActions.push(lexerAction);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tatn.lexerActions = legacyLexerActions;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.markPrecedenceDecisions(atn);\r\n\r\n\t\tatn.decisionToDFA = new Array<DFA>(ndecisions);\r\n\t\tfor (let i = 0; i < ndecisions; i++) {\r\n\t\t\tatn.decisionToDFA[i] = new DFA(atn.decisionToState[i], i);\r\n\t\t}\r\n\r\n\t\tif (this.deserializationOptions.isVerifyATN) {\r\n\t\t\tthis.verifyATN(atn);\r\n\t\t}\r\n\r\n\t\tif (this.deserializationOptions.isGenerateRuleBypassTransitions && atn.grammarType === ATNType.PARSER) {\r\n\t\t\tatn.ruleToTokenType = new Int32Array(atn.ruleToStartState.length);\r\n\t\t\tfor (let i = 0; i < atn.ruleToStartState.length; i++) {\r\n\t\t\t\tatn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < atn.ruleToStartState.length; i++) {\r\n\t\t\t\tlet bypassStart: BasicBlockStartState = new BasicBlockStartState();\r\n\t\t\t\tbypassStart.ruleIndex = i;\r\n\t\t\t\tatn.addState(bypassStart);\r\n\r\n\t\t\t\tlet bypassStop: BlockEndState = new BlockEndState();\r\n\t\t\t\tbypassStop.ruleIndex = i;\r\n\t\t\t\tatn.addState(bypassStop);\r\n\r\n\t\t\t\tbypassStart.endState = bypassStop;\r\n\t\t\t\tatn.defineDecisionState(bypassStart);\r\n\r\n\t\t\t\tbypassStop.startState = bypassStart;\r\n\r\n\t\t\t\tlet endState: ATNState | undefined;\r\n\t\t\t\tlet excludeTransition: Transition | undefined;\r\n\t\t\t\tif (atn.ruleToStartState[i].isPrecedenceRule) {\r\n\t\t\t\t\t// wrap from the beginning of the rule to the StarLoopEntryState\r\n\t\t\t\t\tendState = undefined;\r\n\t\t\t\t\tfor (let state of atn.states) {\r\n\t\t\t\t\t\tif (state.ruleIndex !== i) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!(state instanceof StarLoopEntryState)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet maybeLoopEndState: ATNState = state.transition(state.numberOfTransitions - 1).target;\r\n\t\t\t\t\t\tif (!(maybeLoopEndState instanceof LoopEndState)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (maybeLoopEndState.epsilonOnlyTransitions && maybeLoopEndState.transition(0).target instanceof RuleStopState) {\r\n\t\t\t\t\t\t\tendState = state;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!endState) {\r\n\t\t\t\t\t\tthrow new Error(\"Couldn't identify final state of the precedence rule prefix section.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\texcludeTransition = (endState as StarLoopEntryState).loopBackState.transition(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tendState = atn.ruleToStopState[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// all non-excluded transitions that currently target end state need to target blockEnd instead\r\n\t\t\t\tfor (let state of atn.states) {\r\n\t\t\t\t\tfor (let i = 0; i < state.numberOfTransitions; i++) {\r\n\t\t\t\t\t\tlet transition = state.transition(i);\r\n\t\t\t\t\t\tif (transition === excludeTransition) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (transition.target === endState) {\r\n\t\t\t\t\t\t\ttransition.target = bypassStop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// all transitions leaving the rule start state need to leave blockStart instead\r\n\t\t\t\twhile (atn.ruleToStartState[i].numberOfTransitions > 0) {\r\n\t\t\t\t\tlet transition: Transition = atn.ruleToStartState[i].removeTransition(atn.ruleToStartState[i].numberOfTransitions - 1);\r\n\t\t\t\t\tbypassStart.addTransition(transition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// link the new states\r\n\t\t\t\tatn.ruleToStartState[i].addTransition(new EpsilonTransition(bypassStart));\r\n\t\t\t\tbypassStop.addTransition(new EpsilonTransition(endState));\r\n\r\n\t\t\t\tlet matchState: ATNState = new BasicState();\r\n\t\t\t\tatn.addState(matchState);\r\n\t\t\t\tmatchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[i]));\r\n\t\t\t\tbypassStart.addTransition(new EpsilonTransition(matchState));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.deserializationOptions.isVerifyATN) {\r\n\t\t\t\t// reverify after modification\r\n\t\t\t\tthis.verifyATN(atn);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.deserializationOptions.isOptimize) {\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet optimizationCount: number = 0;\r\n\t\t\t\toptimizationCount += ATNDeserializer.inlineSetRules(atn);\r\n\t\t\t\toptimizationCount += ATNDeserializer.combineChainedEpsilons(atn);\r\n\t\t\t\tlet preserveOrder: boolean = atn.grammarType === ATNType.LEXER;\r\n\t\t\t\toptimizationCount += ATNDeserializer.optimizeSets(atn, preserveOrder);\r\n\t\t\t\tif (optimizationCount === 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.deserializationOptions.isVerifyATN) {\r\n\t\t\t\t// reverify after modification\r\n\t\t\t\tthis.verifyATN(atn);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tATNDeserializer.identifyTailCalls(atn);\r\n\r\n\t\treturn atn;\r\n\t}\r\n\r\n\tprivate deserializeSets(data: Uint16Array, p: number, sets: IntervalSet[], unicodeDeserializer: UnicodeDeserializer): number {\r\n\t\tlet nsets: number = ATNDeserializer.toInt(data[p++]);\r\n\t\tfor (let i = 0; i < nsets; i++) {\r\n\t\t\tlet nintervals: number = ATNDeserializer.toInt(data[p]);\r\n\t\t\tp++;\r\n\t\t\tlet set: IntervalSet = new IntervalSet();\r\n\t\t\tsets.push(set);\r\n\r\n\t\t\tlet containsEof: boolean = ATNDeserializer.toInt(data[p++]) !== 0;\r\n\t\t\tif (containsEof) {\r\n\t\t\t\tset.add(-1);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j: number = 0; j < nintervals; j++) {\r\n\t\t\t\tlet a: number = unicodeDeserializer.readUnicode(data, p);\r\n\t\t\t\tp += unicodeDeserializer.size;\r\n\t\t\t\tlet b: number = unicodeDeserializer.readUnicode(data, p);\r\n\t\t\t\tp += unicodeDeserializer.size;\r\n\t\t\t\tset.add(a, b);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\t/**\r\n\t * Analyze the {@link StarLoopEntryState} states in the specified ATN to set\r\n\t * the {@link StarLoopEntryState#precedenceRuleDecision} field to the\r\n\t * correct value.\r\n\t *\r\n\t * @param atn The ATN.\r\n\t */\r\n\tprotected markPrecedenceDecisions(@NotNull atn: ATN): void {\r\n\t\t// Map rule index -> precedence decision for that rule\r\n\t\tlet rulePrecedenceDecisions = new Map<number, StarLoopEntryState>();\r\n\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tif (!(state instanceof StarLoopEntryState)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t/* We analyze the ATN to determine if this ATN decision state is the\r\n\t\t\t * decision for the closure block that determines whether a\r\n\t\t\t * precedence rule should continue or complete.\r\n\t\t\t */\r\n\t\t\tif (atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\r\n\t\t\t\tlet maybeLoopEndState: ATNState = state.transition(state.numberOfTransitions - 1).target;\r\n\t\t\t\tif (maybeLoopEndState instanceof LoopEndState) {\r\n\t\t\t\t\tif (maybeLoopEndState.epsilonOnlyTransitions && maybeLoopEndState.transition(0).target instanceof RuleStopState) {\r\n\t\t\t\t\t\trulePrecedenceDecisions.set(state.ruleIndex, state);\r\n\t\t\t\t\t\tstate.precedenceRuleDecision = true;\r\n\t\t\t\t\t\tstate.precedenceLoopbackStates = new BitSet(atn.states.length);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// After marking precedence decisions, we go back through and fill in\r\n\t\t// StarLoopEntryState.precedenceLoopbackStates.\r\n\t\tfor (let precedenceDecision of rulePrecedenceDecisions) {\r\n\t\t\tfor (let transition of atn.ruleToStopState[precedenceDecision[0]].getTransitions()) {\r\n\t\t\t\tif (transition.serializationType !== TransitionType.EPSILON) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet epsilonTransition = transition as EpsilonTransition;\r\n\t\t\t\tif (epsilonTransition.outermostPrecedenceReturn !== -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecedenceDecision[1].precedenceLoopbackStates.set(transition.target.stateNumber);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected verifyATN(atn: ATN): void {\r\n\t\t// verify assumptions\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tthis.checkCondition(state !== undefined, \"ATN states should not be undefined.\");\r\n\t\t\tif (state.stateType === ATNStateType.INVALID_TYPE) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.checkCondition(state.onlyHasEpsilonTransitions || state.numberOfTransitions <= 1);\r\n\r\n\t\t\tif (state instanceof PlusBlockStartState) {\r\n\t\t\t\tthis.checkCondition(state.loopBackState !== undefined);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof StarLoopEntryState) {\r\n\t\t\t\tlet starLoopEntryState: StarLoopEntryState = state;\r\n\t\t\t\tthis.checkCondition(starLoopEntryState.loopBackState !== undefined);\r\n\t\t\t\tthis.checkCondition(starLoopEntryState.numberOfTransitions === 2);\r\n\r\n\t\t\t\tif (starLoopEntryState.transition(0).target instanceof StarBlockStartState) {\r\n\t\t\t\t\tthis.checkCondition(starLoopEntryState.transition(1).target instanceof LoopEndState);\r\n\t\t\t\t\tthis.checkCondition(!starLoopEntryState.nonGreedy);\r\n\t\t\t\t}\r\n\t\t\t\telse if (starLoopEntryState.transition(0).target instanceof LoopEndState) {\r\n\t\t\t\t\tthis.checkCondition(starLoopEntryState.transition(1).target instanceof StarBlockStartState);\r\n\t\t\t\t\tthis.checkCondition(starLoopEntryState.nonGreedy);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"IllegalStateException\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof StarLoopbackState) {\r\n\t\t\t\tthis.checkCondition(state.numberOfTransitions === 1);\r\n\t\t\t\tthis.checkCondition(state.transition(0).target instanceof StarLoopEntryState);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof LoopEndState) {\r\n\t\t\t\tthis.checkCondition(state.loopBackState !== undefined);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof RuleStartState) {\r\n\t\t\t\tthis.checkCondition(state.stopState !== undefined);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof BlockStartState) {\r\n\t\t\t\tthis.checkCondition(state.endState !== undefined);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof BlockEndState) {\r\n\t\t\t\tthis.checkCondition(state.startState !== undefined);\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof DecisionState) {\r\n\t\t\t\tlet decisionState: DecisionState = state;\r\n\t\t\t\tthis.checkCondition(decisionState.numberOfTransitions <= 1 || decisionState.decision >= 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.checkCondition(state.numberOfTransitions <= 1 || state instanceof RuleStopState);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected checkCondition(condition: boolean, message?: string): void {\r\n\t\tif (!condition) {\r\n\t\t\tthrow new Error(\"IllegalStateException: \" + message);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static inlineSetRules(atn: ATN): number {\r\n\t\tlet inlinedCalls: number = 0;\r\n\r\n\t\tlet ruleToInlineTransition = new Array<Transition | undefined>(atn.ruleToStartState.length);\r\n\t\tfor (let i = 0; i < atn.ruleToStartState.length; i++) {\r\n\t\t\tlet startState: RuleStartState = atn.ruleToStartState[i];\r\n\t\t\tlet middleState: ATNState = startState;\r\n\t\t\twhile (middleState.onlyHasEpsilonTransitions\r\n\t\t\t\t&& middleState.numberOfOptimizedTransitions === 1\r\n\t\t\t\t&& middleState.getOptimizedTransition(0).serializationType === TransitionType.EPSILON) {\r\n\t\t\t\tmiddleState = middleState.getOptimizedTransition(0).target;\r\n\t\t\t}\r\n\r\n\t\t\tif (middleState.numberOfOptimizedTransitions !== 1) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet matchTransition: Transition = middleState.getOptimizedTransition(0);\r\n\t\t\tlet matchTarget: ATNState = matchTransition.target;\r\n\t\t\tif (matchTransition.isEpsilon\r\n\t\t\t\t|| !matchTarget.onlyHasEpsilonTransitions\r\n\t\t\t\t|| matchTarget.numberOfOptimizedTransitions !== 1\r\n\t\t\t\t|| !(matchTarget.getOptimizedTransition(0).target instanceof RuleStopState)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (matchTransition.serializationType) {\r\n\t\t\tcase TransitionType.ATOM:\r\n\t\t\tcase TransitionType.RANGE:\r\n\t\t\tcase TransitionType.SET:\r\n\t\t\t\truleToInlineTransition[i] = matchTransition;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TransitionType.NOT_SET:\r\n\t\t\tcase TransitionType.WILDCARD:\r\n\t\t\t\t// not implemented yet\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tif (state.ruleIndex < 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet optimizedTransitions: Transition[] | undefined;\r\n\t\t\tfor (let i = 0; i < state.numberOfOptimizedTransitions; i++) {\r\n\t\t\t\tlet transition: Transition = state.getOptimizedTransition(i);\r\n\t\t\t\tif (!(transition instanceof RuleTransition)) {\r\n\t\t\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\t\t\toptimizedTransitions.push(transition);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ruleTransition: RuleTransition = transition;\r\n\t\t\t\tlet effective: Transition | undefined = ruleToInlineTransition[ruleTransition.target.ruleIndex];\r\n\t\t\t\tif (effective === undefined) {\r\n\t\t\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\t\t\toptimizedTransitions.push(transition);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (optimizedTransitions === undefined) {\r\n\t\t\t\t\toptimizedTransitions = [];\r\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\r\n\t\t\t\t\t\toptimizedTransitions.push(state.getOptimizedTransition(i));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinlinedCalls++;\r\n\t\t\t\tlet target: ATNState = ruleTransition.followState;\r\n\t\t\t\tlet intermediateState: ATNState = new BasicState();\r\n\t\t\t\tintermediateState.setRuleIndex(target.ruleIndex);\r\n\t\t\t\tatn.addState(intermediateState);\r\n\t\t\t\toptimizedTransitions.push(new EpsilonTransition(intermediateState));\r\n\r\n\t\t\t\tswitch (effective.serializationType) {\r\n\t\t\t\tcase TransitionType.ATOM:\r\n\t\t\t\t\tintermediateState.addTransition(new AtomTransition(target, (effective as AtomTransition)._label));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase TransitionType.RANGE:\r\n\t\t\t\t\tintermediateState.addTransition(new RangeTransition(target, (effective as RangeTransition).from, (effective as RangeTransition).to));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase TransitionType.SET:\r\n\t\t\t\t\tintermediateState.addTransition(new SetTransition(target, (effective as SetTransition).label));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"UnsupportedOperationException\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\tif (state.isOptimized) {\r\n\t\t\t\t\twhile (state.numberOfOptimizedTransitions > 0) {\r\n\t\t\t\t\t\tstate.removeOptimizedTransition(state.numberOfOptimizedTransitions - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let transition of optimizedTransitions) {\r\n\t\t\t\t\tstate.addOptimizedTransition(transition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"ATN runtime optimizer removed \" + inlinedCalls + \" rule invocations by inlining sets.\");\r\n\t\t}\r\n\r\n\t\treturn inlinedCalls;\r\n\t}\r\n\r\n\tprivate static combineChainedEpsilons(atn: ATN): number {\r\n\t\tlet removedEdges: number = 0;\r\n\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tif (!state.onlyHasEpsilonTransitions || state instanceof RuleStopState) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet optimizedTransitions: Transition[] | undefined;\r\n\t\t\tnextTransition:\r\n\t\t\tfor (let i = 0; i < state.numberOfOptimizedTransitions; i++) {\r\n\t\t\t\tlet transition: Transition = state.getOptimizedTransition(i);\r\n\t\t\t\tlet intermediate: ATNState = transition.target;\r\n\t\t\t\tif (transition.serializationType !== TransitionType.EPSILON\r\n\t\t\t\t\t|| (transition as EpsilonTransition).outermostPrecedenceReturn !== -1\r\n\t\t\t\t\t|| intermediate.stateType !== ATNStateType.BASIC\r\n\t\t\t\t\t|| !intermediate.onlyHasEpsilonTransitions) {\r\n\t\t\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\t\t\toptimizedTransitions.push(transition);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue nextTransition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < intermediate.numberOfOptimizedTransitions; j++) {\r\n\t\t\t\t\tif (intermediate.getOptimizedTransition(j).serializationType !== TransitionType.EPSILON\r\n\t\t\t\t\t\t|| (intermediate.getOptimizedTransition(j) as EpsilonTransition).outermostPrecedenceReturn !== -1) {\r\n\t\t\t\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\t\t\t\toptimizedTransitions.push(transition);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue nextTransition;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremovedEdges++;\r\n\t\t\t\tif (optimizedTransitions === undefined) {\r\n\t\t\t\t\toptimizedTransitions = [];\r\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\r\n\t\t\t\t\t\toptimizedTransitions.push(state.getOptimizedTransition(j));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < intermediate.numberOfOptimizedTransitions; j++) {\r\n\t\t\t\t\tlet target: ATNState = intermediate.getOptimizedTransition(j).target;\r\n\t\t\t\t\toptimizedTransitions.push(new EpsilonTransition(target));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (optimizedTransitions !== undefined) {\r\n\t\t\t\tif (state.isOptimized) {\r\n\t\t\t\t\twhile (state.numberOfOptimizedTransitions > 0) {\r\n\t\t\t\t\t\tstate.removeOptimizedTransition(state.numberOfOptimizedTransitions - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let transition of optimizedTransitions) {\r\n\t\t\t\t\tstate.addOptimizedTransition(transition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"ATN runtime optimizer removed \" + removedEdges + \" transitions by combining chained epsilon transitions.\");\r\n\t\t}\r\n\r\n\t\treturn removedEdges;\r\n\t}\r\n\r\n\tprivate static optimizeSets(atn: ATN, preserveOrder: boolean): number {\r\n\t\tif (preserveOrder) {\r\n\t\t\t// this optimization currently doesn't preserve edge order.\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet removedPaths: number = 0;\r\n\t\tlet decisions: DecisionState[] = atn.decisionToState;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tlet setTransitions: IntervalSet = new IntervalSet();\r\n\t\t\tfor (let i = 0; i < decision.numberOfOptimizedTransitions; i++) {\r\n\t\t\t\tlet epsTransition: Transition = decision.getOptimizedTransition(i);\r\n\t\t\t\tif (!(epsTransition instanceof EpsilonTransition)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (epsTransition.target.numberOfOptimizedTransitions !== 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet transition: Transition = epsTransition.target.getOptimizedTransition(0);\r\n\t\t\t\tif (!(transition.target instanceof BlockEndState)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (transition instanceof NotSetTransition) {\r\n\t\t\t\t\t// TODO: not yet implemented\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (transition instanceof AtomTransition\r\n\t\t\t\t\t|| transition instanceof RangeTransition\r\n\t\t\t\t\t|| transition instanceof SetTransition) {\r\n\t\t\t\t\tsetTransitions.add(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (setTransitions.size <= 1) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet optimizedTransitions: Transition[] = [];\r\n\t\t\tfor (let i = 0; i < decision.numberOfOptimizedTransitions; i++) {\r\n\t\t\t\tif (!setTransitions.contains(i)) {\r\n\t\t\t\t\toptimizedTransitions.push(decision.getOptimizedTransition(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet blockEndState: ATNState = decision.getOptimizedTransition(setTransitions.minElement).target.getOptimizedTransition(0).target;\r\n\t\t\tlet matchSet: IntervalSet = new IntervalSet();\r\n\t\t\tfor (let interval of setTransitions.intervals) {\r\n\t\t\t\tfor (let j = interval.a; j <= interval.b; j++) {\r\n\t\t\t\t\tlet matchTransition: Transition = decision.getOptimizedTransition(j).target.getOptimizedTransition(0);\r\n\t\t\t\t\tif (matchTransition instanceof NotSetTransition) {\r\n\t\t\t\t\t\tthrow new Error(\"Not yet implemented.\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmatchSet.addAll(matchTransition.label as IntervalSet);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet newTransition: Transition;\r\n\t\t\tif (matchSet.intervals.length === 1) {\r\n\t\t\t\tif (matchSet.size === 1) {\r\n\t\t\t\t\tnewTransition = new AtomTransition(blockEndState, matchSet.minElement);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet matchInterval: Interval = matchSet.intervals[0];\r\n\t\t\t\t\tnewTransition = new RangeTransition(blockEndState, matchInterval.a, matchInterval.b);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewTransition = new SetTransition(blockEndState, matchSet);\r\n\t\t\t}\r\n\r\n\t\t\tlet setOptimizedState: ATNState = new BasicState();\r\n\t\t\tsetOptimizedState.setRuleIndex(decision.ruleIndex);\r\n\t\t\tatn.addState(setOptimizedState);\r\n\r\n\t\t\tsetOptimizedState.addTransition(newTransition);\r\n\t\t\toptimizedTransitions.push(new EpsilonTransition(setOptimizedState));\r\n\r\n\t\t\tremovedPaths += decision.numberOfOptimizedTransitions - optimizedTransitions.length;\r\n\r\n\t\t\tif (decision.isOptimized) {\r\n\t\t\t\twhile (decision.numberOfOptimizedTransitions > 0) {\r\n\t\t\t\t\tdecision.removeOptimizedTransition(decision.numberOfOptimizedTransitions - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let transition of optimizedTransitions) {\r\n\t\t\t\tdecision.addOptimizedTransition(transition);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"ATN runtime optimizer removed \" + removedPaths + \" paths by collapsing sets.\");\r\n\t\t}\r\n\r\n\t\treturn removedPaths;\r\n\t}\r\n\r\n\tprivate static identifyTailCalls(atn: ATN): void {\r\n\t\tfor (let state of atn.states) {\r\n\t\t\tfor (let i = 0; i < state.numberOfTransitions; i++) {\r\n\t\t\t\tlet transition = state.transition(i);\r\n\t\t\t\tif (!(transition instanceof RuleTransition)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransition.tailCall = this.testTailCall(atn, transition, false);\r\n\t\t\t\ttransition.optimizedTailCall = this.testTailCall(atn, transition, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (!state.isOptimized) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < state.numberOfOptimizedTransitions; i++) {\r\n\t\t\t\tlet transition = state.getOptimizedTransition(i);\r\n\t\t\t\tif (!(transition instanceof RuleTransition)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransition.tailCall = this.testTailCall(atn, transition, false);\r\n\t\t\t\ttransition.optimizedTailCall = this.testTailCall(atn, transition, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static testTailCall(atn: ATN, transition: RuleTransition, optimizedPath: boolean): boolean {\r\n\t\tif (!optimizedPath && transition.tailCall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (optimizedPath && transition.optimizedTailCall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet reachable: BitSet = new BitSet(atn.states.length);\r\n\t\tlet worklist: ATNState[] = [];\r\n\t\tworklist.push(transition.followState);\r\n\t\twhile (true) {\r\n\t\t\tlet state = worklist.pop();\r\n\t\t\tif (!state) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (reachable.get(state.stateNumber)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (state instanceof RuleStopState) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (!state.onlyHasEpsilonTransitions) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tlet transitionCount = optimizedPath ? state.numberOfOptimizedTransitions : state.numberOfTransitions;\r\n\t\t\tfor (let i = 0; i < transitionCount; i++) {\r\n\t\t\t\tlet t = optimizedPath ? state.getOptimizedTransition(i) : state.transition(i);\r\n\t\t\t\tif (t.serializationType !== TransitionType.EPSILON) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tworklist.push(t.target);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected static toInt(c: number): number {\r\n\t\treturn c;\r\n\t}\r\n\r\n\tprotected static toInt32(data: Uint16Array, offset: number): number {\r\n\t\treturn (data[offset] | (data[offset + 1] << 16)) >>> 0;\r\n\t}\r\n\r\n\tprotected static toUUID(data: Uint16Array, offset: number): UUID {\r\n\t\tlet leastSigBits: number = ATNDeserializer.toInt32(data, offset);\r\n\t\tlet lessSigBits: number = ATNDeserializer.toInt32(data, offset + 2);\r\n\t\tlet moreSigBits: number = ATNDeserializer.toInt32(data, offset + 4);\r\n\t\tlet mostSigBits: number = ATNDeserializer.toInt32(data, offset + 6);\r\n\t\treturn new UUID(mostSigBits, moreSigBits, lessSigBits, leastSigBits);\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected edgeFactory(\r\n\t\t@NotNull atn: ATN,\r\n\t\ttype: TransitionType, src: number, trg: number,\r\n\t\targ1: number, arg2: number, arg3: number,\r\n\t\tsets: IntervalSet[]): Transition {\r\n\t\tlet target: ATNState = atn.states[trg];\r\n\t\tswitch (type) {\r\n\t\t\tcase TransitionType.EPSILON: return new EpsilonTransition(target);\r\n\t\t\tcase TransitionType.RANGE:\r\n\t\t\t\tif (arg3 !== 0) {\r\n\t\t\t\t\treturn new RangeTransition(target, Token.EOF, arg2);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new RangeTransition(target, arg1, arg2);\r\n\t\t\t\t}\r\n\t\t\tcase TransitionType.RULE:\r\n\t\t\t\tlet rt: RuleTransition = new RuleTransition(atn.states[arg1] as RuleStartState, arg2, arg3, target);\r\n\t\t\t\treturn rt;\r\n\t\t\tcase TransitionType.PREDICATE:\r\n\t\t\t\tlet pt: PredicateTransition = new PredicateTransition(target, arg1, arg2, arg3 !== 0);\r\n\t\t\t\treturn pt;\r\n\t\t\tcase TransitionType.PRECEDENCE:\r\n\t\t\t\treturn new PrecedencePredicateTransition(target, arg1);\r\n\t\t\tcase TransitionType.ATOM:\r\n\t\t\t\tif (arg3 !== 0) {\r\n\t\t\t\t\treturn new AtomTransition(target, Token.EOF);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new AtomTransition(target, arg1);\r\n\t\t\t\t}\r\n\t\t\tcase TransitionType.ACTION:\r\n\t\t\t\tlet a: ActionTransition = new ActionTransition(target, arg1, arg2, arg3 !== 0);\r\n\t\t\t\treturn a;\r\n\t\t\tcase TransitionType.SET: return new SetTransition(target, sets[arg1]);\r\n\t\t\tcase TransitionType.NOT_SET: return new NotSetTransition(target, sets[arg1]);\r\n\t\t\tcase TransitionType.WILDCARD: return new WildcardTransition(target);\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"The specified transition type is not valid.\");\r\n\t}\r\n\r\n\tprotected stateFactory(type: ATNStateType, ruleIndex: number): ATNState {\r\n\t\tlet s: ATNState;\r\n\t\tswitch (type) {\r\n\t\t\tcase ATNStateType.INVALID_TYPE: return new InvalidState();\r\n\t\t\tcase ATNStateType.BASIC: s = new BasicState(); break;\r\n\t\t\tcase ATNStateType.RULE_START: s = new RuleStartState(); break;\r\n\t\t\tcase ATNStateType.BLOCK_START: s = new BasicBlockStartState(); break;\r\n\t\t\tcase ATNStateType.PLUS_BLOCK_START: s = new PlusBlockStartState(); break;\r\n\t\t\tcase ATNStateType.STAR_BLOCK_START: s = new StarBlockStartState(); break;\r\n\t\t\tcase ATNStateType.TOKEN_START: s = new TokensStartState(); break;\r\n\t\t\tcase ATNStateType.RULE_STOP: s = new RuleStopState(); break;\r\n\t\t\tcase ATNStateType.BLOCK_END: s = new BlockEndState(); break;\r\n\t\t\tcase ATNStateType.STAR_LOOP_BACK: s = new StarLoopbackState(); break;\r\n\t\t\tcase ATNStateType.STAR_LOOP_ENTRY: s = new StarLoopEntryState(); break;\r\n\t\t\tcase ATNStateType.PLUS_LOOP_BACK: s = new PlusLoopbackState(); break;\r\n\t\t\tcase ATNStateType.LOOP_END: s = new LoopEndState(); break;\r\n\t\t\tdefault:\r\n\t\t\t\tlet message: string = `The specified state type ${type} is not valid.`;\r\n\t\t\t\tthrow new Error(message);\r\n\t\t}\r\n\r\n\t\ts.ruleIndex = ruleIndex;\r\n\t\treturn s;\r\n\t}\r\n\r\n\tprotected lexerActionFactory(type: LexerActionType, data1: number, data2: number): LexerAction {\r\n\t\tswitch (type) {\r\n\t\tcase LexerActionType.CHANNEL:\r\n\t\t\treturn new LexerChannelAction(data1);\r\n\r\n\t\tcase LexerActionType.CUSTOM:\r\n\t\t\treturn new LexerCustomAction(data1, data2);\r\n\r\n\t\tcase LexerActionType.MODE:\r\n\t\t\treturn new LexerModeAction(data1);\r\n\r\n\t\tcase LexerActionType.MORE:\r\n\t\t\treturn LexerMoreAction.INSTANCE;\r\n\r\n\t\tcase LexerActionType.POP_MODE:\r\n\t\t\treturn LexerPopModeAction.INSTANCE;\r\n\r\n\t\tcase LexerActionType.PUSH_MODE:\r\n\t\t\treturn new LexerPushModeAction(data1);\r\n\r\n\t\tcase LexerActionType.SKIP:\r\n\t\t\treturn LexerSkipAction.INSTANCE;\r\n\r\n\t\tcase LexerActionType.TYPE:\r\n\t\t\treturn new LexerTypeAction(data1);\r\n\r\n\t\tdefault:\r\n\t\t\tlet message: string = `The specified lexer action type ${type} is not valid.`;\r\n\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.3184311-07:00\r\n\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { DFAState } from \"../dfa/DFAState\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\n\r\nexport abstract class ATNSimulator {\r\n\t/** Must distinguish between missing edge and edge we know leads nowhere */\r\n\tprivate static _ERROR: DFAState;\r\n\t@NotNull\r\n\tstatic get ERROR(): DFAState {\r\n\t\tif (!ATNSimulator._ERROR) {\r\n\t\t\tATNSimulator._ERROR = new DFAState(new ATNConfigSet());\r\n\t\t\tATNSimulator._ERROR.stateNumber = PredictionContext.EMPTY_FULL_STATE_KEY;\r\n\t\t}\r\n\r\n\t\treturn ATNSimulator._ERROR;\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic atn: ATN;\r\n\r\n\tconstructor(@NotNull atn: ATN) {\r\n\t\tthis.atn = atn;\r\n\t}\r\n\r\n\tpublic abstract reset(): void;\r\n\r\n\t/**\r\n\t * Clear the DFA cache used by the current instance. Since the DFA cache may\r\n\t * be shared by multiple ATN simulators, this method may affect the\r\n\t * performance (but not accuracy) of other parsers which are being used\r\n\t * concurrently.\r\n\t *\r\n\t * @ if the current instance does not\r\n\t * support clearing the DFA.\r\n\t *\r\n\t * @since 4.3\r\n\t */\r\n\tpublic clearDFA(): void {\r\n\t\tthis.atn.clearDFA();\r\n\t}\r\n}\r\n\r\nexport namespace ATNSimulator {\r\n\tconst RULE_VARIANT_DELIMITER: string = \"$\";\r\n\tconst RULE_LF_VARIANT_MARKER: string = \"$lf$\";\r\n\tconst RULE_NOLF_VARIANT_MARKER: string = \"$nolf$\";\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.4734328-07:00\r\n\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { Override } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\n\r\nconst INITIAL_NUM_TRANSITIONS: number = 4;\r\n\r\n/**\r\n * The following images show the relation of states and\r\n * {@link ATNState#transitions} for various grammar constructs.\r\n *\r\n * * Solid edges marked with an &#0949; indicate a required\r\n *   {@link EpsilonTransition}.\r\n *\r\n * * Dashed edges indicate locations where any transition derived from\r\n *   {@link Transition} might appear.\r\n *\r\n * * Dashed nodes are place holders for either a sequence of linked\r\n *   {@link BasicState} states or the inclusion of a block representing a nested\r\n *   construct in one of the forms below.\r\n *\r\n * * Nodes showing multiple outgoing alternatives with a `...` support\r\n *   any number of alternatives (one or more). Nodes without the `...` only\r\n *   support the exact number of alternatives shown in the diagram.\r\n *\r\n * <h2>Basic Blocks</h2>\r\n *\r\n * <h3>Rule</h3>\r\n *\r\n * <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h3>Block of 1 or more alternatives</h3>\r\n *\r\n * <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h2>Greedy Loops</h2>\r\n *\r\n * <h3>Greedy Closure: `(...)*`</h3>\r\n *\r\n * <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h3>Greedy Positive Closure: `(...)+`</h3>\r\n *\r\n * <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h3>Greedy Optional: `(...)?`</h3>\r\n *\r\n * <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h2>Non-Greedy Loops</h2>\r\n *\r\n * <h3>Non-Greedy Closure: `(...)*?`</h3>\r\n *\r\n * <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h3>Non-Greedy Positive Closure: `(...)+?`</h3>\r\n *\r\n * <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\r\n *\r\n * <h3>Non-Greedy Optional: `(...)??`</h3>\r\n *\r\n * <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\r\n */\r\nexport abstract class ATNState {\r\n\r\n\t/** Which ATN are we in? */\r\n\tpublic atn?: ATN;\r\n\r\n\tpublic stateNumber: number = ATNState.INVALID_STATE_NUMBER;\r\n\r\n\tpublic ruleIndex: number = 0;  // at runtime, we don't have Rule objects\r\n\r\n\tpublic epsilonOnlyTransitions: boolean = false;\r\n\r\n\t/** Track the transitions emanating from this ATN state. */\r\n\tprotected transitions: Transition[] = [];\r\n\r\n\tprotected optimizedTransitions: Transition[] = this.transitions;\r\n\r\n\t/** Used to cache lookahead during parsing, not used during construction */\r\n\tpublic nextTokenWithinRule?: IntervalSet;\r\n\r\n\t/**\r\n\t * Gets the state number.\r\n\t *\r\n\t * @returns the state number\r\n\t */\r\n\tpublic getStateNumber(): number {\r\n\t\treturn this.stateNumber;\r\n\t}\r\n\r\n\t/**\r\n\t * For all states except {@link RuleStopState}, this returns the state\r\n\t * number. Returns -1 for stop states.\r\n\t *\r\n\t * @returns -1 for {@link RuleStopState}, otherwise the state number\r\n\t */\r\n\tget nonStopStateNumber(): number {\r\n\t\treturn this.getStateNumber();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\treturn this.stateNumber;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\t// are these states same object?\r\n\t\tif (o instanceof ATNState) {\r\n\t\t\treturn this.stateNumber === o.stateNumber;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget isNonGreedyExitState(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn String(this.stateNumber);\r\n\t}\r\n\r\n\tpublic getTransitions(): Transition[] {\r\n\t\treturn this.transitions.slice(0);\r\n\t}\r\n\r\n\tget numberOfTransitions(): number {\r\n\t\treturn this.transitions.length;\r\n\t}\r\n\r\n\tpublic addTransition(e: Transition, index?: number): void {\r\n\t\tif (this.transitions.length === 0) {\r\n\t\t\tthis.epsilonOnlyTransitions = e.isEpsilon;\r\n\t\t}\r\n\t\telse if (this.epsilonOnlyTransitions !== e.isEpsilon) {\r\n\t\t\tthis.epsilonOnlyTransitions = false;\r\n\t\t\tthrow new Error(\"ATN state \" + this.stateNumber + \" has both epsilon and non-epsilon transitions.\");\r\n\t\t}\r\n\r\n\t\tthis.transitions.splice(index !== undefined ? index : this.transitions.length, 0, e);\r\n\t}\r\n\r\n\tpublic transition(i: number): Transition {\r\n\t\treturn this.transitions[i];\r\n\t}\r\n\r\n\tpublic setTransition(i: number, e: Transition): void {\r\n\t\tthis.transitions[i] = e;\r\n\t}\r\n\r\n\tpublic removeTransition(index: number): Transition {\r\n\t\treturn this.transitions.splice(index, 1)[0];\r\n\t}\r\n\r\n\tpublic abstract readonly stateType: ATNStateType;\r\n\r\n\tget onlyHasEpsilonTransitions(): boolean {\r\n\t\treturn this.epsilonOnlyTransitions;\r\n\t}\r\n\r\n\tpublic setRuleIndex(ruleIndex: number): void {\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t}\r\n\r\n\tget isOptimized(): boolean {\r\n\t\treturn this.optimizedTransitions !== this.transitions;\r\n\t}\r\n\r\n\tget numberOfOptimizedTransitions(): number {\r\n\t\treturn this.optimizedTransitions.length;\r\n\t}\r\n\r\n\tpublic getOptimizedTransition(i: number): Transition {\r\n\t\treturn this.optimizedTransitions[i];\r\n\t}\r\n\r\n\tpublic addOptimizedTransition(e: Transition): void {\r\n\t\tif (!this.isOptimized) {\r\n\t\t\tthis.optimizedTransitions = new Array<Transition>();\r\n\t\t}\r\n\r\n\t\tthis.optimizedTransitions.push(e);\r\n\t}\r\n\r\n\tpublic setOptimizedTransition(i: number, e: Transition): void {\r\n\t\tif (!this.isOptimized) {\r\n\t\t\tthrow new Error(\"This ATNState is not optimized.\");\r\n\t\t}\r\n\r\n\t\tthis.optimizedTransitions[i] = e;\r\n\t}\r\n\r\n\tpublic removeOptimizedTransition(i: number): void {\r\n\t\tif (!this.isOptimized) {\r\n\t\t\tthrow new Error(\"This ATNState is not optimized.\");\r\n\t\t}\r\n\r\n\t\tthis.optimizedTransitions.splice(i, 1);\r\n\t}\r\n}\r\n\r\nexport namespace ATNState {\r\n\texport const INVALID_STATE_NUMBER: number = -1;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.4734328-07:00\r\n\r\nexport enum ATNStateType {\r\n\tINVALID_TYPE = 0,\r\n\tBASIC = 1,\r\n\tRULE_START = 2,\r\n\tBLOCK_START = 3,\r\n\tPLUS_BLOCK_START = 4,\r\n\tSTAR_BLOCK_START = 5,\r\n\tTOKEN_START = 6,\r\n\tRULE_STOP = 7,\r\n\tBLOCK_END = 8,\r\n\tSTAR_LOOP_BACK = 9,\r\n\tSTAR_LOOP_ENTRY = 10,\r\n\tPLUS_LOOP_BACK = 11,\r\n\tLOOP_END = 12,\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:24.6596177-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { Transition } from \"./Transition\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport abstract class AbstractPredicateTransition extends Transition {\r\n\r\n\tconstructor(target: ATNState) {\r\n\t\tsuper(target);\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:24.7363448-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\nexport class ActionTransition extends Transition {\r\n\tpublic ruleIndex: number;\r\n\tpublic actionIndex: number;\r\n\tpublic isCtxDependent: boolean;  // e.g., $i ref in action\r\n\r\n\tconstructor(@NotNull target: ATNState, ruleIndex: number, actionIndex: number = -1, isCtxDependent: boolean = false) {\r\n\t\tsuper(target);\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t\tthis.actionIndex = actionIndex;\r\n\t\tthis.isCtxDependent = isCtxDependent;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.ACTION;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEpsilon(): boolean {\r\n\t\treturn true; // we are to be ignored by analysis 'cept for predicates\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:24.8229279-07:00\r\n\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This class represents profiling event information for an ambiguity.\r\n * Ambiguities are decisions where a particular input resulted in an SLL\r\n * conflict, followed by LL prediction also reaching a conflict state\r\n * (indicating a true ambiguity in the grammar).\r\n *\r\n * This event may be reported during SLL prediction in cases where the\r\n * conflicting SLL configuration set provides sufficient information to\r\n * determine that the SLL conflict is truly an ambiguity. For example, if none\r\n * of the ATN configurations in the conflicting SLL configuration set have\r\n * traversed a global follow transition (i.e.\r\n * {@link ATNConfig#getReachesIntoOuterContext} is `false` for all\r\n * configurations), then the result of SLL prediction for that input is known to\r\n * be equivalent to the result of LL prediction for that input.\r\n *\r\n * In some cases, the minimum represented alternative in the conflicting LL\r\n * configuration set is not equal to the minimum represented alternative in the\r\n * conflicting SLL configuration set. Grammars and inputs which result in this\r\n * scenario are unable to use {@link PredictionMode#SLL}, which in turn means\r\n * they cannot use the two-stage parsing strategy to improve parsing performance\r\n * for that input.\r\n *\r\n * @see ParserATNSimulator#reportAmbiguity\r\n * @see ParserErrorListener#reportAmbiguity\r\n *\r\n * @since 4.3\r\n */\r\nexport class AmbiguityInfo extends DecisionEventInfo {\r\n\t/** The set of alternative numbers for this decision event that lead to a valid parse. */\r\n\t@NotNull\r\n\tprivate ambigAlts: BitSet;\r\n\r\n\t/**\r\n\t * Constructs a new instance of the {@link AmbiguityInfo} class with the\r\n\t * specified detailed ambiguity information.\r\n\t *\r\n\t * @param decision The decision number\r\n\t * @param state The final simulator state identifying the ambiguous\r\n\t * alternatives for the current input\r\n\t * @param ambigAlts The set of alternatives in the decision that lead to a valid parse.\r\n\t *                  The predicted alt is the min(ambigAlts)\r\n\t * @param input The input token stream\r\n\t * @param startIndex The start index for the current prediction\r\n\t * @param stopIndex The index at which the ambiguity was identified during\r\n\t * prediction\r\n\t */\r\n\tconstructor(\r\n\t\tdecision: number,\r\n\t\t@NotNull state: SimulatorState,\r\n\t\t@NotNull ambigAlts: BitSet,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number) {\r\n\t\tsuper(decision, state, input, startIndex, stopIndex, state.useContext);\r\n\t\tthis.ambigAlts = ambigAlts;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the set of alternatives in the decision that lead to a valid parse.\r\n\t *\r\n\t * @since 4.5\r\n\t */\r\n\t@NotNull\r\n\tget ambiguousAlternatives(): BitSet {\r\n\t\treturn this.ambigAlts;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.6769122-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/** TODO: make all transitions sets? no, should remove set edges */\r\nexport class AtomTransition extends Transition {\r\n\t/** The token type or character value; or, signifies special label. */\r\n\tpublic _label: number;\r\n\r\n\tconstructor(@NotNull target: ATNState, label: number) {\r\n\t\tsuper(target);\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.ATOM;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tget label(): IntervalSet {\r\n\t\treturn IntervalSet.of(this._label);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn this._label === symbol;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn String(this.label);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.7669801-07:00\r\n\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BlockStartState } from \"./BlockStartState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class BasicBlockStartState extends BlockStartState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.BLOCK_START;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.8389930-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class BasicState extends ATNState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.BASIC;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.9125304-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BlockStartState } from \"./BlockStartState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** Terminal node of a simple `(a|b|c)` block. */\r\nexport class BlockEndState extends ATNState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic startState!: BlockStartState;\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.BLOCK_END;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:27.9930394-07:00\r\n\r\nimport { BlockEndState } from \"./BlockEndState\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/**  The start of a regular `(...)` block. */\r\nexport abstract class BlockStartState extends DecisionState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic endState!: BlockEndState;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.0710131-07:00\r\n\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { Override } from \"../Decorators\";\r\nimport * as Utils from \"../misc/Utils\";\r\n\r\n/**\r\n * This class stores information about a configuration conflict.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ConflictInfo {\r\n\tprivate _conflictedAlts: BitSet;\r\n\r\n\tprivate exact: boolean;\r\n\r\n\tconstructor(conflictedAlts: BitSet, exact: boolean) {\r\n\t\tthis._conflictedAlts = conflictedAlts;\r\n\t\tthis.exact = exact;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the set of conflicting alternatives for the configuration set.\r\n\t */\r\n\tget conflictedAlts(): BitSet {\r\n\t\treturn this._conflictedAlts;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets whether or not the configuration conflict is an exact conflict.\r\n\t * An exact conflict occurs when the prediction algorithm determines that\r\n\t * the represented alternatives for a particular configuration set cannot be\r\n\t * further reduced by consuming additional input. After reaching an exact\r\n\t * conflict during an SLL prediction, only switch to full-context prediction\r\n\t * could reduce the set of viable alternatives. In LL prediction, an exact\r\n\t * conflict indicates a true ambiguity in the input.\r\n\t *\r\n\t * For the {@link PredictionMode#LL_EXACT_AMBIG_DETECTION} prediction mode,\r\n\t * accept states are conflicting but not exact are treated as non-accept\r\n\t * states.\r\n\t */\r\n\tget isExact(): boolean {\r\n\t\treturn this.exact;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof ConflictInfo)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.isExact === obj.isExact\r\n\t\t\t&& Utils.equals(this.conflictedAlts, obj.conflictedAlts);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\treturn this.conflictedAlts.hashCode();\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.1575933-07:00\r\n\r\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This class represents profiling event information for a context sensitivity.\r\n * Context sensitivities are decisions where a particular input resulted in an\r\n * SLL conflict, but LL prediction produced a single unique alternative.\r\n *\r\n * In some cases, the unique alternative identified by LL prediction is not\r\n * equal to the minimum represented alternative in the conflicting SLL\r\n * configuration set. Grammars and inputs which result in this scenario are\r\n * unable to use {@link PredictionMode#SLL}, which in turn means they cannot use\r\n * the two-stage parsing strategy to improve parsing performance for that\r\n * input.\r\n *\r\n * @see ParserATNSimulator#reportContextSensitivity\r\n * @see ParserErrorListener#reportContextSensitivity\r\n *\r\n * @since 4.3\r\n */\r\nexport class ContextSensitivityInfo extends DecisionEventInfo {\r\n\t/**\r\n\t * Constructs a new instance of the {@link ContextSensitivityInfo} class\r\n\t * with the specified detailed context sensitivity information.\r\n\t *\r\n\t * @param decision The decision number\r\n\t * @param state The final simulator state containing the unique\r\n\t * alternative identified by full-context prediction\r\n\t * @param input The input token stream\r\n\t * @param startIndex The start index for the current prediction\r\n\t * @param stopIndex The index at which the context sensitivity was\r\n\t * identified during full-context prediction\r\n\t */\r\n\tconstructor(\r\n\t\tdecision: number,\r\n\t\t@NotNull state: SimulatorState,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number) {\r\n\r\n\t\tsuper(decision, state, input, startIndex, stopIndex, true);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.2401032-07:00\r\n\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This is the base class for gathering detailed information about prediction\r\n * events which occur during parsing.\r\n *\r\n * Note that we could record the parser call stack at the time this event\r\n * occurred but in the presence of left recursive rules, the stack is kind of\r\n * meaningless. It's better to look at the individual configurations for their\r\n * individual stacks. Of course that is a {@link PredictionContext} object\r\n * not a parse tree node and so it does not have information about the extent\r\n * (start...stop) of the various subtrees. Examining the stack tops of all\r\n * configurations provide the return states for the rule invocations.\r\n * From there you can get the enclosing rule.\r\n *\r\n * @since 4.3\r\n */\r\nexport class DecisionEventInfo {\r\n\t/**\r\n\t * The invoked decision number which this event is related to.\r\n\t *\r\n\t * @see ATN#decisionToState\r\n\t */\r\n\tpublic decision: number;\r\n\r\n\t/**\r\n\t * The simulator state containing additional information relevant to the\r\n\t * prediction state when the current event occurred, or `undefined` if no\r\n\t * additional information is relevant or available.\r\n\t */\r\n\tpublic state: SimulatorState | undefined;\r\n\r\n\t/**\r\n\t * The input token stream which is being parsed.\r\n\t */\r\n\t@NotNull\r\n\tpublic input: TokenStream;\r\n\r\n\t/**\r\n\t * The token index in the input stream at which the current prediction was\r\n\t * originally invoked.\r\n\t */\r\n\tpublic startIndex: number;\r\n\r\n\t/**\r\n\t * The token index in the input stream at which the current event occurred.\r\n\t */\r\n\tpublic stopIndex: number;\r\n\r\n\t/**\r\n\t * `true` if the current event occurred during LL prediction;\r\n\t * otherwise, `false` if the input occurred during SLL prediction.\r\n\t */\r\n\tpublic fullCtx: boolean;\r\n\r\n\tconstructor(\r\n\t\tdecision: number,\r\n\t\tstate: SimulatorState | undefined,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tfullCtx: boolean) {\r\n\r\n\t\tthis.decision = decision;\r\n\t\tthis.fullCtx = fullCtx;\r\n\t\tthis.stopIndex = stopIndex;\r\n\t\tthis.input = input;\r\n\t\tthis.startIndex = startIndex;\r\n\t\tthis.state = state;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.3330673-07:00\r\n\r\nimport { AmbiguityInfo } from \"./AmbiguityInfo\";\r\nimport { ContextSensitivityInfo } from \"./ContextSensitivityInfo\";\r\nimport { ErrorInfo } from \"./ErrorInfo\";\r\nimport { LookaheadEventInfo } from \"./LookaheadEventInfo\";\r\nimport { Override } from \"../Decorators\";\r\nimport { PredicateEvalInfo } from \"./PredicateEvalInfo\";\r\n\r\n/**\r\n * This class contains profiling gathered for a particular decision.\r\n *\r\n * Parsing performance in ANTLR 4 is heavily influenced by both static factors\r\n * (e.g. the form of the rules in the grammar) and dynamic factors (e.g. the\r\n * choice of input and the state of the DFA cache at the time profiling\r\n * operations are started). For best results, gather and use aggregate\r\n * statistics from a large sample of inputs representing the inputs expected in\r\n * production before using the results to make changes in the grammar.\r\n *\r\n * @since 4.3\r\n */\r\nexport class DecisionInfo {\r\n\t/**\r\n\t * The decision number, which is an index into {@link ATN#decisionToState}.\r\n\t */\r\n\tpublic decision: number;\r\n\r\n\t/**\r\n\t * The total number of times {@link ParserATNSimulator#adaptivePredict} was\r\n\t * invoked for this decision.\r\n\t */\r\n\tpublic invocations: number = 0;\r\n\r\n\t/**\r\n\t * The total time spent in {@link ParserATNSimulator#adaptivePredict} for\r\n\t * this decision, in nanoseconds.\r\n\t *\r\n\t * The value of this field contains the sum of differential results obtained\r\n\t * by {@link System#nanoTime()}, and is not adjusted to compensate for JIT\r\n\t * and/or garbage collection overhead. For best accuracy, use a modern JVM\r\n\t * implementation that provides precise results from\r\n\t * {@link System#nanoTime()}, and perform profiling in a separate process\r\n\t * which is warmed up by parsing the input prior to profiling. If desired,\r\n\t * call {@link ATNSimulator#clearDFA} to reset the DFA cache to its initial\r\n\t * state before starting the profiling measurement pass.\r\n\t */\r\n\tpublic timeInPrediction: number = 0;\r\n\r\n\t/**\r\n\t * The sum of the lookahead required for SLL prediction for this decision.\r\n\t * Note that SLL prediction is used before LL prediction for performance\r\n\t * reasons even when {@link PredictionMode#LL} or\r\n\t * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION} is used.\r\n\t */\r\n\tpublic SLL_TotalLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the minimum lookahead required for any single SLL prediction to\r\n\t * complete for this decision, by reaching a unique prediction, reaching an\r\n\t * SLL conflict state, or encountering a syntax error.\r\n\t */\r\n\tpublic SLL_MinLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the maximum lookahead required for any single SLL prediction to\r\n\t * complete for this decision, by reaching a unique prediction, reaching an\r\n\t * SLL conflict state, or encountering a syntax error.\r\n\t */\r\n\tpublic SLL_MaxLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the {@link LookaheadEventInfo} associated with the event where the\r\n\t * {@link #SLL_MaxLook} value was set.\r\n\t */\r\n\tpublic SLL_MaxLookEvent?: LookaheadEventInfo;\r\n\r\n\t/**\r\n\t * The sum of the lookahead required for LL prediction for this decision.\r\n\t * Note that LL prediction is only used when SLL prediction reaches a\r\n\t * conflict state.\r\n\t */\r\n\tpublic LL_TotalLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the minimum lookahead required for any single LL prediction to\r\n\t * complete for this decision. An LL prediction completes when the algorithm\r\n\t * reaches a unique prediction, a conflict state (for\r\n\t * {@link PredictionMode#LL}, an ambiguity state (for\r\n\t * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}, or a syntax error.\r\n\t */\r\n\tpublic LL_MinLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the maximum lookahead required for any single LL prediction to\r\n\t * complete for this decision. An LL prediction completes when the algorithm\r\n\t * reaches a unique prediction, a conflict state (for\r\n\t * {@link PredictionMode#LL}, an ambiguity state (for\r\n\t * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}, or a syntax error.\r\n\t */\r\n\tpublic LL_MaxLook: number = 0;\r\n\r\n\t/**\r\n\t * Gets the {@link LookaheadEventInfo} associated with the event where the\r\n\t * {@link #LL_MaxLook} value was set.\r\n\t */\r\n\tpublic LL_MaxLookEvent?: LookaheadEventInfo;\r\n\r\n\t/**\r\n\t * A collection of {@link ContextSensitivityInfo} instances describing the\r\n\t * context sensitivities encountered during LL prediction for this decision.\r\n\t *\r\n\t * @see ContextSensitivityInfo\r\n\t */\r\n\tpublic contextSensitivities: ContextSensitivityInfo[] = [];\r\n\r\n\t/**\r\n\t * A collection of {@link ErrorInfo} instances describing the parse errors\r\n\t * identified during calls to {@link ParserATNSimulator#adaptivePredict} for\r\n\t * this decision.\r\n\t *\r\n\t * @see ErrorInfo\r\n\t */\r\n\tpublic errors: ErrorInfo[] = [];\r\n\r\n\t/**\r\n\t * A collection of {@link AmbiguityInfo} instances describing the\r\n\t * ambiguities encountered during LL prediction for this decision.\r\n\t *\r\n\t * @see AmbiguityInfo\r\n\t */\r\n\tpublic ambiguities: AmbiguityInfo[] = [];\r\n\r\n\t/**\r\n\t * A collection of {@link PredicateEvalInfo} instances describing the\r\n\t * results of evaluating individual predicates during prediction for this\r\n\t * decision.\r\n\t *\r\n\t * @see PredicateEvalInfo\r\n\t */\r\n\tpublic predicateEvals: PredicateEvalInfo[] = [];\r\n\r\n\t/**\r\n\t * The total number of ATN transitions required during SLL prediction for\r\n\t * this decision. An ATN transition is determined by the number of times the\r\n\t * DFA does not contain an edge that is required for prediction, resulting\r\n\t * in on-the-fly computation of that edge.\r\n\t *\r\n\t * If DFA caching of SLL transitions is employed by the implementation, ATN\r\n\t * computation may cache the computed edge for efficient lookup during\r\n\t * future parsing of this decision. Otherwise, the SLL parsing algorithm\r\n\t * will use ATN transitions exclusively.\r\n\t *\r\n\t * @see #SLL_ATNTransitions\r\n\t * @see ParserATNSimulator#computeTargetState\r\n\t * @see LexerATNSimulator#computeTargetState\r\n\t */\r\n\tpublic SLL_ATNTransitions: number = 0;\r\n\r\n\t/**\r\n\t * The total number of DFA transitions required during SLL prediction for\r\n\t * this decision.\r\n\t *\r\n\t * If the ATN simulator implementation does not use DFA caching for SLL\r\n\t * transitions, this value will be 0.\r\n\t *\r\n\t * @see ParserATNSimulator#getExistingTargetState\r\n\t * @see LexerATNSimulator#getExistingTargetState\r\n\t */\r\n\tpublic SLL_DFATransitions: number = 0;\r\n\r\n\t/**\r\n\t * Gets the total number of times SLL prediction completed in a conflict\r\n\t * state, resulting in fallback to LL prediction.\r\n\t *\r\n\t * Note that this value is not related to whether or not\r\n\t * {@link PredictionMode#SLL} may be used successfully with a particular\r\n\t * grammar. If the ambiguity resolution algorithm applied to the SLL\r\n\t * conflicts for this decision produce the same result as LL prediction for\r\n\t * this decision, {@link PredictionMode#SLL} would produce the same overall\r\n\t * parsing result as {@link PredictionMode#LL}.\r\n\t */\r\n\tpublic LL_Fallback: number = 0;\r\n\r\n\t/**\r\n\t * The total number of ATN transitions required during LL prediction for\r\n\t * this decision. An ATN transition is determined by the number of times the\r\n\t * DFA does not contain an edge that is required for prediction, resulting\r\n\t * in on-the-fly computation of that edge.\r\n\t *\r\n\t * If DFA caching of LL transitions is employed by the implementation, ATN\r\n\t * computation may cache the computed edge for efficient lookup during\r\n\t * future parsing of this decision. Otherwise, the LL parsing algorithm will\r\n\t * use ATN transitions exclusively.\r\n\t *\r\n\t * @see #LL_DFATransitions\r\n\t * @see ParserATNSimulator#computeTargetState\r\n\t * @see LexerATNSimulator#computeTargetState\r\n\t */\r\n\tpublic LL_ATNTransitions: number = 0;\r\n\r\n\t/**\r\n\t * The total number of DFA transitions required during LL prediction for\r\n\t * this decision.\r\n\t *\r\n\t * If the ATN simulator implementation does not use DFA caching for LL\r\n\t * transitions, this value will be 0.\r\n\t *\r\n\t * @see ParserATNSimulator#getExistingTargetState\r\n\t * @see LexerATNSimulator#getExistingTargetState\r\n\t */\r\n\tpublic LL_DFATransitions: number = 0;\r\n\r\n\t/**\r\n\t * Constructs a new instance of the {@link DecisionInfo} class to contain\r\n\t * statistics for a particular decision.\r\n\t *\r\n\t * @param decision The decision number\r\n\t */\r\n\tconstructor(decision: number) {\r\n\t\tthis.decision = decision;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"{\" +\r\n\t\t\t\"decision=\" + this.decision +\r\n\t\t\t\", contextSensitivities=\" + this.contextSensitivities.length +\r\n\t\t\t\", errors=\" + this.errors.length +\r\n\t\t\t\", ambiguities=\" + this.ambiguities.length +\r\n\t\t\t\", SLL_lookahead=\" + this.SLL_TotalLook +\r\n\t\t\t\", SLL_ATNTransitions=\" + this.SLL_ATNTransitions +\r\n\t\t\t\", SLL_DFATransitions=\" + this.SLL_DFATransitions +\r\n\t\t\t\", LL_Fallback=\" + this.LL_Fallback +\r\n\t\t\t\", LL_lookahead=\" + this.LL_TotalLook +\r\n\t\t\t\", LL_ATNTransitions=\" + this.LL_ATNTransitions +\r\n\t\t\t\"}\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.4381103-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\n\r\nexport abstract class DecisionState extends ATNState {\r\n\tpublic decision: number = -1;\r\n\tpublic nonGreedy: boolean = false;\r\n\tpublic sll: boolean = false;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.6283213-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\nexport class EpsilonTransition extends Transition {\r\n\r\n\tprivate _outermostPrecedenceReturn: number;\r\n\r\n\tconstructor(@NotNull target: ATNState, outermostPrecedenceReturn: number = -1) {\r\n\t\tsuper(target);\r\n\t\tthis._outermostPrecedenceReturn = outermostPrecedenceReturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns the rule index of a precedence rule for which this transition is\r\n\t * returning from, where the precedence value is 0; otherwise, -1.\r\n\t *\r\n\t * @see ATNConfig.isPrecedenceFilterSuppressed\r\n\t * @see ParserATNSimulator#applyPrecedenceFilter(ATNConfigSet, ParserRuleContext, PredictionContextCache)\r\n\t * @since 4.4.1\r\n\t */\r\n\tget outermostPrecedenceReturn(): number {\r\n\t\treturn this._outermostPrecedenceReturn;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.EPSILON;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEpsilon(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn \"epsilon\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.7213647-07:00\r\n\r\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This class represents profiling event information for a syntax error\r\n * identified during prediction. Syntax errors occur when the prediction\r\n * algorithm is unable to identify an alternative which would lead to a\r\n * successful parse.\r\n *\r\n * @see Parser#notifyErrorListeners(Token, String, RecognitionException)\r\n * @see ANTLRErrorListener#syntaxError\r\n *\r\n * @since 4.3\r\n */\r\nexport class ErrorInfo extends DecisionEventInfo {\r\n\t/**\r\n\t * Constructs a new instance of the {@link ErrorInfo} class with the\r\n\t * specified detailed syntax error information.\r\n\t *\r\n\t * @param decision The decision number\r\n\t * @param state The final simulator state reached during prediction\r\n\t * prior to reaching the {@link ATNSimulator#ERROR} state\r\n\t * @param input The input token stream\r\n\t * @param startIndex The start index for the current prediction\r\n\t * @param stopIndex The index at which the syntax error was identified\r\n\t */\r\n\tconstructor(\r\n\t\tdecision: number,\r\n\t\t@NotNull state: SimulatorState,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number) {\r\n\r\n\t\tsuper(decision, state, input, startIndex, stopIndex, state.useContext);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BasicState } from \"./BasicState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class InvalidState extends BasicState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.INVALID_TYPE;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.4445360-07:00\r\n\r\nimport { AbstractPredicateTransition } from \"./AbstractPredicateTransition\";\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { NotSetTransition } from \"./NotSetTransition\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\nimport { SetTransition } from \"./SetTransition\";\r\nimport { Token } from \"../Token\";\r\nimport { Transition } from \"./Transition\";\r\nimport { WildcardTransition } from \"./WildcardTransition\";\r\n\r\nexport class LL1Analyzer {\r\n\t/** Special value added to the lookahead sets to indicate that we hit\r\n\t *  a predicate during analysis if `seeThruPreds==false`.\r\n\t */\r\n\tpublic static readonly HIT_PRED: number = Token.INVALID_TYPE;\r\n\r\n\t@NotNull\r\n\tpublic atn: ATN;\r\n\r\n\tconstructor(@NotNull atn: ATN) { this.atn = atn; }\r\n\r\n\t/**\r\n\t * Calculates the SLL(1) expected lookahead set for each outgoing transition\r\n\t * of an {@link ATNState}. The returned array has one element for each\r\n\t * outgoing transition in `s`. If the closure from transition\r\n\t * *i* leads to a semantic predicate before matching a symbol, the\r\n\t * element at index *i* of the result will be `undefined`.\r\n\t *\r\n\t * @param s the ATN state\r\n\t * @returns the expected symbols for each outgoing transition of `s`.\r\n\t */\r\n\tpublic getDecisionLookahead(s: ATNState | undefined): Array<IntervalSet | undefined> | undefined {\r\n//\t\tSystem.out.println(\"LOOK(\"+s.stateNumber+\")\");\r\n\t\tif (s == null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet look: Array<IntervalSet | undefined> = new Array<IntervalSet>(s.numberOfTransitions);\r\n\t\tfor (let alt = 0; alt < s.numberOfTransitions; alt++) {\r\n\t\t\tlet current: IntervalSet | undefined = new IntervalSet();\r\n\t\t\tlook[alt] = current;\r\n\t\t\tlet lookBusy: Array2DHashSet<ATNConfig> = new Array2DHashSet<ATNConfig>(ObjectEqualityComparator.INSTANCE);\r\n\t\t\tlet seeThruPreds: boolean = false; // fail to get lookahead upon pred\r\n\t\t\tthis._LOOK(s.transition(alt).target, undefined, PredictionContext.EMPTY_LOCAL,\r\n\t\t\t\tcurrent, lookBusy, new BitSet(), seeThruPreds, false);\r\n\t\t\t// Wipe out lookahead for this alternative if we found nothing\r\n\t\t\t// or we had a predicate when we !seeThruPreds\r\n\t\t\tif (current.size === 0 || current.contains(LL1Analyzer.HIT_PRED)) {\r\n\t\t\t\tcurrent = undefined;\r\n\t\t\t\tlook[alt] = current;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn look;\r\n\t}\r\n\r\n\t/**\r\n\t * Compute set of tokens that can follow `s` in the ATN in the\r\n\t * specified `ctx`.\r\n\t *\r\n\t * If `ctx` is `undefined` and the end of the rule containing\r\n\t * `s` is reached, {@link Token#EPSILON} is added to the result set.\r\n\t * If `ctx` is not `undefined` and the end of the outermost rule is\r\n\t * reached, {@link Token#EOF} is added to the result set.\r\n\t *\r\n\t * @param s the ATN state\r\n\t * @param ctx the complete parser context, or `undefined` if the context\r\n\t * should be ignored\r\n\t *\r\n\t * @returns The set of tokens that can follow `s` in the ATN in the\r\n\t * specified `ctx`.\r\n\t */\r\n\t// @NotNull\r\n\tpublic LOOK(/*@NotNull*/ s: ATNState, /*@NotNull*/ ctx: PredictionContext): IntervalSet;\r\n\r\n\t/**\r\n\t * Compute set of tokens that can follow `s` in the ATN in the\r\n\t * specified `ctx`.\r\n\t *\r\n\t * If `ctx` is `undefined` and the end of the rule containing\r\n\t * `s` is reached, {@link Token#EPSILON} is added to the result set.\r\n\t * If `ctx` is not `PredictionContext#EMPTY_LOCAL` and the end of the outermost rule is\r\n\t * reached, {@link Token#EOF} is added to the result set.\r\n\t *\r\n\t * @param s the ATN state\r\n\t * @param stopState the ATN state to stop at. This can be a\r\n\t * {@link BlockEndState} to detect epsilon paths through a closure.\r\n\t * @param ctx the complete parser context, or `undefined` if the context\r\n\t * should be ignored\r\n\t *\r\n\t * @returns The set of tokens that can follow `s` in the ATN in the\r\n\t * specified `ctx`.\r\n\t */\r\n\t// @NotNull\r\n\tpublic LOOK(/*@NotNull*/ s: ATNState, /*@NotNull*/ ctx: PredictionContext, stopState: ATNState | null): IntervalSet;\r\n\r\n\t@NotNull\r\n\tpublic LOOK(@NotNull s: ATNState, @NotNull ctx: PredictionContext, stopState?: ATNState | null): IntervalSet {\r\n\t\tif (stopState === undefined) {\r\n\t\t\tif (s.atn == null) {\r\n\t\t\t\tthrow new Error(\"Illegal state\");\r\n\t\t\t}\r\n\r\n\t\t\tstopState = s.atn.ruleToStopState[s.ruleIndex];\r\n\t\t} else if (stopState === null) {\r\n\t\t\t// This is an explicit request to pass undefined as the stopState to _LOOK. Used to distinguish an overload\r\n\t\t\t// from the method which simply omits the stopState parameter.\r\n\t\t\tstopState = undefined;\r\n\t\t}\r\n\r\n\t\tlet r: IntervalSet = new IntervalSet();\r\n\t\tlet seeThruPreds: boolean = true; // ignore preds; get all lookahead\r\n\t\tlet addEOF: boolean = true;\r\n\t\tthis._LOOK(s, stopState, ctx, r, new Array2DHashSet<ATNConfig>(), new BitSet(), seeThruPreds, addEOF);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t/**\r\n\t * Compute set of tokens that can follow `s` in the ATN in the\r\n\t * specified `ctx`.\r\n\t * <p/>\r\n\t * If `ctx` is {@link PredictionContext#EMPTY_LOCAL} and\r\n\t * `stopState` or the end of the rule containing `s` is reached,\r\n\t * {@link Token#EPSILON} is added to the result set. If `ctx` is not\r\n\t * {@link PredictionContext#EMPTY_LOCAL} and `addEOF` is `true`\r\n\t * and `stopState` or the end of the outermost rule is reached,\r\n\t * {@link Token#EOF} is added to the result set.\r\n\t *\r\n\t * @param s the ATN state.\r\n\t * @param stopState the ATN state to stop at. This can be a\r\n\t * {@link BlockEndState} to detect epsilon paths through a closure.\r\n\t * @param ctx The outer context, or {@link PredictionContext#EMPTY_LOCAL} if\r\n\t * the outer context should not be used.\r\n\t * @param look The result lookahead set.\r\n\t * @param lookBusy A set used for preventing epsilon closures in the ATN\r\n\t * from causing a stack overflow. Outside code should pass\r\n\t * `new HashSet<ATNConfig>` for this argument.\r\n\t * @param calledRuleStack A set used for preventing left recursion in the\r\n\t * ATN from causing a stack overflow. Outside code should pass\r\n\t * `new BitSet()` for this argument.\r\n\t * @param seeThruPreds `true` to true semantic predicates as\r\n\t * implicitly `true` and \"see through them\", otherwise `false`\r\n\t * to treat semantic predicates as opaque and add {@link #HIT_PRED} to the\r\n\t * result if one is encountered.\r\n\t * @param addEOF Add {@link Token#EOF} to the result if the end of the\r\n\t * outermost context is reached. This parameter has no effect if `ctx`\r\n\t * is {@link PredictionContext#EMPTY_LOCAL}.\r\n\t */\r\n\tprotected _LOOK(\r\n\t\t@NotNull s: ATNState,\r\n\t\tstopState: ATNState | undefined,\r\n\t\t@NotNull ctx: PredictionContext,\r\n\t\t@NotNull look: IntervalSet,\r\n\t\t@NotNull lookBusy: Array2DHashSet<ATNConfig>,\r\n\t\t@NotNull calledRuleStack: BitSet,\r\n\t\tseeThruPreds: boolean,\r\n\t\taddEOF: boolean): void {\r\n//\t\tSystem.out.println(\"_LOOK(\"+s.stateNumber+\", ctx=\"+ctx);\r\n\t\tlet c: ATNConfig = ATNConfig.create(s, 0, ctx);\r\n\t\tif (!lookBusy.add(c)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (s === stopState) {\r\n\t\t\tif (PredictionContext.isEmptyLocal(ctx)) {\r\n\t\t\t\tlook.add(Token.EPSILON);\r\n\t\t\t\treturn;\r\n\t\t\t} else if (ctx.isEmpty) {\r\n\t\t\t\tif (addEOF) {\r\n\t\t\t\t\tlook.add(Token.EOF);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (s instanceof RuleStopState) {\r\n\t\t\tif (ctx.isEmpty && !PredictionContext.isEmptyLocal(ctx)) {\r\n\t\t\t\tif (addEOF) {\r\n\t\t\t\t\tlook.add(Token.EOF);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet removed: boolean = calledRuleStack.get(s.ruleIndex);\r\n\t\t\ttry {\r\n\t\t\t\tcalledRuleStack.clear(s.ruleIndex);\r\n\t\t\t\tfor (let i = 0; i < ctx.size; i++) {\r\n\t\t\t\t\tif (ctx.getReturnState(i) === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet returnState: ATNState = this.atn.states[ctx.getReturnState(i)];\r\n//\t\t\t\t\tSystem.out.println(\"popping back to \"+retState);\r\n\t\t\t\t\tthis._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfinally {\r\n\t\t\t\tif (removed) {\r\n\t\t\t\t\tcalledRuleStack.set(s.ruleIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet n: number = s.numberOfTransitions;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet t: Transition = s.transition(i);\r\n\t\t\tif (t instanceof RuleTransition) {\r\n\t\t\t\tif (calledRuleStack.get(t.ruleIndex)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet newContext: PredictionContext = ctx.getChild(t.followState.stateNumber);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcalledRuleStack.set(t.ruleIndex);\r\n\t\t\t\t\tthis._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\r\n\t\t\t\t}\r\n\t\t\t\tfinally {\r\n\t\t\t\t\tcalledRuleStack.clear(t.ruleIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (t instanceof AbstractPredicateTransition) {\r\n\t\t\t\tif (seeThruPreds) {\r\n\t\t\t\t\tthis._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlook.add(LL1Analyzer.HIT_PRED);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (t.isEpsilon) {\r\n\t\t\t\tthis._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\r\n\t\t\t}\r\n\t\t\telse if (t instanceof WildcardTransition) {\r\n\t\t\t\tlook.addAll(IntervalSet.of(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType));\r\n\t\t\t}\r\n\t\t\telse {\r\n//\t\t\t\tSystem.out.println(\"adding \"+ t);\r\n\t\t\t\tlet set: IntervalSet | undefined = t.label;\r\n\t\t\t\tif (set != null) {\r\n\t\t\t\t\tif (t instanceof NotSetTransition) {\r\n\t\t\t\t\t\tset = set.complement(IntervalSet.of(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlook.addAll(set);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.1083066-07:00\r\n\r\nimport { AcceptStateInfo } from \"../dfa/AcceptStateInfo\";\r\nimport { ActionTransition } from \"./ActionTransition\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { ATNSimulator } from \"./ATNSimulator\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { CharStream } from \"../CharStream\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { DFAState } from \"../dfa/DFAState\";\r\nimport { Interval } from \"../misc/Interval\";\r\nimport { IntStream } from \"../IntStream\";\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerActionExecutor } from \"./LexerActionExecutor\";\r\nimport { LexerNoViableAltException } from \"../LexerNoViableAltException\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { OrderedATNConfigSet } from \"./OrderedATNConfigSet\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { PredicateTransition } from \"./PredicateTransition\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\nimport { Token } from \"../Token\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\nimport * as assert from \"assert\";\r\n\r\n/** \"dup\" of ParserInterpreter */\r\nexport class LexerATNSimulator extends ATNSimulator {\r\n\tpublic optimize_tail_calls: boolean = true;\r\n\r\n\tprotected recog: Lexer | undefined;\r\n\r\n\t/** The current token's starting index into the character stream.\r\n\t *  Shared across DFA to ATN simulation in case the ATN fails and the\r\n\t *  DFA did not have a previous accept state. In this case, we use the\r\n\t *  ATN-generated exception object.\r\n\t */\r\n\tprotected startIndex: number = -1;\r\n\r\n\t/** line number 1..n within the input */\r\n\tprivate _line: number = 1;\r\n\r\n\t/** The index of the character relative to the beginning of the line 0..n-1 */\r\n\tprivate _charPositionInLine: number = 0;\r\n\r\n\tprotected mode: number = Lexer.DEFAULT_MODE;\r\n\r\n\t/** Used during DFA/ATN exec to record the most recent accept configuration info */\r\n\t@NotNull\r\n\tprotected prevAccept: LexerATNSimulator.SimState = new LexerATNSimulator.SimState();\r\n\r\n\tconstructor(/*@NotNull*/ atn: ATN);\r\n\tconstructor(/*@NotNull*/ atn: ATN, recog: Lexer | undefined);\r\n\tconstructor(@NotNull atn: ATN, recog?: Lexer) {\r\n\t\tsuper(atn);\r\n\t\tthis.recog = recog;\r\n\t}\r\n\r\n\tpublic copyState(@NotNull simulator: LexerATNSimulator): void {\r\n\t\tthis._charPositionInLine = simulator.charPositionInLine;\r\n\t\tthis._line = simulator._line;\r\n\t\tthis.mode = simulator.mode;\r\n\t\tthis.startIndex = simulator.startIndex;\r\n\t}\r\n\r\n\tpublic match(@NotNull input: CharStream, mode: number): number {\r\n\t\tthis.mode = mode;\r\n\t\tlet mark: number = input.mark();\r\n\t\ttry {\r\n\t\t\tthis.startIndex = input.index;\r\n\t\t\tthis.prevAccept.reset();\r\n\t\t\tlet s0: DFAState | undefined = this.atn.modeToDFA[mode].s0;\r\n\t\t\tif (s0 == null) {\r\n\t\t\t\treturn this.matchATN(input);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.execATN(input, s0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tinput.release(mark);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reset(): void {\r\n\t\tthis.prevAccept.reset();\r\n\t\tthis.startIndex = -1;\r\n\t\tthis._line = 1;\r\n\t\tthis._charPositionInLine = 0;\r\n\t\tthis.mode = Lexer.DEFAULT_MODE;\r\n\t}\r\n\r\n\tprotected matchATN(@NotNull input: CharStream): number {\r\n\t\tlet startState: ATNState = this.atn.modeToStartState[this.mode];\r\n\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(`matchATN mode ${this.mode} start: ${startState}`);\r\n\t\t}\r\n\r\n\t\tlet old_mode: number = this.mode;\r\n\r\n\t\tlet s0_closure: ATNConfigSet = this.computeStartState(input, startState);\r\n\t\tlet suppressEdge: boolean = s0_closure.hasSemanticContext;\r\n\t\tif (suppressEdge) {\r\n\t\t\ts0_closure.hasSemanticContext = false;\r\n\t\t}\r\n\r\n\t\tlet next: DFAState = this.addDFAState(s0_closure);\r\n\t\tif (!suppressEdge) {\r\n\t\t\tlet dfa = this.atn.modeToDFA[this.mode];\r\n\t\t\tif (!dfa.s0) {\r\n\t\t\t\tdfa.s0 = next;\r\n\t\t\t} else {\r\n\t\t\t\tnext = dfa.s0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet predict: number = this.execATN(input, next);\r\n\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(`DFA after matchATN: ${this.atn.modeToDFA[old_mode].toLexerString()}`);\r\n\t\t}\r\n\r\n\t\treturn predict;\r\n\t}\r\n\r\n\tprotected execATN(@NotNull input: CharStream, @NotNull ds0: DFAState): number {\r\n\t\t// console.log(\"enter exec index \"+input.index+\" from \"+ds0.configs);\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(`start state closure=${ds0.configs}`);\r\n\t\t}\r\n\r\n\t\tif (ds0.isAcceptState) {\r\n\t\t\t// allow zero-length tokens\r\n\t\t\tthis.captureSimState(this.prevAccept, input, ds0);\r\n\t\t}\r\n\r\n\t\tlet t: number = input.LA(1);\r\n\t\t// @NotNull\r\n\t\tlet s: DFAState = ds0; // s is current/from DFA state\r\n\r\n\t\twhile (true) { // while more work\r\n\t\t\tif (LexerATNSimulator.debug) {\r\n\t\t\t\tconsole.log(`execATN loop starting closure: ${s.configs}`);\r\n\t\t\t}\r\n\r\n\t\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\r\n\t\t\t// avoid looking up the DFA state again, which is expensive.\r\n\t\t\t// If the previous target was already part of the DFA, we might\r\n\t\t\t// be able to avoid doing a reach operation upon t. If s!=null,\r\n\t\t\t// it means that semantic predicates didn't prevent us from\r\n\t\t\t// creating a DFA state. Once we know s!=null, we check to see if\r\n\t\t\t// the DFA state has an edge already for t. If so, we can just reuse\r\n\t\t\t// it's configuration set; there's no point in re-computing it.\r\n\t\t\t// This is kind of like doing DFA simulation within the ATN\r\n\t\t\t// simulation because DFA simulation is really just a way to avoid\r\n\t\t\t// computing reach/closure sets. Technically, once we know that\r\n\t\t\t// we have a previously added DFA state, we could jump over to\r\n\t\t\t// the DFA simulator. But, that would mean popping back and forth\r\n\t\t\t// a lot and making things more complicated algorithmically.\r\n\t\t\t// This optimization makes a lot of sense for loops within DFA.\r\n\t\t\t// A character will take us back to an existing DFA state\r\n\t\t\t// that already has lots of edges out of it. e.g., .* in comments.\r\n\t\t\tlet target: DFAState | undefined = this.getExistingTargetState(s, t);\r\n\t\t\tif (target == null) {\r\n\t\t\t\ttarget = this.computeTargetState(input, s, t);\r\n\t\t\t}\r\n\r\n\t\t\tif (target === ATNSimulator.ERROR) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// If this is a consumable input element, make sure to consume before\r\n\t\t\t// capturing the accept state so the input index, line, and char\r\n\t\t\t// position accurately reflect the state of the interpreter at the\r\n\t\t\t// end of the token.\r\n\t\t\tif (t !== IntStream.EOF) {\r\n\t\t\t\tthis.consume(input);\r\n\t\t\t}\r\n\r\n\t\t\tif (target.isAcceptState) {\r\n\t\t\t\tthis.captureSimState(this.prevAccept, input, target);\r\n\t\t\t\tif (t === IntStream.EOF) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tt = input.LA(1);\r\n\t\t\ts = target; // flip; current DFA target becomes new src/from state\r\n\t\t}\r\n\r\n\t\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\r\n\t}\r\n\r\n\t/**\r\n\t * Get an existing target state for an edge in the DFA. If the target state\r\n\t * for the edge has not yet been computed or is otherwise not available,\r\n\t * this method returns `undefined`.\r\n\t *\r\n\t * @param s The current DFA state\r\n\t * @param t The next input symbol\r\n\t * @returns The existing target DFA state for the given input symbol\r\n\t * `t`, or `undefined` if the target state for this edge is not\r\n\t * already cached\r\n\t */\r\n\tprotected getExistingTargetState(@NotNull s: DFAState, t: number): DFAState | undefined {\r\n\t\tlet target: DFAState | undefined = s.getTarget(t);\r\n\t\tif (LexerATNSimulator.debug && target != null) {\r\n\t\t\tconsole.log(\"reuse state \" + s.stateNumber +\r\n\t\t\t\t\" edge to \" + target.stateNumber);\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Compute a target state for an edge in the DFA, and attempt to add the\r\n\t * computed state and corresponding edge to the DFA.\r\n\t *\r\n\t * @param input The input stream\r\n\t * @param s The current DFA state\r\n\t * @param t The next input symbol\r\n\t *\r\n\t * @returns The computed target DFA state for the given input symbol\r\n\t * `t`. If `t` does not lead to a valid DFA state, this method\r\n\t * returns {@link #ERROR}.\r\n\t */\r\n\t@NotNull\r\n\tprotected computeTargetState(@NotNull input: CharStream, @NotNull s: DFAState, t: number): DFAState {\r\n\t\tlet reach: ATNConfigSet = new OrderedATNConfigSet();\r\n\r\n\t\t// if we don't find an existing DFA state\r\n\t\t// Fill reach starting from closure, following t transitions\r\n\t\tthis.getReachableConfigSet(input, s.configs, reach, t);\r\n\r\n\t\tif (reach.isEmpty) { // we got nowhere on t from s\r\n\t\t\tif (!reach.hasSemanticContext) {\r\n\t\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\r\n\t\t\t\t// cause a failover from DFA later.\r\n\t\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\r\n\t\t\t}\r\n\r\n\t\t\t// stop when we can't match any more char\r\n\t\t\treturn ATNSimulator.ERROR;\r\n\t\t}\r\n\r\n\t\t// Add an edge from s to target DFA found/created for reach\r\n\t\treturn this.addDFAEdge(s, t, reach);\r\n\t}\r\n\r\n\tprotected failOrAccept(\r\n\t\tprevAccept: LexerATNSimulator.SimState, input: CharStream,\r\n\t\treach: ATNConfigSet, t: number): number {\r\n\t\tif (prevAccept.dfaState != null) {\r\n\t\t\tlet lexerActionExecutor: LexerActionExecutor | undefined = prevAccept.dfaState.lexerActionExecutor;\r\n\t\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\r\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.charPos);\r\n\t\t\treturn prevAccept.dfaState.prediction;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// if no accept and EOF is first char, return EOF\r\n\t\t\tif (t === IntStream.EOF && input.index === this.startIndex) {\r\n\t\t\t\treturn Token.EOF;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Given a starting configuration set, figure out all ATN configurations\r\n\t *  we can reach upon input `t`. Parameter `reach` is a return\r\n\t *  parameter.\r\n\t */\r\n\tprotected getReachableConfigSet(@NotNull input: CharStream, @NotNull closure: ATNConfigSet, @NotNull reach: ATNConfigSet, t: number): void {\r\n\t\t// this is used to skip processing for configs which have a lower priority\r\n\t\t// than a config that already reached an accept state for the same rule\r\n\t\tlet skipAlt: number = ATN.INVALID_ALT_NUMBER;\r\n\t\tfor (let c of closure) {\r\n\t\t\tlet currentAltReachedAcceptState: boolean = c.alt === skipAlt;\r\n\t\t\tif (currentAltReachedAcceptState && c.hasPassedThroughNonGreedyDecision) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (LexerATNSimulator.debug) {\r\n\t\t\t\tconsole.log(`testing ${this.getTokenName(t)} at ${c.toString(this.recog, true)}`);\r\n\t\t\t}\r\n\r\n\t\t\tlet n: number = c.state.numberOfOptimizedTransitions;\r\n\t\t\tfor (let ti = 0; ti < n; ti++) {               // for each optimized transition\r\n\t\t\t\tlet trans: Transition = c.state.getOptimizedTransition(ti);\r\n\t\t\t\tlet target: ATNState | undefined = this.getReachableTarget(trans, t);\r\n\t\t\t\tif (target != null) {\r\n\t\t\t\t\tlet lexerActionExecutor: LexerActionExecutor | undefined = c.lexerActionExecutor;\r\n\t\t\t\t\tlet config: ATNConfig;\r\n\t\t\t\t\tif (lexerActionExecutor != null) {\r\n\t\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\r\n\t\t\t\t\t\tconfig = c.transform(target, true, lexerActionExecutor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tassert(c.lexerActionExecutor == null);\r\n\t\t\t\t\t\tconfig = c.transform(target, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet treatEofAsEpsilon: boolean = t === IntStream.EOF;\r\n\t\t\t\t\tif (this.closure(input, config, reach, currentAltReachedAcceptState, true, treatEofAsEpsilon)) {\r\n\t\t\t\t\t\t// any remaining configs for this alt have a lower priority than\r\n\t\t\t\t\t\t// the one that just reached an accept state.\r\n\t\t\t\t\t\tskipAlt = c.alt;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected accept(\r\n\t\t@NotNull input: CharStream, lexerActionExecutor: LexerActionExecutor | undefined,\r\n\t\tstartIndex: number, index: number, line: number, charPos: number): void {\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(`ACTION ${lexerActionExecutor}`);\r\n\t\t}\r\n\r\n\t\t// seek to after last char in token\r\n\t\tinput.seek(index);\r\n\t\tthis._line = line;\r\n\t\tthis._charPositionInLine = charPos;\r\n\r\n\t\tif (lexerActionExecutor != null && this.recog != null) {\r\n\t\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getReachableTarget(trans: Transition, t: number): ATNState | undefined {\r\n\t\tif (trans.matches(t, Lexer.MIN_CHAR_VALUE, Lexer.MAX_CHAR_VALUE)) {\r\n\t\t\treturn trans.target;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected computeStartState(\r\n\t\t@NotNull input: CharStream,\r\n\t\t@NotNull p: ATNState): ATNConfigSet {\r\n\t\tlet initialContext: PredictionContext = PredictionContext.EMPTY_FULL;\r\n\t\tlet configs: ATNConfigSet = new OrderedATNConfigSet();\r\n\t\tfor (let i = 0; i < p.numberOfTransitions; i++) {\r\n\t\t\tlet target: ATNState = p.transition(i).target;\r\n\t\t\tlet c: ATNConfig = ATNConfig.create(target, i + 1, initialContext);\r\n\t\t\tthis.closure(input, c, configs, false, false, false);\r\n\t\t}\r\n\t\treturn configs;\r\n\t}\r\n\r\n\t/**\r\n\t * Since the alternatives within any lexer decision are ordered by\r\n\t * preference, this method stops pursuing the closure as soon as an accept\r\n\t * state is reached. After the first accept state is reached by depth-first\r\n\t * search from `config`, all other (potentially reachable) states for\r\n\t * this rule would have a lower priority.\r\n\t *\r\n\t * @returns `true` if an accept state is reached, otherwise\r\n\t * `false`.\r\n\t */\r\n\tprotected closure(@NotNull input: CharStream, @NotNull config: ATNConfig, @NotNull configs: ATNConfigSet, currentAltReachedAcceptState: boolean, speculative: boolean, treatEofAsEpsilon: boolean): boolean {\r\n\t\tif (LexerATNSimulator.debug) {\r\n\t\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\r\n\t\t}\r\n\r\n\t\tif (config.state instanceof RuleStopState) {\r\n\t\t\tif (LexerATNSimulator.debug) {\r\n\t\t\t\tif (this.recog != null) {\r\n\t\t\t\t\tconsole.log(`closure at ${this.recog.ruleNames[config.state.ruleIndex]} rule stop ${config}`);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`closure at rule stop ${config}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet context: PredictionContext = config.context;\r\n\t\t\tif (context.isEmpty) {\r\n\t\t\t\tconfigs.add(config);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse if (context.hasEmpty) {\r\n\t\t\t\tconfigs.add(config.transform(config.state, true, PredictionContext.EMPTY_FULL));\r\n\t\t\t\tcurrentAltReachedAcceptState = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < context.size; i++) {\r\n\t\t\t\tlet returnStateNumber: number = context.getReturnState(i);\r\n\t\t\t\tif (returnStateNumber === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet newContext: PredictionContext = context.getParent(i); // \"pop\" return state\r\n\t\t\t\tlet returnState: ATNState = this.atn.states[returnStateNumber];\r\n\t\t\t\tlet c: ATNConfig = config.transform(returnState, false, newContext);\r\n\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, c, configs, currentAltReachedAcceptState, speculative, treatEofAsEpsilon);\r\n\t\t\t}\r\n\r\n\t\t\treturn currentAltReachedAcceptState;\r\n\t\t}\r\n\r\n\t\t// optimization\r\n\t\tif (!config.state.onlyHasEpsilonTransitions) {\r\n\t\t\tif (!currentAltReachedAcceptState || !config.hasPassedThroughNonGreedyDecision) {\r\n\t\t\t\tconfigs.add(config);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet p: ATNState = config.state;\r\n\t\tfor (let i = 0; i < p.numberOfOptimizedTransitions; i++) {\r\n\t\t\tlet t: Transition = p.getOptimizedTransition(i);\r\n\t\t\tlet c: ATNConfig | undefined = this.getEpsilonTarget(input, config, t, configs, speculative, treatEofAsEpsilon);\r\n\t\t\tif (c != null) {\r\n\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, c, configs, currentAltReachedAcceptState, speculative, treatEofAsEpsilon);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn currentAltReachedAcceptState;\r\n\t}\r\n\r\n\t// side-effect: can alter configs.hasSemanticContext\r\n\tprotected getEpsilonTarget(\r\n\t\t@NotNull input: CharStream,\r\n\t\t@NotNull config: ATNConfig,\r\n\t\t@NotNull t: Transition,\r\n\t\t@NotNull configs: ATNConfigSet,\r\n\t\tspeculative: boolean,\r\n\t\ttreatEofAsEpsilon: boolean): ATNConfig | undefined {\r\n\t\tlet c: ATNConfig | undefined;\r\n\r\n\t\tswitch (t.serializationType) {\r\n\t\tcase TransitionType.RULE:\r\n\t\t\tlet ruleTransition: RuleTransition = t as RuleTransition;\r\n\t\t\tif (this.optimize_tail_calls && ruleTransition.optimizedTailCall && !config.context.hasEmpty) {\r\n\t\t\t\tc = config.transform(t.target, true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet newContext: PredictionContext = config.context.getChild(ruleTransition.followState.stateNumber);\r\n\t\t\t\tc = config.transform(t.target, true, newContext);\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.PRECEDENCE:\r\n\t\t\tthrow new Error(\"Precedence predicates are not supported in lexers.\");\r\n\r\n\t\tcase TransitionType.PREDICATE:\r\n\t\t\t/*  Track traversing semantic predicates. If we traverse,\r\n\t\t\t\twe cannot add a DFA state for this \"reach\" computation\r\n\t\t\t\tbecause the DFA would not test the predicate again in the\r\n\t\t\t\tfuture. Rather than creating collections of semantic predicates\r\n\t\t\t\tlike v3 and testing them on prediction, v4 will test them on the\r\n\t\t\t\tfly all the time using the ATN not the DFA. This is slower but\r\n\t\t\t\tsemantically it's not used that often. One of the key elements to\r\n\t\t\t\tthis predicate mechanism is not adding DFA states that see\r\n\t\t\t\tpredicates immediately afterwards in the ATN. For example,\r\n\r\n\t\t\t\ta : ID {p1}? | ID {p2}? ;\r\n\r\n\t\t\t\tshould create the start state for rule 'a' (to save start state\r\n\t\t\t\tcompetition), but should not create target of ID state. The\r\n\t\t\t\tcollection of ATN states the following ID references includes\r\n\t\t\t\tstates reached by traversing predicates. Since this is when we\r\n\t\t\t\ttest them, we cannot cash the DFA state target of ID.\r\n\t\t\t*/\r\n\t\t\tlet pt: PredicateTransition = t as PredicateTransition;\r\n\t\t\tif (LexerATNSimulator.debug) {\r\n\t\t\t\tconsole.log(\"EVAL rule \" + pt.ruleIndex + \":\" + pt.predIndex);\r\n\t\t\t}\r\n\t\t\tconfigs.hasSemanticContext = true;\r\n\t\t\tif (this.evaluatePredicate(input, pt.ruleIndex, pt.predIndex, speculative)) {\r\n\t\t\t\tc = config.transform(t.target, true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.ACTION:\r\n\t\t\tif (config.context.hasEmpty) {\r\n\t\t\t\t// execute actions anywhere in the start rule for a token.\r\n\t\t\t\t//\r\n\t\t\t\t// TODO: if the entry rule is invoked recursively, some\r\n\t\t\t\t// actions may be executed during the recursive call. The\r\n\t\t\t\t// problem can appear when hasEmpty is true but\r\n\t\t\t\t// isEmpty is false. In this case, the config needs to be\r\n\t\t\t\t// split into two contexts - one with just the empty path\r\n\t\t\t\t// and another with everything but the empty path.\r\n\t\t\t\t// Unfortunately, the current algorithm does not allow\r\n\t\t\t\t// getEpsilonTarget to return two configurations, so\r\n\t\t\t\t// additional modifications are needed before we can support\r\n\t\t\t\t// the split operation.\r\n\t\t\t\tlet lexerActionExecutor: LexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor, this.atn.lexerActions[(t as ActionTransition).actionIndex]);\r\n\t\t\t\tc = config.transform(t.target, true, lexerActionExecutor);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// ignore actions in referenced rules\r\n\t\t\t\tc = config.transform(t.target, true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\tcase TransitionType.EPSILON:\r\n\t\t\tc = config.transform(t.target, true);\r\n\t\t\tbreak;\r\n\r\n\t\tcase TransitionType.ATOM:\r\n\t\tcase TransitionType.RANGE:\r\n\t\tcase TransitionType.SET:\r\n\t\t\tif (treatEofAsEpsilon) {\r\n\t\t\t\tif (t.matches(IntStream.EOF, Lexer.MIN_CHAR_VALUE, Lexer.MAX_CHAR_VALUE)) {\r\n\t\t\t\t\tc = config.transform(t.target, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tc = undefined;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tc = undefined;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluate a predicate specified in the lexer.\r\n\t *\r\n\t * If `speculative` is `true`, this method was called before\r\n\t * {@link #consume} for the matched character. This method should call\r\n\t * {@link #consume} before evaluating the predicate to ensure position\r\n\t * sensitive values, including {@link Lexer#getText}, {@link Lexer#getLine},\r\n\t * and {@link Lexer#getCharPositionInLine}, properly reflect the current\r\n\t * lexer state. This method should restore `input` and the simulator\r\n\t * to the original state before returning (i.e. undo the actions made by the\r\n\t * call to {@link #consume}.\r\n\t *\r\n\t * @param input The input stream.\r\n\t * @param ruleIndex The rule containing the predicate.\r\n\t * @param predIndex The index of the predicate within the rule.\r\n\t * @param speculative `true` if the current index in `input` is\r\n\t * one character before the predicate's location.\r\n\t *\r\n\t * @returns `true` if the specified predicate evaluates to\r\n\t * `true`.\r\n\t */\r\n\tprotected evaluatePredicate(@NotNull input: CharStream, ruleIndex: number, predIndex: number, speculative: boolean): boolean {\r\n\t\t// assume true if no recognizer was provided\r\n\t\tif (this.recog == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!speculative) {\r\n\t\t\treturn this.recog.sempred(undefined, ruleIndex, predIndex);\r\n\t\t}\r\n\r\n\t\tlet savedCharPositionInLine: number = this._charPositionInLine;\r\n\t\tlet savedLine: number = this._line;\r\n\t\tlet index: number = input.index;\r\n\t\tlet marker: number = input.mark();\r\n\t\ttry {\r\n\t\t\tthis.consume(input);\r\n\t\t\treturn this.recog.sempred(undefined, ruleIndex, predIndex);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis._charPositionInLine = savedCharPositionInLine;\r\n\t\t\tthis._line = savedLine;\r\n\t\t\tinput.seek(index);\r\n\t\t\tinput.release(marker);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected captureSimState(\r\n\t\t@NotNull settings: LexerATNSimulator.SimState,\r\n\t\t@NotNull input: CharStream,\r\n\t\t@NotNull dfaState: DFAState): void {\r\n\t\tsettings.index = input.index;\r\n\t\tsettings.line = this._line;\r\n\t\tsettings.charPos = this._charPositionInLine;\r\n\t\tsettings.dfaState = dfaState;\r\n\t}\r\n\r\n\t// @NotNull\r\n\tprotected addDFAEdge(/*@NotNull*/ p: DFAState, t: number, /*@NotNull*/ q: ATNConfigSet): DFAState;\r\n\tprotected addDFAEdge(/*@NotNull*/ p: DFAState, t: number, /*@NotNull*/ q: DFAState): void;\r\n\tprotected addDFAEdge(p: DFAState, t: number, q: ATNConfigSet | DFAState): DFAState | void {\r\n\t\tif (q instanceof ATNConfigSet) {\r\n\t\t\t/* leading to this call, ATNConfigSet.hasSemanticContext is used as a\r\n\t\t\t* marker indicating dynamic predicate evaluation makes this edge\r\n\t\t\t* dependent on the specific input sequence, so the static edge in the\r\n\t\t\t* DFA should be omitted. The target DFAState is still created since\r\n\t\t\t* execATN has the ability to resynchronize with the DFA state cache\r\n\t\t\t* following the predicate evaluation step.\r\n\t\t\t*\r\n\t\t\t* TJP notes: next time through the DFA, we see a pred again and eval.\r\n\t\t\t* If that gets us to a previously created (but dangling) DFA\r\n\t\t\t* state, we can continue in pure DFA mode from there.\r\n\t\t\t*/\r\n\t\t\tlet suppressEdge: boolean = q.hasSemanticContext;\r\n\t\t\tif (suppressEdge) {\r\n\t\t\t\tq.hasSemanticContext = false;\r\n\t\t\t}\r\n\r\n\t\t\t// @NotNull\r\n\t\t\tlet to: DFAState = this.addDFAState(q);\r\n\r\n\t\t\tif (suppressEdge) {\r\n\t\t\t\treturn to;\r\n\t\t\t}\r\n\r\n\t\t\tthis.addDFAEdge(p, t, to);\r\n\t\t\treturn to;\r\n\t\t} else {\r\n\t\t\tif (LexerATNSimulator.debug) {\r\n\t\t\t\tconsole.log(\"EDGE \" + p + \" -> \" + q + \" upon \" + String.fromCharCode(t));\r\n\t\t\t}\r\n\r\n\t\t\tif (p != null) {\r\n\t\t\t\tp.setTarget(t, q);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Add a new DFA state if there isn't one with this set of\r\n\t * \tconfigurations already. This method also detects the first\r\n\t * \tconfiguration containing an ATN rule stop state. Later, when\r\n\t * \ttraversing the DFA, we will know which rule to accept.\r\n\t */\r\n\t@NotNull\r\n\tprotected addDFAState(@NotNull configs: ATNConfigSet): DFAState {\r\n\t\t/* the lexer evaluates predicates on-the-fly; by this point configs\r\n\t\t * should not contain any configurations with unevaluated predicates.\r\n\t\t */\r\n\t\tassert(!configs.hasSemanticContext);\r\n\r\n\t\tlet proposed: DFAState = new DFAState(configs);\r\n\t\tlet existing: DFAState | undefined = this.atn.modeToDFA[this.mode].states.get(proposed);\r\n\t\tif (existing != null) {\r\n\t\t\treturn existing;\r\n\t\t}\r\n\r\n\t\tconfigs.optimizeConfigs(this);\r\n\t\tlet newState: DFAState = new DFAState(configs.clone(true));\r\n\r\n\t\tlet firstConfigWithRuleStopState: ATNConfig | undefined;\r\n\t\tfor (let c of configs) {\r\n\t\t\tif (c.state instanceof RuleStopState) {\r\n\t\t\t\tfirstConfigWithRuleStopState = c;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstConfigWithRuleStopState != null) {\r\n\t\t\tlet prediction: number = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\r\n\t\t\tlet lexerActionExecutor: LexerActionExecutor | undefined = firstConfigWithRuleStopState.lexerActionExecutor;\r\n\t\t\tnewState.acceptStateInfo = new AcceptStateInfo(prediction, lexerActionExecutor);\r\n\t\t}\r\n\r\n\t\treturn this.atn.modeToDFA[this.mode].addState(newState);\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getDFA(mode: number): DFA {\r\n\t\treturn this.atn.modeToDFA[mode];\r\n\t}\r\n\r\n\t/** Get the text matched so far for the current token.\r\n\t */\r\n\t@NotNull\r\n\tpublic getText(@NotNull input: CharStream): string {\r\n\t\t// index is first lookahead char, don't include.\r\n\t\treturn input.getText(Interval.of(this.startIndex, input.index - 1));\r\n\t}\r\n\r\n\tget line(): number {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\tset line(line: number) {\r\n\t\tthis._line = line;\r\n\t}\r\n\r\n\tget charPositionInLine(): number {\r\n\t\treturn this._charPositionInLine;\r\n\t}\r\n\r\n\tset charPositionInLine(charPositionInLine: number) {\r\n\t\tthis._charPositionInLine = charPositionInLine;\r\n\t}\r\n\r\n\tpublic consume(@NotNull input: CharStream): void {\r\n\t\tlet curChar: number = input.LA(1);\r\n\t\tif (curChar === \"\\n\".charCodeAt(0)) {\r\n\t\t\tthis._line++;\r\n\t\t\tthis._charPositionInLine = 0;\r\n\t\t} else {\r\n\t\t\tthis._charPositionInLine++;\r\n\t\t}\r\n\t\tinput.consume();\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getTokenName(t: number): string {\r\n\t\tif (t === -1) {\r\n\t\t\treturn \"EOF\";\r\n\t\t}\r\n\t\t//if ( atn.g!=null ) return atn.g.getTokenDisplayName(t);\r\n\t\treturn \"'\" + String.fromCharCode(t) + \"'\";\r\n\t}\r\n}\r\n\r\nexport namespace LexerATNSimulator {\r\n\texport const debug: boolean = false;\r\n\texport const dfa_debug: boolean = false;\r\n\r\n\t/** When we hit an accept state in either the DFA or the ATN, we\r\n\t *  have to notify the character stream to start buffering characters\r\n\t *  via {@link IntStream#mark} and record the current state. The current sim state\r\n\t *  includes the current index into the input, the current line,\r\n\t *  and current character position in that line. Note that the Lexer is\r\n\t *  tracking the starting line and characterization of the token. These\r\n\t *  variables track the \"state\" of the simulator when it hits an accept state.\r\n\t *\r\n\t *  We track these variables separately for the DFA and ATN simulation\r\n\t *  because the DFA simulation often has to fail over to the ATN\r\n\t *  simulation. If the ATN simulation fails, we need the DFA to fall\r\n\t *  back to its previously accepted state, if any. If the ATN succeeds,\r\n\t *  then the ATN does the accept and the DFA simulator that invoked it\r\n\t *  can simply return the predicted token type.\r\n\t */\r\n\texport class SimState {\r\n\t\tpublic index: number = -1;\r\n\t\tpublic line: number = 0;\r\n\t\tpublic charPos: number = -1;\r\n\t\tpublic dfaState?: DFAState;\r\n\r\n\t\tpublic reset(): void {\r\n\t\t\tthis.index = -1;\r\n\t\t\tthis.line = 0;\r\n\t\t\tthis.charPos = -1;\r\n\t\t\tthis.dfaState = undefined;\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:28.8810453-07:00\r\n\r\nimport { ArrayEqualityComparator } from \"../misc/ArrayEqualityComparator\";\r\nimport { CharStream } from \"../CharStream\";\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerIndexedCustomAction } from \"./LexerIndexedCustomAction\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Represents an executor for a sequence of lexer actions which traversed during\r\n * the matching operation of a lexer rule (token).\r\n *\r\n * The executor tracks position information for position-dependent lexer actions\r\n * efficiently, ensuring that actions appearing only at the end of the rule do\r\n * not cause bloating of the {@link DFA} created for the lexer.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerActionExecutor {\r\n\t@NotNull\r\n\tprivate _lexerActions: LexerAction[];\r\n\r\n\t/**\r\n\t * Caches the result of {@link #hashCode} since the hash code is an element\r\n\t * of the performance-critical {@link LexerATNConfig#hashCode} operation.\r\n\t */\r\n\tprivate cachedHashCode: number;\r\n\r\n\t/**\r\n\t * Constructs an executor for a sequence of {@link LexerAction} actions.\r\n\t * @param lexerActions The lexer actions to execute.\r\n\t */\r\n\tconstructor(@NotNull lexerActions: LexerAction[]) {\r\n\t\tthis._lexerActions = lexerActions;\r\n\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\tfor (let lexerAction of lexerActions) {\r\n\t\t\thash = MurmurHash.update(hash, lexerAction);\r\n\t\t}\r\n\r\n\t\tthis.cachedHashCode = MurmurHash.finish(hash, lexerActions.length);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link LexerActionExecutor} which executes the actions for\r\n\t * the input `lexerActionExecutor` followed by a specified\r\n\t * `lexerAction`.\r\n\t *\r\n\t * @param lexerActionExecutor The executor for actions already traversed by\r\n\t * the lexer while matching a token within a particular\r\n\t * {@link ATNConfig}. If this is `undefined`, the method behaves as though\r\n\t * it were an empty executor.\r\n\t * @param lexerAction The lexer action to execute after the actions\r\n\t * specified in `lexerActionExecutor`.\r\n\t *\r\n\t * @returns A {@link LexerActionExecutor} for executing the combine actions\r\n\t * of `lexerActionExecutor` and `lexerAction`.\r\n\t */\r\n\t@NotNull\r\n\tpublic static append(lexerActionExecutor: LexerActionExecutor | undefined, @NotNull lexerAction: LexerAction): LexerActionExecutor {\r\n\t\tif (!lexerActionExecutor) {\r\n\t\t\treturn new LexerActionExecutor([lexerAction]);\r\n\t\t}\r\n\r\n\t\tlet lexerActions = lexerActionExecutor._lexerActions.slice(0);\r\n\t\tlexerActions.push(lexerAction);\r\n\t\treturn new LexerActionExecutor(lexerActions);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link LexerActionExecutor} which encodes the current offset\r\n\t * for position-dependent lexer actions.\r\n\t *\r\n\t * Normally, when the executor encounters lexer actions where\r\n\t * {@link LexerAction#isPositionDependent} returns `true`, it calls\r\n\t * {@link IntStream#seek} on the input {@link CharStream} to set the input\r\n\t * position to the *end* of the current token. This behavior provides\r\n\t * for efficient DFA representation of lexer actions which appear at the end\r\n\t * of a lexer rule, even when the lexer rule matches a variable number of\r\n\t * characters.\r\n\t *\r\n\t * Prior to traversing a match transition in the ATN, the current offset\r\n\t * from the token start index is assigned to all position-dependent lexer\r\n\t * actions which have not already been assigned a fixed offset. By storing\r\n\t * the offsets relative to the token start index, the DFA representation of\r\n\t * lexer actions which appear in the middle of tokens remains efficient due\r\n\t * to sharing among tokens of the same length, regardless of their absolute\r\n\t * position in the input stream.\r\n\t *\r\n\t * If the current executor already has offsets assigned to all\r\n\t * position-dependent lexer actions, the method returns `this`.\r\n\t *\r\n\t * @param offset The current offset to assign to all position-dependent\r\n\t * lexer actions which do not already have offsets assigned.\r\n\t *\r\n\t * @returns A {@link LexerActionExecutor} which stores input stream offsets\r\n\t * for all position-dependent lexer actions.\r\n\t */\r\n\tpublic fixOffsetBeforeMatch(offset: number): LexerActionExecutor {\r\n\t\tlet updatedLexerActions: LexerAction[] | undefined;\r\n\t\tfor (let i = 0; i < this._lexerActions.length; i++) {\r\n\t\t\tif (this._lexerActions[i].isPositionDependent && !(this._lexerActions[i] instanceof LexerIndexedCustomAction)) {\r\n\t\t\t\tif (!updatedLexerActions) {\r\n\t\t\t\t\tupdatedLexerActions = this._lexerActions.slice(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset, this._lexerActions[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!updatedLexerActions) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn new LexerActionExecutor(updatedLexerActions);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lexer actions to be executed by this executor.\r\n\t * @returns The lexer actions to be executed by this executor.\r\n\t */\r\n\t@NotNull\r\n\tget lexerActions(): LexerAction[] {\r\n\t\treturn this._lexerActions;\r\n\t}\r\n\r\n\t/**\r\n\t * Execute the actions encapsulated by this executor within the context of a\r\n\t * particular {@link Lexer}.\r\n\t *\r\n\t * This method calls {@link IntStream#seek} to set the position of the\r\n\t * `input` {@link CharStream} prior to calling\r\n\t * {@link LexerAction#execute} on a position-dependent action. Before the\r\n\t * method returns, the input position will be restored to the same position\r\n\t * it was in when the method was invoked.\r\n\t *\r\n\t * @param lexer The lexer instance.\r\n\t * @param input The input stream which is the source for the current token.\r\n\t * When this method is called, the current {@link IntStream#index} for\r\n\t * `input` should be the start of the following token, i.e. 1\r\n\t * character past the end of the current token.\r\n\t * @param startIndex The token start index. This value may be passed to\r\n\t * {@link IntStream#seek} to set the `input` position to the beginning\r\n\t * of the token.\r\n\t */\r\n\tpublic execute(@NotNull lexer: Lexer, input: CharStream, startIndex: number): void {\r\n\t\tlet requiresSeek: boolean = false;\r\n\t\tlet stopIndex: number = input.index;\r\n\t\ttry {\r\n\t\t\tfor (let lexerAction of this._lexerActions) {\r\n\t\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\r\n\t\t\t\t\tlet offset: number = lexerAction.offset;\r\n\t\t\t\t\tinput.seek(startIndex + offset);\r\n\t\t\t\t\tlexerAction = lexerAction.action;\r\n\t\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\r\n\t\t\t\t} else if (lexerAction.isPositionDependent) {\r\n\t\t\t\t\tinput.seek(stopIndex);\r\n\t\t\t\t\trequiresSeek = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlexerAction.execute(lexer);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tif (requiresSeek) {\r\n\t\t\t\tinput.seek(stopIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\treturn this.cachedHashCode;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerActionExecutor)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.cachedHashCode === obj.cachedHashCode\r\n\t\t\t&& ArrayEqualityComparator.INSTANCE.equals(this._lexerActions, obj._lexerActions);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.5634388-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `channel` lexer action by calling\r\n * {@link Lexer#setChannel} with the assigned channel.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerChannelAction implements LexerAction {\r\n\tprivate readonly _channel: number;\r\n\r\n\t/**\r\n\t * Constructs a new `channel` action with the specified channel value.\r\n\t * @param channel The channel value to pass to {@link Lexer#setChannel}.\r\n\t */\r\n\tconstructor(channel: number) {\r\n\t\tthis._channel = channel;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the channel to use for the {@link Token} created by the lexer.\r\n\t *\r\n\t * @returns The channel to use for the {@link Token} created by the lexer.\r\n\t */\r\n\tget channel(): number {\r\n\t\treturn this._channel;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#CHANNEL}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.CHANNEL;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#setChannel} with the\r\n\t * value provided by {@link #getChannel}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.channel = this._channel;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\thash = MurmurHash.update(hash, this._channel);\r\n\t\treturn MurmurHash.finish(hash, 2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerChannelAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._channel === obj._channel;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn `channel(${this._channel})`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.6567992-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Executes a custom lexer action by calling {@link Recognizer#action} with the\r\n * rule and action indexes assigned to the custom action. The implementation of\r\n * a custom action is added to the generated code for the lexer in an override\r\n * of {@link Recognizer#action} when the grammar is compiled.\r\n *\r\n * This class may represent embedded actions created with the `{...}`\r\n * syntax in ANTLR 4, as well as actions created for lexer commands where the\r\n * command argument could not be evaluated when the grammar was compiled.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerCustomAction implements LexerAction {\r\n\tprivate readonly _ruleIndex: number;\r\n\tprivate readonly _actionIndex: number;\r\n\r\n\t/**\r\n\t * Constructs a custom lexer action with the specified rule and action\r\n\t * indexes.\r\n\t *\r\n\t * @param ruleIndex The rule index to use for calls to\r\n\t * {@link Recognizer#action}.\r\n\t * @param actionIndex The action index to use for calls to\r\n\t * {@link Recognizer#action}.\r\n\t */\r\n\tconstructor(ruleIndex: number, actionIndex: number) {\r\n\t\tthis._ruleIndex = ruleIndex;\r\n\t\tthis._actionIndex = actionIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rule index to use for calls to {@link Recognizer#action}.\r\n\t *\r\n\t * @returns The rule index for the custom action.\r\n\t */\r\n\tget ruleIndex(): number {\r\n\t\treturn this._ruleIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the action index to use for calls to {@link Recognizer#action}.\r\n\t *\r\n\t * @returns The action index for the custom action.\r\n\t */\r\n\tget actionIndex(): number {\r\n\t\treturn this._actionIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * @returns This method returns {@link LexerActionType#CUSTOM}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.CUSTOM;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets whether the lexer action is position-dependent. Position-dependent\r\n\t * actions may have different semantics depending on the {@link CharStream}\r\n\t * index at the time the action is executed.\r\n\t *\r\n\t * Custom actions are position-dependent since they may represent a\r\n\t * user-defined embedded action which makes calls to methods like\r\n\t * {@link Lexer#getText}.\r\n\t *\r\n\t * @returns This method returns `true`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * Custom actions are implemented by calling {@link Lexer#action} with the\r\n\t * appropriate rule and action indexes.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.action(undefined, this._ruleIndex, this._actionIndex);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\thash = MurmurHash.update(hash, this._ruleIndex);\r\n\t\thash = MurmurHash.update(hash, this._actionIndex);\r\n\t\treturn MurmurHash.finish(hash, 3);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerCustomAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._ruleIndex === obj._ruleIndex\r\n\t\t\t&& this._actionIndex === obj._actionIndex;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.7613038-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * This implementation of {@link LexerAction} is used for tracking input offsets\r\n * for position-dependent actions within a {@link LexerActionExecutor}.\r\n *\r\n * This action is not serialized as part of the ATN, and is only required for\r\n * position-dependent lexer actions which appear at a location other than the\r\n * end of a rule. For more information about DFA optimizations employed for\r\n * lexer actions, see {@link LexerActionExecutor#append} and\r\n * {@link LexerActionExecutor#fixOffsetBeforeMatch}.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerIndexedCustomAction implements LexerAction {\r\n\tprivate readonly _offset: number;\r\n\tprivate readonly _action: LexerAction;\r\n\r\n\t/**\r\n\t * Constructs a new indexed custom action by associating a character offset\r\n\t * with a {@link LexerAction}.\r\n\t *\r\n\t * Note: This class is only required for lexer actions for which\r\n\t * {@link LexerAction#isPositionDependent} returns `true`.\r\n\t *\r\n\t * @param offset The offset into the input {@link CharStream}, relative to\r\n\t * the token start index, at which the specified lexer action should be\r\n\t * executed.\r\n\t * @param action The lexer action to execute at a particular offset in the\r\n\t * input {@link CharStream}.\r\n\t */\r\n\tconstructor(offset: number, @NotNull action: LexerAction) {\r\n\t\tthis._offset = offset;\r\n\t\tthis._action = action;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the location in the input {@link CharStream} at which the lexer\r\n\t * action should be executed. The value is interpreted as an offset relative\r\n\t * to the token start index.\r\n\t *\r\n\t * @returns The location in the input {@link CharStream} at which the lexer\r\n\t * action should be executed.\r\n\t */\r\n\tget offset(): number {\r\n\t\treturn this._offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lexer action to execute.\r\n\t *\r\n\t * @returns A {@link LexerAction} object which executes the lexer action.\r\n\t */\r\n\t@NotNull\r\n\tget action(): LexerAction {\r\n\t\treturn this._action;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * @returns This method returns the result of calling {@link #getActionType}\r\n\t * on the {@link LexerAction} returned by {@link #getAction}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn this._action.actionType;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `true`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This method calls {@link #execute} on the result of {@link #getAction}\r\n\t * using the provided `lexer`.\r\n\t */\r\n\t@Override\r\n\tpublic execute(lexer: Lexer): void {\r\n\t\t// assume the input stream position was properly set by the calling code\r\n\t\tthis._action.execute(lexer);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this._offset);\r\n\t\thash = MurmurHash.update(hash, this._action);\r\n\t\treturn MurmurHash.finish(hash, 2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerIndexedCustomAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._offset === obj._offset\r\n\t\t\t&& this._action.equals(obj._action);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.8653427-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `mode` lexer action by calling {@link Lexer#mode} with\r\n * the assigned mode.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerModeAction implements LexerAction {\r\n\tprivate readonly _mode: number;\r\n\r\n\t/**\r\n\t * Constructs a new `mode` action with the specified mode value.\r\n\t * @param mode The mode value to pass to {@link Lexer#mode}.\r\n\t */\r\n\tconstructor(mode: number) {\r\n\t\tthis._mode = mode;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the lexer mode this action should transition the lexer to.\r\n\t *\r\n\t * @returns The lexer mode for this `mode` command.\r\n\t */\r\n\tget mode(): number {\r\n\t\treturn this._mode;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#MODE}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.MODE;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#mode} with the\r\n\t * value provided by {@link #getMode}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.mode(this._mode);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\thash = MurmurHash.update(hash, this._mode);\r\n\t\treturn MurmurHash.finish(hash, 2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerModeAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._mode === obj._mode;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn `mode(${this._mode})`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:29.9613221-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `more` lexer action by calling {@link Lexer#more}.\r\n *\r\n * The `more` command does not have any parameters, so this action is\r\n * implemented as a singleton instance exposed by {@link #INSTANCE}.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerMoreAction implements LexerAction {\r\n\t/**\r\n\t * Constructs the singleton instance of the lexer `more` command.\r\n\t */\r\n\tconstructor() {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#MORE}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.MORE;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#more}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.more();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\treturn MurmurHash.finish(hash, 1);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\treturn obj === this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"more\";\r\n\t}\r\n}\r\n\r\nexport namespace LexerMoreAction {\r\n\t/**\r\n\t * Provides a singleton instance of this parameterless lexer action.\r\n\t */\r\n\texport const INSTANCE: LexerMoreAction = new LexerMoreAction();\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.0449220-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `popMode` lexer action by calling {@link Lexer#popMode}.\r\n *\r\n * The `popMode` command does not have any parameters, so this action is\r\n * implemented as a singleton instance exposed by {@link #INSTANCE}.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerPopModeAction implements LexerAction {\r\n\t/**\r\n\t * Constructs the singleton instance of the lexer `popMode` command.\r\n\t */\r\n\tconstructor() {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#POP_MODE}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.POP_MODE;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#popMode}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.popMode();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\treturn MurmurHash.finish(hash, 1);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\treturn obj === this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"popMode\";\r\n\t}\r\n}\r\n\r\nexport namespace LexerPopModeAction {\r\n\t/**\r\n\t * Provides a singleton instance of this parameterless lexer action.\r\n\t */\r\n\texport const INSTANCE: LexerPopModeAction = new LexerPopModeAction();\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.1378801-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `pushMode` lexer action by calling\r\n * {@link Lexer#pushMode} with the assigned mode.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerPushModeAction implements LexerAction {\r\n\tprivate readonly _mode: number;\r\n\r\n\t/**\r\n\t * Constructs a new `pushMode` action with the specified mode value.\r\n\t * @param mode The mode value to pass to {@link Lexer#pushMode}.\r\n\t */\r\n\tconstructor(mode: number) {\r\n\t\tthis._mode = mode;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the lexer mode this action should transition the lexer to.\r\n\t *\r\n\t * @returns The lexer mode for this `pushMode` command.\r\n\t */\r\n\tget mode(): number {\r\n\t\treturn this._mode;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#PUSH_MODE}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.PUSH_MODE;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#pushMode} with the\r\n\t * value provided by {@link #getMode}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.pushMode(this._mode);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\thash = MurmurHash.update(hash, this._mode);\r\n\t\treturn MurmurHash.finish(hash, 2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerPushModeAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._mode === obj._mode;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn `pushMode(${this._mode})`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.2324460-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `skip` lexer action by calling {@link Lexer#skip}.\r\n *\r\n * The `skip` command does not have any parameters, so this action is\r\n * implemented as a singleton instance exposed by {@link #INSTANCE}.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerSkipAction implements LexerAction {\r\n\t/**\r\n\t * Constructs the singleton instance of the lexer `skip` command.\r\n\t */\r\n\tconstructor() {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#SKIP}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.SKIP;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by calling {@link Lexer#skip}.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.skip();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\treturn MurmurHash.finish(hash, 1);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\treturn obj === this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"skip\";\r\n\t}\r\n}\r\n\r\nexport namespace LexerSkipAction {\r\n\t/**\r\n\t * Provides a singleton instance of this parameterless lexer action.\r\n\t */\r\n\texport const INSTANCE: LexerSkipAction = new LexerSkipAction();\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.3204839-07:00\r\n\r\nimport { Lexer } from \"../Lexer\";\r\nimport { LexerAction } from \"./LexerAction\";\r\nimport { LexerActionType } from \"./LexerActionType\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\n\r\n/**\r\n * Implements the `type` lexer action by setting `Lexer.type`\r\n * with the assigned type.\r\n *\r\n * @author Sam Harwell\r\n * @since 4.2\r\n */\r\nexport class LexerTypeAction implements LexerAction {\r\n\tprivate readonly _type: number;\r\n\r\n\t/**\r\n\t * Constructs a new `type` action with the specified token type value.\r\n\t * @param type The type to assign to the token using `Lexer.type`.\r\n\t */\r\n\tconstructor(type: number) {\r\n\t\tthis._type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the type to assign to a token created by the lexer.\r\n\t * @returns The type to assign to a token created by the lexer.\r\n\t */\r\n\tget type(): number {\r\n\t\treturn this._type;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns {@link LexerActionType#TYPE}.\r\n\t */\r\n\t@Override\r\n\tget actionType(): LexerActionType {\r\n\t\treturn LexerActionType.TYPE;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t * @returns This method returns `false`.\r\n\t */\r\n\t@Override\r\n\tget isPositionDependent(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This action is implemented by setting `Lexer.type` with the\r\n\t * value provided by `type`.\r\n\t */\r\n\t@Override\r\n\tpublic execute(@NotNull lexer: Lexer): void {\r\n\t\tlexer.type = this._type;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\thash = MurmurHash.update(hash, this.actionType);\r\n\t\thash = MurmurHash.update(hash, this._type);\r\n\t\treturn MurmurHash.finish(hash, 2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof LexerTypeAction)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._type === obj._type;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn `type(${this._type})`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.6852565-07:00\r\n\r\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This class represents profiling event information for tracking the lookahead\r\n * depth required in order to make a prediction.\r\n *\r\n * @since 4.3\r\n */\r\nexport class LookaheadEventInfo extends DecisionEventInfo {\r\n\t/** The alternative chosen by adaptivePredict(), not necessarily\r\n\t *  the outermost alt shown for a rule; left-recursive rules have\r\n\t *  user-level alts that differ from the rewritten rule with a (...) block\r\n\t *  and a (..)* loop.\r\n\t */\r\n\tpublic predictedAlt: number;\r\n\r\n\t/**\r\n\t * Constructs a new instance of the {@link LookaheadEventInfo} class with\r\n\t * the specified detailed lookahead information.\r\n\t *\r\n\t * @param decision The decision number\r\n\t * @param state The final simulator state containing the necessary\r\n\t * information to determine the result of a prediction, or `undefined` if\r\n\t * the final state is not available\r\n\t * @param input The input token stream\r\n\t * @param startIndex The start index for the current prediction\r\n\t * @param stopIndex The index at which the prediction was finally made\r\n\t * @param fullCtx `true` if the current lookahead is part of an LL\r\n\t * prediction; otherwise, `false` if the current lookahead is part of\r\n\t * an SLL prediction\r\n\t */\r\n\tconstructor(\r\n\t\tdecision: number,\r\n\t\tstate: SimulatorState | undefined,\r\n\t\tpredictedAlt: number,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\tfullCtx: boolean) {\r\n\r\n\t\tsuper(decision, state, input, startIndex, stopIndex, fullCtx);\r\n\t\tthis.predictedAlt = predictedAlt;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.7737978-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** Mark the end of a * or + loop. */\r\nexport class LoopEndState extends ATNState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic loopBackState!: ATNState;\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.LOOP_END;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.8483617-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { Override, NotNull, Nullable } from \"../Decorators\";\r\nimport { SetTransition } from \"./SetTransition\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\nexport class NotSetTransition extends SetTransition {\r\n\tconstructor(@NotNull target: ATNState, @Nullable set: IntervalSet) {\r\n\t\tsuper(target, set);\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.NOT_SET;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn symbol >= minVocabSymbol\r\n\t\t\t&& symbol <= maxVocabSymbol\r\n\t\t\t&& !super.matches(symbol, minVocabSymbol, maxVocabSymbol);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"~\" + super.toString();\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:30.9444556-07:00\r\n\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class OrderedATNConfigSet extends ATNConfigSet {\r\n\r\n\tconstructor();\r\n\tconstructor(set: ATNConfigSet, readonly: boolean);\r\n\tconstructor(set?: ATNConfigSet, readonly?: boolean) {\r\n\t\tif (set != null && readonly != null) {\r\n\t\t\tsuper(set, readonly);\r\n\t\t} else {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic clone(readonly: boolean): ATNConfigSet {\r\n\t\tlet copy: OrderedATNConfigSet = new OrderedATNConfigSet(this, readonly);\r\n\t\tif (!readonly && this.isReadOnly) {\r\n\t\t\tcopy.addAll(this);\r\n\t\t}\r\n\r\n\t\treturn copy;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected getKey(e: ATNConfig): { state: number, alt: number } {\r\n\t\t// This is a specially crafted key to ensure configurations are only merged if they are equal\r\n\t\treturn { state: 0, alt: e.hashCode() };\r\n\t}\r\n\r\n\t@Override\r\n\tprotected canMerge(left: ATNConfig, leftKey: { state: number, alt: number }, right: ATNConfig): boolean {\r\n\t\treturn left.equals(right);\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:31.0349605-07:00\r\n\r\nimport { DecisionInfo } from \"./DecisionInfo\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { ProfilingATNSimulator } from \"./ProfilingATNSimulator\";\r\n\r\n/**\r\n * This class provides access to specific and aggregate statistics gathered\r\n * during profiling of a parser.\r\n *\r\n * @since 4.3\r\n */\r\nexport class ParseInfo {\r\n\tprotected atnSimulator: ProfilingATNSimulator;\r\n\r\n\tconstructor(@NotNull atnSimulator: ProfilingATNSimulator) {\r\n\t\tthis.atnSimulator = atnSimulator;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an array of {@link DecisionInfo} instances containing the profiling\r\n\t * information gathered for each decision in the ATN.\r\n\t *\r\n\t * @returns An array of {@link DecisionInfo} instances, indexed by decision\r\n\t * number.\r\n\t */\r\n\t@NotNull\r\n\tpublic getDecisionInfo(): DecisionInfo[] {\r\n\t\treturn this.atnSimulator.getDecisionInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the decision numbers for decisions that required one or more\r\n\t * full-context predictions during parsing. These are decisions for which\r\n\t * {@link DecisionInfo#LL_Fallback} is non-zero.\r\n\t *\r\n\t * @returns A list of decision numbers which required one or more\r\n\t * full-context predictions during parsing.\r\n\t */\r\n\t@NotNull\r\n\tpublic getLLDecisions(): number[] {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet LL: number[] = [];\r\n\t\tfor (let i = 0; i < decisions.length; i++) {\r\n\t\t\tlet fallBack: number = decisions[i].LL_Fallback;\r\n\t\t\tif (fallBack > 0) {\r\n\t\t\t\tLL.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn LL;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total time spent during prediction across all decisions made\r\n\t * during parsing. This value is the sum of\r\n\t * {@link DecisionInfo#timeInPrediction} for all decisions.\r\n\t */\r\n\tpublic getTotalTimeInPrediction(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet t: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tt += decision.timeInPrediction;\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of SLL lookahead operations across all decisions\r\n\t * made during parsing. This value is the sum of\r\n\t * {@link DecisionInfo#SLL_TotalLook} for all decisions.\r\n\t */\r\n\tpublic getTotalSLLLookaheadOps(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet k: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tk += decision.SLL_TotalLook;\r\n\t\t}\r\n\r\n\t\treturn k;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of LL lookahead operations across all decisions\r\n\t * made during parsing. This value is the sum of\r\n\t * {@link DecisionInfo#LL_TotalLook} for all decisions.\r\n\t */\r\n\tpublic getTotalLLLookaheadOps(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet k: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tk += decision.LL_TotalLook;\r\n\t\t}\r\n\r\n\t\treturn k;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of ATN lookahead operations for SLL prediction\r\n\t * across all decisions made during parsing.\r\n\t */\r\n\tpublic getTotalSLLATNLookaheadOps(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet k: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tk += decision.SLL_ATNTransitions;\r\n\t\t}\r\n\r\n\t\treturn k;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of ATN lookahead operations for LL prediction\r\n\t * across all decisions made during parsing.\r\n\t */\r\n\tpublic getTotalLLATNLookaheadOps(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet k: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tk += decision.LL_ATNTransitions;\r\n\t\t}\r\n\r\n\t\treturn k;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of ATN lookahead operations for SLL and LL\r\n\t * prediction across all decisions made during parsing.\r\n\t *\r\n\t * This value is the sum of {@link #getTotalSLLATNLookaheadOps} and\r\n\t * {@link #getTotalLLATNLookaheadOps}.\r\n\t */\r\n\tpublic getTotalATNLookaheadOps(): number {\r\n\t\tlet decisions: DecisionInfo[] = this.atnSimulator.getDecisionInfo();\r\n\t\tlet k: number = 0;\r\n\t\tfor (let decision of decisions) {\r\n\t\t\tk += decision.SLL_ATNTransitions;\r\n\t\t\tk += decision.LL_ATNTransitions;\r\n\t\t}\r\n\r\n\t\treturn k;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total number of DFA states stored in the DFA cache for all\r\n\t * decisions in the ATN.\r\n\t */\r\n\tpublic getDFASize(): number;\r\n\r\n\t/**\r\n\t * Gets the total number of DFA states stored in the DFA cache for a\r\n\t * particular decision.\r\n\t */\r\n\tpublic getDFASize(decision: number): number;\r\n\r\n\tpublic getDFASize(decision?: number): number {\r\n\t\tif (decision) {\r\n\t\t\tlet decisionToDFA: DFA = this.atnSimulator.atn.decisionToDFA[decision];\r\n\t\t\treturn decisionToDFA.states.size;\r\n\t\t} else {\r\n\t\t\tlet n: number = 0;\r\n\t\t\tlet decisionToDFA: DFA[] = this.atnSimulator.atn.decisionToDFA;\r\n\t\t\tfor (let i = 0; i < decisionToDFA.length; i++) {\r\n\t\t\t\tn += this.getDFASize(i);\r\n\t\t\t}\r\n\r\n\t\t\treturn n;\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:31.1989835-07:00\r\n\r\nimport { AcceptStateInfo } from \"../dfa/AcceptStateInfo\";\r\nimport { ActionTransition } from \"./ActionTransition\";\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { Arrays } from \"../misc/Arrays\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { ATNSimulator } from \"./ATNSimulator\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { AtomTransition } from \"./AtomTransition\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { ConflictInfo } from \"./ConflictInfo\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { DFAState } from \"../dfa/DFAState\";\r\nimport { EpsilonTransition } from \"./EpsilonTransition\";\r\nimport { IntegerList } from \"../misc/IntegerList\";\r\nimport { Interval } from \"../misc/Interval\";\r\nimport { IntStream } from \"../IntStream\";\r\nimport { NotNull, Nullable, Override } from \"../Decorators\";\r\nimport { NotSetTransition } from \"./NotSetTransition\";\r\nimport { NoViableAltException } from \"../NoViableAltException\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { Parser } from \"../Parser\";\r\nimport { ParserRuleContext } from \"../ParserRuleContext\";\r\nimport { PrecedencePredicateTransition } from \"./PrecedencePredicateTransition\";\r\nimport { PredicateTransition } from \"./PredicateTransition\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport { PredictionContextCache } from \"./PredictionContextCache\";\r\nimport { PredictionMode } from \"./PredictionMode\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\nimport { SetTransition } from \"./SetTransition\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { StarLoopEntryState } from \"./StarLoopEntryState\";\r\nimport { Token } from \"../Token\";\r\nimport { TokenStream } from \"../TokenStream\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\nimport { Vocabulary } from \"../Vocabulary\";\r\nimport { VocabularyImpl } from \"../VocabularyImpl\";\r\n\r\nimport * as assert from \"assert\";\r\n\r\nconst MAX_SHORT_VALUE = 0xFFFF;\r\nconst MIN_INTEGER_VALUE = -((1 << 31) >>> 0);\r\n\r\n/**\r\n * The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\r\n *\r\n * The basic complexity of the adaptive strategy makes it harder to understand.\r\n * We begin with ATN simulation to build paths in a DFA. Subsequent prediction\r\n * requests go through the DFA first. If they reach a state without an edge for\r\n * the current symbol, the algorithm fails over to the ATN simulation to\r\n * complete the DFA path for the current input (until it finds a conflict state\r\n * or uniquely predicting state).\r\n *\r\n * All of that is done without using the outer context because we want to create\r\n * a DFA that is not dependent upon the rule invocation stack when we do a\r\n * prediction. One DFA works in all contexts. We avoid using context not\r\n * necessarily because it's slower, although it can be, but because of the DFA\r\n * caching problem. The closure routine only considers the rule invocation stack\r\n * created during prediction beginning in the decision rule. For example, if\r\n * prediction occurs without invoking another rule's ATN, there are no context\r\n * stacks in the configurations. When lack of context leads to a conflict, we\r\n * don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\r\n * strategy (versus full LL(*)).\r\n *\r\n * When SLL yields a configuration set with conflict, we rewind the input and\r\n * retry the ATN simulation, this time using full outer context without adding\r\n * to the DFA. Configuration context stacks will be the full invocation stacks\r\n * from the start rule. If we get a conflict using full context, then we can\r\n * definitively say we have a true ambiguity for that input sequence. If we\r\n * don't get a conflict, it implies that the decision is sensitive to the outer\r\n * context. (It is not context-sensitive in the sense of context-sensitive\r\n * grammars.)\r\n *\r\n * The next time we reach this DFA state with an SLL conflict, through DFA\r\n * simulation, we will again retry the ATN simulation using full context mode.\r\n * This is slow because we can't save the results and have to \"interpret\" the\r\n * ATN each time we get that input.\r\n *\r\n * **CACHING FULL CONTEXT PREDICTIONS**\r\n *\r\n * We could cache results from full context to predicted alternative easily and\r\n * that saves a lot of time but doesn't work in presence of predicates. The set\r\n * of visible predicates from the ATN start state changes depending on the\r\n * context, because closure can fall off the end of a rule. I tried to cache\r\n * tuples (stack context, semantic context, predicted alt) but it was slower\r\n * than interpreting and much more complicated. Also required a huge amount of\r\n * memory. The goal is not to create the world's fastest parser anyway. I'd like\r\n * to keep this algorithm simple. By launching multiple threads, we can improve\r\n * the speed of parsing across a large number of files.\r\n *\r\n * There is no strict ordering between the amount of input used by SLL vs LL,\r\n * which makes it really hard to build a cache for full context. Let's say that\r\n * we have input A B C that leads to an SLL conflict with full context X. That\r\n * implies that using X we might only use A B but we could also use A B C D to\r\n * resolve conflict. Input A B C D could predict alternative 1 in one position\r\n * in the input and A B C E could predict alternative 2 in another position in\r\n * input. The conflicting SLL configurations could still be non-unique in the\r\n * full context prediction, which would lead us to requiring more input than the\r\n * original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\r\n * input\tused during the previous prediction. That amounts to a cache that maps\r\n * X to a specific DFA for that context.\r\n *\r\n * Something should be done for left-recursive expression predictions. They are\r\n * likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\r\n * with full LL thing Sam does.\r\n *\r\n * **AVOIDING FULL CONTEXT PREDICTION**\r\n *\r\n * We avoid doing full context retry when the outer context is empty, we did not\r\n * dip into the outer context by falling off the end of the decision state rule,\r\n * or when we force SLL mode.\r\n *\r\n * As an example of the not dip into outer context case, consider as super\r\n * constructor calls versus function calls. One grammar might look like\r\n * this:\r\n *\r\n * ```antlr\r\n * ctorBody\r\n *   : '{' superCall? stat* '}'\r\n *   ;\r\n * ```\r\n *\r\n * Or, you might see something like\r\n *\r\n * ```antlr\r\n * stat\r\n *   : superCall ';'\r\n *   | expression ';'\r\n *   | ...\r\n *   ;\r\n * ```\r\n *\r\n * In both cases I believe that no closure operations will dip into the outer\r\n * context. In the first case ctorBody in the worst case will stop at the '}'.\r\n * In the 2nd case it should stop at the ';'. Both cases should stay within the\r\n * entry rule and not dip into the outer context.\r\n *\r\n * **PREDICATES**\r\n *\r\n * Predicates are always evaluated if present in either SLL or LL both. SLL and\r\n * LL simulation deals with predicates differently. SLL collects predicates as\r\n * it performs closure operations like ANTLR v3 did. It delays predicate\r\n * evaluation until it reaches and accept state. This allows us to cache the SLL\r\n * ATN simulation whereas, if we had evaluated predicates on-the-fly during\r\n * closure, the DFA state configuration sets would be different and we couldn't\r\n * build up a suitable DFA.\r\n *\r\n * When building a DFA accept state during ATN simulation, we evaluate any\r\n * predicates and return the sole semantically valid alternative. If there is\r\n * more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\r\n * we throw an exception. Alternatives without predicates act like they have\r\n * true predicates. The simple way to think about it is to strip away all\r\n * alternatives with false predicates and choose the minimum alternative that\r\n * remains.\r\n *\r\n * When we start in the DFA and reach an accept state that's predicated, we test\r\n * those and return the minimum semantically viable alternative. If no\r\n * alternatives are viable, we throw an exception.\r\n *\r\n * During full LL ATN simulation, closure always evaluates predicates and\r\n * on-the-fly. This is crucial to reducing the configuration set size during\r\n * closure. It hits a landmine when parsing with the Java grammar, for example,\r\n * without this on-the-fly evaluation.\r\n *\r\n * **SHARING DFA**\r\n *\r\n * All instances of the same parser share the same decision DFAs through a\r\n * static field. Each instance gets its own ATN simulator but they share the\r\n * same {@link ATN#decisionToDFA} field. They also share a\r\n * {@link PredictionContextCache} object that makes sure that all\r\n * {@link PredictionContext} objects are shared among the DFA states. This makes\r\n * a big size difference.\r\n *\r\n * **THREAD SAFETY**\r\n *\r\n * The {@link ParserATNSimulator} locks on the {@link ATN#decisionToDFA} field when\r\n * it adds a new DFA object to that array. {@link #addDFAEdge}\r\n * locks on the DFA for the current decision when setting the\r\n * {@link DFAState#edges} field. {@link #addDFAState} locks on\r\n * the DFA for the current decision when looking up a DFA state to see if it\r\n * already exists. We must make sure that all requests to add DFA states that\r\n * are equivalent result in the same shared DFA object. This is because lots of\r\n * threads will be trying to update the DFA at once. The\r\n * {@link #addDFAState} method also locks inside the DFA lock\r\n * but this time on the shared context cache when it rebuilds the\r\n * configurations' {@link PredictionContext} objects using cached\r\n * subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\r\n * safe as long as we can guarantee that all threads referencing\r\n * `s.edge[t]` get the same physical target {@link DFAState}, or\r\n * `undefined`. Once into the DFA, the DFA simulation does not reference the\r\n * {@link DFA#states} map. It follows the {@link DFAState#edges} field to new\r\n * targets. The DFA simulator will either find {@link DFAState#edges} to be\r\n * `undefined`, to be non-`undefined` and `dfa.edges[t]` undefined, or\r\n * `dfa.edges[t]` to be non-undefined. The\r\n * {@link #addDFAEdge} method could be racing to set the field\r\n * but in either case the DFA simulator works; if `undefined`, and requests ATN\r\n * simulation. It could also race trying to get `dfa.edges[t]`, but either\r\n * way it will work because it's not doing a test and set operation.\r\n *\r\n * **Starting with SLL then failing to combined SLL/LL (Two-Stage\r\n * Parsing)**\r\n *\r\n * Sam pointed out that if SLL does not give a syntax error, then there is no\r\n * point in doing full LL, which is slower. We only have to try LL if we get a\r\n * syntax error. For maximum speed, Sam starts the parser set to pure SLL\r\n * mode with the {@link BailErrorStrategy}:\r\n *\r\n * ```\r\n * parser.interpreter.{@link #setPredictionMode setPredictionMode}`(`{@link PredictionMode#SLL}`)`;\r\n * parser.{@link Parser#setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\r\n * ```\r\n *\r\n * If it does not get a syntax error, then we're done. If it does get a syntax\r\n * error, we need to retry with the combined SLL/LL strategy.\r\n *\r\n * The reason this works is as follows. If there are no SLL conflicts, then the\r\n * grammar is SLL (at least for that input set). If there is an SLL conflict,\r\n * the full LL analysis must yield a set of viable alternatives which is a\r\n * subset of the alternatives reported by SLL. If the LL set is a singleton,\r\n * then the grammar is LL but not SLL. If the LL set is the same size as the SLL\r\n * set, the decision is SLL. If the LL set has size &gt; 1, then that decision\r\n * is truly ambiguous on the current input. If the LL set is smaller, then the\r\n * SLL conflict resolution might choose an alternative that the full LL would\r\n * rule out as a possibility based upon better context information. If that's\r\n * the case, then the SLL parse will definitely get an error because the full LL\r\n * analysis says it's not viable. If SLL conflict resolution chooses an\r\n * alternative within the LL set, them both SLL and LL would choose the same\r\n * alternative because they both choose the minimum of multiple conflicting\r\n * alternatives.\r\n *\r\n * Let's say we have a set of SLL conflicting alternatives `{1, 2, 3}` and\r\n * a smaller LL set called *s*. If *s* is `{2, 3}`, then SLL\r\n * parsing will get an error because SLL will pursue alternative 1. If\r\n * *s* is `{1, 2}` or `{1, 3}` then both SLL and LL will\r\n * choose the same alternative because alternative one is the minimum of either\r\n * set. If *s* is `{2}` or `{3}` then SLL will get a syntax\r\n * error. If *s* is `{1}` then SLL will succeed.\r\n *\r\n * Of course, if the input is invalid, then we will get an error for sure in\r\n * both SLL and LL parsing. Erroneous input will therefore require 2 passes over\r\n * the input.\r\n */\r\nexport class ParserATNSimulator extends ATNSimulator {\r\n\tpublic static debug: boolean = false;\r\n\tpublic static dfa_debug: boolean = false;\r\n\tpublic static retry_debug: boolean = false;\r\n\r\n\t@NotNull\r\n\tprivate predictionMode: PredictionMode = PredictionMode.LL;\r\n\tpublic force_global_context: boolean = false;\r\n\tpublic always_try_local_context: boolean = true;\r\n\r\n\t/**\r\n\t * Determines whether the DFA is used for full-context predictions. When\r\n\t * `true`, the DFA stores transition information for both full-context\r\n\t * and SLL parsing; otherwise, the DFA only stores SLL transition\r\n\t * information.\r\n\t *\r\n\t * For some grammars, enabling the full-context DFA can result in a\r\n\t * substantial performance improvement. However, this improvement typically\r\n\t * comes at the expense of memory used for storing the cached DFA states,\r\n\t * configuration sets, and prediction contexts.\r\n\t *\r\n\t * The default value is `false`.\r\n\t */\r\n\tpublic enable_global_context_dfa: boolean = false;\r\n\tpublic optimize_unique_closure: boolean = true;\r\n\tpublic optimize_ll1: boolean = true;\r\n\tpublic optimize_tail_calls: boolean = true;\r\n\tpublic tail_call_preserves_sll: boolean = true;\r\n\tpublic treat_sllk1_conflict_as_ambiguity: boolean = false;\r\n\r\n\tprotected _parser: Parser;\r\n\r\n\t/**\r\n\t * When `true`, ambiguous alternatives are reported when they are\r\n\t * encountered within {@link #execATN}. When `false`, these messages\r\n\t * are suppressed. The default is `false`.\r\n\t *\r\n\t * When messages about ambiguous alternatives are not required, setting this\r\n\t * to `false` enables additional internal optimizations which may lose\r\n\t * this information.\r\n\t */\r\n\tpublic reportAmbiguities: boolean = false;\r\n\r\n\t/** By default we do full context-sensitive LL(*) parsing not\r\n\t *  Strong LL(*) parsing. If we fail with Strong LL(*) we\r\n\t *  try full LL(*). That means we rewind and use context information\r\n\t *  when closure operations fall off the end of the rule that\r\n\t *  holds the decision were evaluating.\r\n\t */\r\n\tprotected userWantsCtxSensitive: boolean = true;\r\n\r\n\tprivate dfa?: DFA;\r\n\r\n\tconstructor(@NotNull atn: ATN, parser: Parser) {\r\n\t\tsuper(atn);\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getPredictionMode(): PredictionMode {\r\n\t\treturn this.predictionMode;\r\n\t}\r\n\r\n\tpublic setPredictionMode(@NotNull predictionMode: PredictionMode): void {\r\n\t\tthis.predictionMode = predictionMode;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic reset(): void {\r\n\t\t// intentionally empty\r\n\t}\r\n\r\n\tpublic adaptivePredict(/*@NotNull*/ input: TokenStream, decision: number, outerContext: ParserRuleContext | undefined): number;\r\n\tpublic adaptivePredict(/*@NotNull*/ input: TokenStream, decision: number, outerContext: ParserRuleContext | undefined, useContext: boolean): number;\r\n\tpublic adaptivePredict(\r\n\t\t@NotNull input: TokenStream,\r\n\t\tdecision: number,\r\n\t\touterContext: ParserRuleContext | undefined,\r\n\t\tuseContext?: boolean): number {\r\n\t\tif (useContext === undefined) {\r\n\t\t\tuseContext = false;\r\n\t\t}\r\n\r\n\t\tlet dfa: DFA = this.atn.decisionToDFA[decision];\r\n\t\tassert(dfa != null);\r\n\t\tif (this.optimize_ll1 && !dfa.isPrecedenceDfa && !dfa.isEmpty) {\r\n\t\t\tlet ll_1: number = input.LA(1);\r\n\t\t\tif (ll_1 >= 0 && ll_1 <= 0xFFFF) {\r\n\t\t\t\tlet key: number = ((decision << 16) >>> 0) + ll_1;\r\n\t\t\t\tlet alt: number | undefined = this.atn.LL1Table.get(key);\r\n\t\t\t\tif (alt != null) {\r\n\t\t\t\t\treturn alt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dfa = dfa;\r\n\r\n\t\tif (this.force_global_context) {\r\n\t\t\tuseContext = true;\r\n\t\t}\r\n\t\telse if (!this.always_try_local_context) {\r\n\t\t\tuseContext = useContext || dfa.isContextSensitive;\r\n\t\t}\r\n\r\n\t\tthis.userWantsCtxSensitive = useContext || (this.predictionMode !== PredictionMode.SLL && outerContext != null && !this.atn.decisionToState[decision].sll);\r\n\t\tif (outerContext == null) {\r\n\t\t\touterContext = ParserRuleContext.emptyContext();\r\n\t\t}\r\n\r\n\t\tlet state: SimulatorState | undefined;\r\n\t\tif (!dfa.isEmpty) {\r\n\t\t\tstate = this.getStartState(dfa, input, outerContext, useContext);\r\n\t\t}\r\n\r\n\t\tif (state == null) {\r\n\t\t\tif (outerContext == null) {\r\n\t\t\t\touterContext = ParserRuleContext.emptyContext();\r\n\t\t\t}\r\n\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\tconsole.log(\"ATN decision \" + dfa.decision +\r\n\t\t\t\t\t\" exec LA(1)==\" + this.getLookaheadName(input) +\r\n\t\t\t\t\t\", outerContext=\" + outerContext.toString(this._parser));\r\n\t\t\t}\r\n\r\n\t\t\tstate = this.computeStartState(dfa, outerContext, useContext);\r\n\t\t}\r\n\r\n\t\tlet m: number = input.mark();\r\n\t\tlet index: number = input.index;\r\n\t\ttry {\r\n\t\t\tlet alt: number = this.execDFA(dfa, input, index, state);\r\n\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\tconsole.log(\"DFA after predictATN: \" + dfa.toString(this._parser.vocabulary, this._parser.ruleNames));\r\n\t\t\t}\r\n\t\t\treturn alt;\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.dfa = undefined;\r\n\t\t\tinput.seek(index);\r\n\t\t\tinput.release(m);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getStartState(\r\n\t\t@NotNull dfa: DFA,\r\n\t\t@NotNull input: TokenStream,\r\n\t\t@NotNull outerContext: ParserRuleContext,\r\n\t\tuseContext: boolean): SimulatorState | undefined {\r\n\r\n\t\tif (!useContext) {\r\n\t\t\tif (dfa.isPrecedenceDfa) {\r\n\t\t\t\t// the start state for a precedence DFA depends on the current\r\n\t\t\t\t// parser precedence, and is provided by a DFA method.\r\n\t\t\t\tlet state: DFAState | undefined = dfa.getPrecedenceStartState(this._parser.precedence, false);\r\n\t\t\t\tif (state == null) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new SimulatorState(outerContext, state, false, outerContext);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (dfa.s0 == null) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new SimulatorState(outerContext, dfa.s0, false, outerContext);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.enable_global_context_dfa) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet remainingContext: ParserRuleContext | undefined = outerContext;\r\n\t\tassert(outerContext != null);\r\n\t\tlet s0: DFAState | undefined;\r\n\t\tif (dfa.isPrecedenceDfa) {\r\n\t\t\ts0 = dfa.getPrecedenceStartState(this._parser.precedence, true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts0 = dfa.s0full;\r\n\t\t}\r\n\r\n\t\twhile (remainingContext != null && s0 != null && s0.isContextSensitive) {\r\n\t\t\tremainingContext = this.skipTailCalls(remainingContext);\r\n\t\t\ts0 = s0.getContextTarget(this.getReturnState(remainingContext));\r\n\t\t\tif (remainingContext.isEmpty) {\r\n\t\t\t\tassert(s0 == null || !s0.isContextSensitive);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tremainingContext = remainingContext.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (s0 == null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn new SimulatorState(outerContext, s0, useContext, remainingContext);\r\n\t}\r\n\r\n\tprotected execDFA(\r\n\t\t@NotNull dfa: DFA,\r\n\t\t@NotNull input: TokenStream, startIndex: number,\r\n\t\t@NotNull state: SimulatorState): number {\r\n\t\tlet outerContext: ParserRuleContext = state.outerContext;\r\n\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\tconsole.log(\"DFA decision \" + dfa.decision +\r\n\t\t\t\t\" exec LA(1)==\" + this.getLookaheadName(input) +\r\n\t\t\t\t\", outerContext=\" + outerContext.toString(this._parser));\r\n\t\t}\r\n\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\tconsole.log(dfa.toString(this._parser.vocabulary, this._parser.ruleNames));\r\n\t\t}\r\n\t\tlet s: DFAState = state.s0;\r\n\r\n\t\tlet t: number = input.LA(1);\r\n\t\tlet remainingOuterContext: ParserRuleContext | undefined = state.remainingOuterContext;\r\n\r\n\t\twhile (true) {\r\n\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\tconsole.log(\"DFA state \" + s.stateNumber + \" LA(1)==\" + this.getLookaheadName(input));\r\n\t\t\t}\r\n\t\t\tif (state.useContext) {\r\n\t\t\t\twhile (s.isContextSymbol(t)) {\r\n\t\t\t\t\tlet next: DFAState | undefined;\r\n\t\t\t\t\tif (remainingOuterContext != null) {\r\n\t\t\t\t\t\tremainingOuterContext = this.skipTailCalls(remainingOuterContext);\r\n\t\t\t\t\t\tnext = s.getContextTarget(this.getReturnState(remainingOuterContext));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (next == null) {\r\n\t\t\t\t\t\t// fail over to ATN\r\n\t\t\t\t\t\tlet initialState: SimulatorState = new SimulatorState(state.outerContext, s, state.useContext, remainingOuterContext);\r\n\t\t\t\t\t\treturn this.execATN(dfa, input, startIndex, initialState);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tassert(remainingOuterContext != null);\r\n\t\t\t\t\tremainingOuterContext = remainingOuterContext.parent;\r\n\t\t\t\t\ts = next;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isAcceptState(s, state.useContext)) {\r\n\t\t\t\tif (s.predicates != null) {\r\n\t\t\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\t\tconsole.log(\"accept \" + s);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\t\tconsole.log(\"accept; predict \" + s.prediction + \" in state \" + s.stateNumber);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// keep going unless we're at EOF or state only has one alt number\r\n\t\t\t\t// mentioned in configs; check if something else could match\r\n\t\t\t\t// TODO: don't we always stop? only lexer would keep going\r\n\t\t\t\t// TODO: v3 dfa don't do this.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// t is not updated if one of these states is reached\r\n\t\t\tassert(!this.isAcceptState(s, state.useContext));\r\n\r\n\t\t\t// if no edge, pop over to ATN interpreter, update DFA and return\r\n\t\t\tlet target: DFAState | undefined = this.getExistingTargetState(s, t);\r\n\t\t\tif (target == null) {\r\n\t\t\t\tif (ParserATNSimulator.dfa_debug && t >= 0) {\r\n\t\t\t\t\tconsole.log(\"no edge for \" + this._parser.vocabulary.getDisplayName(t));\r\n\t\t\t\t}\r\n\t\t\t\tlet alt: number;\r\n\t\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\tlet interval: Interval = Interval.of(startIndex, this._parser.inputStream.index);\r\n\t\t\t\t\tconsole.log(\"ATN exec upon \" +\r\n\t\t\t\t\t\tthis._parser.inputStream.getText(interval) +\r\n\t\t\t\t\t\t\" at DFA state \" + s.stateNumber);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet initialState: SimulatorState = new SimulatorState(outerContext, s, state.useContext, remainingOuterContext);\r\n\t\t\t\talt = this.execATN(dfa, input, startIndex, initialState);\r\n\t\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\tconsole.log(\"back from DFA update, alt=\" + alt + \", dfa=\\n\" + dfa.toString(this._parser.vocabulary, this._parser.ruleNames));\r\n\t\t\t\t\t//dump(dfa);\r\n\t\t\t\t}\r\n\t\t\t\t// action already executed\r\n\t\t\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\tconsole.log(\"DFA decision \" + dfa.decision +\r\n\t\t\t\t\t\t\" predicts \" + alt);\r\n\t\t\t\t}\r\n\t\t\t\treturn alt; // we've updated DFA, exec'd action, and have our deepest answer\r\n\t\t\t}\r\n\t\t\telse if (target === ATNSimulator.ERROR) {\r\n\t\t\t\tlet errorState: SimulatorState = new SimulatorState(outerContext, s, state.useContext, remainingOuterContext);\r\n\t\t\t\treturn this.handleNoViableAlt(input, startIndex, errorState);\r\n\t\t\t}\r\n\t\t\ts = target;\r\n\t\t\tif (!this.isAcceptState(s, state.useContext) && t !== IntStream.EOF) {\r\n\t\t\t\tinput.consume();\r\n\t\t\t\tt = input.LA(1);\r\n\t\t\t}\r\n\t\t}\r\n//\t\tif ( acceptState==null ) {\r\n//\t\t\tif ( debug ) System.out.println(\"!!! no viable alt in dfa\");\r\n//\t\t\treturn -1;\r\n//\t\t}\r\n\r\n\t\tif (!state.useContext && s.configs.conflictInfo != null) {\r\n\t\t\tif (dfa.atnStartState instanceof DecisionState) {\r\n\t\t\t\tif (!this.userWantsCtxSensitive ||\r\n\t\t\t\t\t(!s.configs.dipsIntoOuterContext && s.configs.isExactConflict) ||\r\n\t\t\t\t\t(this.treat_sllk1_conflict_as_ambiguity && input.index === startIndex)) {\r\n\t\t\t\t\t// we don't report the ambiguity again\r\n\t\t\t\t\t//if ( !this.acceptState.configset.hasSemanticContext ) {\r\n\t\t\t\t\t// \tthis.reportAmbiguity(dfa, acceptState, startIndex, input.index, acceptState.configset.conflictingAlts, acceptState.configset);\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tassert(!state.useContext);\r\n\r\n\t\t\t\t\t// Before attempting full context prediction, check to see if there are\r\n\t\t\t\t\t// disambiguating or validating predicates to evaluate which allow an\r\n\t\t\t\t\t// immediate decision\r\n\t\t\t\t\tlet conflictingAlts: BitSet | undefined;\r\n\t\t\t\t\tlet predicates: DFAState.PredPrediction[] | undefined = s.predicates;\r\n\t\t\t\t\tif (predicates != null) {\r\n\t\t\t\t\t\tlet conflictIndex: number = input.index;\r\n\t\t\t\t\t\tif (conflictIndex !== startIndex) {\r\n\t\t\t\t\t\t\tinput.seek(startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconflictingAlts = this.evalSemanticContext(predicates, outerContext, true);\r\n\t\t\t\t\t\tif (conflictingAlts.cardinality() === 1) {\r\n\t\t\t\t\t\t\treturn conflictingAlts.nextSetBit(0);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (conflictIndex !== startIndex) {\r\n\t\t\t\t\t\t\t// restore the index so reporting the fallback to full\r\n\t\t\t\t\t\t\t// context occurs with the index at the correct spot\r\n\t\t\t\t\t\t\tinput.seek(conflictIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.reportAmbiguities) {\r\n\t\t\t\t\t\tlet conflictState: SimulatorState = new SimulatorState(outerContext, s, state.useContext, remainingOuterContext);\r\n\t\t\t\t\t\tthis.reportAttemptingFullContext(dfa, conflictingAlts, conflictState, startIndex, input.index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tinput.seek(startIndex);\r\n\t\t\t\t\treturn this.adaptivePredict(input, dfa.decision, outerContext, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Before jumping to prediction, check to see if there are\r\n\t\t// disambiguating or validating predicates to evaluate\r\n\t\tlet predicates: DFAState.PredPrediction[] | undefined = s.predicates;\r\n\t\tif (predicates != null) {\r\n\t\t\tlet stopIndex: number = input.index;\r\n\t\t\tif (startIndex !== stopIndex) {\r\n\t\t\t\tinput.seek(startIndex);\r\n\t\t\t}\r\n\r\n\t\t\tlet alts: BitSet = this.evalSemanticContext(predicates, outerContext, this.reportAmbiguities && this.predictionMode === PredictionMode.LL_EXACT_AMBIG_DETECTION);\r\n\t\t\tswitch (alts.cardinality()) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthrow this.noViableAlt(input, outerContext, s.configs, startIndex);\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\treturn alts.nextSetBit(0);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// report ambiguity after predicate evaluation to make sure the correct\r\n\t\t\t\t// set of ambig alts is reported.\r\n\t\t\t\tif (startIndex !== stopIndex) {\r\n\t\t\t\t\tinput.seek(stopIndex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.reportAmbiguity(dfa, s, startIndex, stopIndex, s.configs.isExactConflict, alts, s.configs);\r\n\t\t\t\treturn alts.nextSetBit(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.dfa_debug) {\r\n\t\t\tconsole.log(\"DFA decision \" + dfa.decision +\r\n\t\t\t\t\" predicts \" + s.prediction);\r\n\t\t}\r\n\t\treturn s.prediction;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if a particular DFA state should be treated as an accept state\r\n\t * for the current prediction mode. In addition to the `useContext`\r\n\t * parameter, the {@link #getPredictionMode()} method provides the\r\n\t * prediction mode controlling the prediction algorithm as a whole.\r\n\t *\r\n\t * The default implementation simply returns the value of\r\n\t * `DFAState.isAcceptState` except for conflict states when\r\n\t * `useContext` is `true` and {@link #getPredictionMode()} is\r\n\t * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}. In that case, only\r\n\t * conflict states where {@link ATNConfigSet#isExactConflict} is\r\n\t * `true` are considered accept states.\r\n\t *\r\n\t * @param state The DFA state to check.\r\n\t * @param useContext `true` if the prediction algorithm is currently\r\n\t * considering the full parser context; otherwise, `false` if the\r\n\t * algorithm is currently performing a local context prediction.\r\n\t *\r\n\t * @returns `true` if the specified `state` is an accept state;\r\n\t * otherwise, `false`.\r\n\t */\r\n\tprotected isAcceptState(state: DFAState, useContext: boolean): boolean {\r\n\t\tif (!state.isAcceptState) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (state.configs.conflictingAlts == null) {\r\n\t\t\t// unambiguous\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// More picky when we need exact conflicts\r\n\t\tif (useContext && this.predictionMode === PredictionMode.LL_EXACT_AMBIG_DETECTION) {\r\n\t\t\treturn state.configs.isExactConflict;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/** Performs ATN simulation to compute a predicted alternative based\r\n\t *  upon the remaining input, but also updates the DFA cache to avoid\r\n\t *  having to traverse the ATN again for the same input sequence.\r\n\t *\r\n\t * There are some key conditions we're looking for after computing a new\r\n\t * set of ATN configs (proposed DFA state):\r\n\t *\r\n\t * * if the set is empty, there is no viable alternative for current symbol\r\n\t * * does the state uniquely predict an alternative?\r\n\t * * does the state have a conflict that would prevent us from\r\n\t *   putting it on the work list?\r\n\t * * if in non-greedy decision is there a config at a rule stop state?\r\n\t *\r\n\t * We also have some key operations to do:\r\n\t *\r\n\t * * add an edge from previous DFA state to potentially new DFA state, D,\r\n\t *   upon current symbol but only if adding to work list, which means in all\r\n\t *   cases except no viable alternative (and possibly non-greedy decisions?)\r\n\t * * collecting predicates and adding semantic context to DFA accept states\r\n\t * * adding rule context to context-sensitive DFA accept states\r\n\t * * consuming an input symbol\r\n\t * * reporting a conflict\r\n\t * * reporting an ambiguity\r\n\t * * reporting a context sensitivity\r\n\t * * reporting insufficient predicates\r\n\t *\r\n\t * We should isolate those operations, which are side-effecting, to the\r\n\t * main work loop. We can isolate lots of code into other functions, but\r\n\t * they should be side effect free. They can return package that\r\n\t * indicates whether we should report something, whether we need to add a\r\n\t * DFA edge, whether we need to augment accept state with semantic\r\n\t * context or rule invocation context. Actually, it seems like we always\r\n\t * add predicates if they exist, so that can simply be done in the main\r\n\t * loop for any accept state creation or modification request.\r\n\t *\r\n\t * cover these cases:\r\n\t *   dead end\r\n\t *   single alt\r\n\t *   single alt + preds\r\n\t *   conflict\r\n\t *   conflict + preds\r\n\t *\r\n\t * TODO: greedy + those\r\n\t */\r\n\tprotected execATN(\r\n\t\t@NotNull dfa: DFA,\r\n\t\t@NotNull input: TokenStream, startIndex: number,\r\n\t\t@NotNull initialState: SimulatorState): number {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"execATN decision \" + dfa.decision + \" exec LA(1)==\" + this.getLookaheadName(input));\r\n\t\t}\r\n\r\n\t\tlet outerContext: ParserRuleContext = initialState.outerContext;\r\n\t\tlet useContext: boolean = initialState.useContext;\r\n\r\n\t\tlet t: number = input.LA(1);\r\n\r\n\t\tlet previous: SimulatorState = initialState;\r\n\r\n\t\tlet contextCache: PredictionContextCache = new PredictionContextCache();\r\n\t\twhile (true) { // while more work\r\n\t\t\tlet nextState: SimulatorState | undefined = this.computeReachSet(dfa, previous, t, contextCache);\r\n\t\t\tif (nextState == null) {\r\n\t\t\t\tthis.setDFAEdge(previous.s0, input.LA(1), ATNSimulator.ERROR);\r\n\t\t\t\treturn this.handleNoViableAlt(input, startIndex, previous);\r\n\t\t\t}\r\n\r\n\t\t\tlet D: DFAState = nextState.s0;\r\n\r\n\t\t\t// predicted alt => accept state\r\n\t\t\tassert(D.isAcceptState || D.prediction === ATN.INVALID_ALT_NUMBER);\r\n\t\t\t// conflicted => accept state\r\n\t\t\tassert(D.isAcceptState || D.configs.conflictInfo == null);\r\n\r\n\t\t\tif (this.isAcceptState(D, useContext)) {\r\n\t\t\t\tlet conflictingAlts: BitSet | undefined = D.configs.conflictingAlts;\r\n\t\t\t\tlet predictedAlt: number = conflictingAlts == null ? D.prediction : ATN.INVALID_ALT_NUMBER;\r\n\t\t\t\tif (predictedAlt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\t\tif (this.optimize_ll1\r\n\t\t\t\t\t\t&& input.index === startIndex\r\n\t\t\t\t\t\t&& !dfa.isPrecedenceDfa\r\n\t\t\t\t\t\t&& nextState.outerContext === nextState.remainingOuterContext\r\n\t\t\t\t\t\t&& dfa.decision >= 0\r\n\t\t\t\t\t\t&& !D.configs.hasSemanticContext) {\r\n\t\t\t\t\t\tif (t >= 0 && t <= MAX_SHORT_VALUE) {\r\n\t\t\t\t\t\t\tlet key: number = ((dfa.decision << 16) >>> 0) + t;\r\n\t\t\t\t\t\t\tthis.atn.LL1Table.set(key, predictedAlt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (useContext && this.always_try_local_context) {\r\n\t\t\t\t\t\tthis.reportContextSensitivity(dfa, predictedAlt, nextState, startIndex, input.index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpredictedAlt = D.prediction;\r\n//\t\t\t\tint k = input.index - startIndex + 1; // how much input we used\r\n//\t\t\t\tSystem.out.println(\"used k=\"+k);\r\n\t\t\t\tlet attemptFullContext: boolean = conflictingAlts != null && this.userWantsCtxSensitive;\r\n\t\t\t\tif (attemptFullContext) {\r\n\t\t\t\t\t// Only exact conflicts are known to be ambiguous when local\r\n\t\t\t\t\t// prediction does not step out of the decision rule.\r\n\t\t\t\t\tattemptFullContext = !useContext\r\n\t\t\t\t\t\t&& (D.configs.dipsIntoOuterContext || !D.configs.isExactConflict)\r\n\t\t\t\t\t\t&& (!this.treat_sllk1_conflict_as_ambiguity || input.index !== startIndex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (D.configs.hasSemanticContext) {\r\n\t\t\t\t\tlet predPredictions: DFAState.PredPrediction[] | undefined = D.predicates;\r\n\t\t\t\t\tif (predPredictions != null) {\r\n\t\t\t\t\t\tlet conflictIndex: number = input.index;\r\n\t\t\t\t\t\tif (conflictIndex !== startIndex) {\r\n\t\t\t\t\t\t\tinput.seek(startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// use complete evaluation here if we'll want to retry with full context if still ambiguous\r\n\t\t\t\t\t\tconflictingAlts = this.evalSemanticContext(predPredictions, outerContext, attemptFullContext || this.reportAmbiguities);\r\n\t\t\t\t\t\tswitch (conflictingAlts.cardinality()) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tthrow this.noViableAlt(input, outerContext, D.configs, startIndex);\r\n\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\treturn conflictingAlts.nextSetBit(0);\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (conflictIndex !== startIndex) {\r\n\t\t\t\t\t\t\t// restore the index so reporting the fallback to full\r\n\t\t\t\t\t\t\t// context occurs with the index at the correct spot\r\n\t\t\t\t\t\t\tinput.seek(conflictIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!attemptFullContext) {\r\n\t\t\t\t\tif (conflictingAlts != null) {\r\n\t\t\t\t\t\tif (this.reportAmbiguities && conflictingAlts.cardinality() > 1) {\r\n\t\t\t\t\t\t\tthis.reportAmbiguity(dfa, D, startIndex, input.index, D.configs.isExactConflict, conflictingAlts, D.configs);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpredictedAlt = conflictingAlts.nextSetBit(0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn predictedAlt;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tassert(!useContext);\r\n\t\t\t\t\tassert(this.isAcceptState(D, false));\r\n\r\n\t\t\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\t\t\tconsole.log(\"RETRY with outerContext=\" + outerContext);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet fullContextState: SimulatorState = this.computeStartState(dfa, outerContext, true);\r\n\t\t\t\t\tif (this.reportAmbiguities) {\r\n\t\t\t\t\t\tthis.reportAttemptingFullContext(dfa, conflictingAlts, nextState, startIndex, input.index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tinput.seek(startIndex);\r\n\t\t\t\t\treturn this.execATN(dfa, input, startIndex, fullContextState);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprevious = nextState;\r\n\r\n\t\t\tif (t !== IntStream.EOF) {\r\n\t\t\t\tinput.consume();\r\n\t\t\t\tt = input.LA(1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method is used to improve the localization of error messages by\r\n\t * choosing an alternative rather than throwing a\r\n\t * {@link NoViableAltException} in particular prediction scenarios where the\r\n\t * {@link #ERROR} state was reached during ATN simulation.\r\n\t *\r\n\t * The default implementation of this method uses the following\r\n\t * algorithm to identify an ATN configuration which successfully parsed the\r\n\t * decision entry rule. Choosing such an alternative ensures that the\r\n\t * {@link ParserRuleContext} returned by the calling rule will be complete\r\n\t * and valid, and the syntax error will be reported later at a more\r\n\t * localized location.\r\n\t *\r\n\t * * If no configuration in `configs` reached the end of the\r\n\t *   decision rule, return {@link ATN#INVALID_ALT_NUMBER}.\r\n\t * * If all configurations in `configs` which reached the end of the\r\n\t *   decision rule predict the same alternative, return that alternative.\r\n\t * * If the configurations in `configs` which reached the end of the\r\n\t *   decision rule predict multiple alternatives (call this *S*),\r\n\t *   choose an alternative in the following order.\r\n\t *\r\n\t *     1. Filter the configurations in `configs` to only those\r\n\t *        configurations which remain viable after evaluating semantic predicates.\r\n\t *        If the set of these filtered configurations which also reached the end of\r\n\t *        the decision rule is not empty, return the minimum alternative\r\n\t *        represented in this set.\r\n\t *     1. Otherwise, choose the minimum alternative in *S*.\r\n\t *\r\n\t * In some scenarios, the algorithm described above could predict an\r\n\t * alternative which will result in a {@link FailedPredicateException} in\r\n\t * parser. Specifically, this could occur if the *only* configuration\r\n\t * capable of successfully parsing to the end of the decision rule is\r\n\t * blocked by a semantic predicate. By choosing this alternative within\r\n\t * {@link #adaptivePredict} instead of throwing a\r\n\t * {@link NoViableAltException}, the resulting\r\n\t * {@link FailedPredicateException} in the parser will identify the specific\r\n\t * predicate which is preventing the parser from successfully parsing the\r\n\t * decision rule, which helps developers identify and correct logic errors\r\n\t * in semantic predicates.\r\n\t *\r\n\t * @param input The input {@link TokenStream}\r\n\t * @param startIndex The start index for the current prediction, which is\r\n\t * the input index where any semantic context in `configs` should be\r\n\t * evaluated\r\n\t * @param previous The ATN simulation state immediately before the\r\n\t * {@link #ERROR} state was reached\r\n\t *\r\n\t * @returns The value to return from {@link #adaptivePredict}, or\r\n\t * {@link ATN#INVALID_ALT_NUMBER} if a suitable alternative was not\r\n\t * identified and {@link #adaptivePredict} should report an error instead.\r\n\t */\r\n\tprotected handleNoViableAlt(@NotNull input: TokenStream, startIndex: number, @NotNull previous: SimulatorState): number {\r\n\t\tif (previous.s0 != null) {\r\n\t\t\tlet alts: BitSet = new BitSet();\r\n\t\t\tlet maxAlt: number = 0;\r\n\t\t\tfor (let config of previous.s0.configs) {\r\n\t\t\t\tif (config.reachesIntoOuterContext || config.state instanceof RuleStopState) {\r\n\t\t\t\t\talts.set(config.alt);\r\n\t\t\t\t\tmaxAlt = Math.max(maxAlt, config.alt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tswitch (alts.cardinality()) {\r\n\t\t\tcase 0:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\treturn alts.nextSetBit(0);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif (!previous.s0.configs.hasSemanticContext) {\r\n\t\t\t\t\t// configs doesn't contain any predicates, so the predicate\r\n\t\t\t\t\t// filtering code below would be pointless\r\n\t\t\t\t\treturn alts.nextSetBit(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Try to find a configuration set that not only dipped into the outer\r\n\t\t\t\t * context, but also isn't eliminated by a predicate.\r\n\t\t\t\t */\r\n\t\t\t\tlet filteredConfigs: ATNConfigSet = new ATNConfigSet();\r\n\t\t\t\tfor (let config of previous.s0.configs) {\r\n\t\t\t\t\tif (config.reachesIntoOuterContext || config.state instanceof RuleStopState) {\r\n\t\t\t\t\t\tfilteredConfigs.add(config);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* The following code blocks are adapted from predicateDFAState with\r\n\t\t\t\t * the following key changes.\r\n\t\t\t\t *\r\n\t\t\t\t *  1. The code operates on an ATNConfigSet rather than a DFAState.\r\n\t\t\t\t *  2. Predicates are collected for all alternatives represented in\r\n\t\t\t\t *     filteredConfigs, rather than restricting the evaluation to\r\n\t\t\t\t *     conflicting and/or unique configurations.\r\n\t\t\t\t */\r\n\t\t\t\tlet altToPred: SemanticContext[] | undefined = this.getPredsForAmbigAlts(alts, filteredConfigs, maxAlt);\r\n\t\t\t\tif (altToPred != null) {\r\n\t\t\t\t\tlet predicates: DFAState.PredPrediction[] | undefined = this.getPredicatePredictions(alts, altToPred);\r\n\t\t\t\t\tif (predicates != null) {\r\n\t\t\t\t\t\tlet stopIndex: number = input.index;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tinput.seek(startIndex);\r\n\t\t\t\t\t\t\tlet filteredAlts: BitSet = this.evalSemanticContext(predicates, previous.outerContext, false);\r\n\t\t\t\t\t\t\tif (!filteredAlts.isEmpty) {\r\n\t\t\t\t\t\t\t\treturn filteredAlts.nextSetBit(0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinally {\r\n\t\t\t\t\t\t\tinput.seek(stopIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn alts.nextSetBit(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow this.noViableAlt(input, previous.outerContext, previous.s0.configs, startIndex);\r\n\t}\r\n\r\n\tprotected computeReachSet(dfa: DFA, previous: SimulatorState, t: number, contextCache: PredictionContextCache): SimulatorState | undefined {\r\n\t\tlet useContext: boolean = previous.useContext;\r\n\t\tlet remainingGlobalContext: ParserRuleContext | undefined = previous.remainingOuterContext;\r\n\r\n\t\tlet s: DFAState = previous.s0;\r\n\t\tif (useContext) {\r\n\t\t\twhile (s.isContextSymbol(t)) {\r\n\t\t\t\tlet next: DFAState | undefined;\r\n\t\t\t\tif (remainingGlobalContext != null) {\r\n\t\t\t\t\tremainingGlobalContext = this.skipTailCalls(remainingGlobalContext);\r\n\t\t\t\t\tnext = s.getContextTarget(this.getReturnState(remainingGlobalContext));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (next == null) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassert(remainingGlobalContext != null);\r\n\t\t\t\tremainingGlobalContext = remainingGlobalContext.parent;\r\n\t\t\t\ts = next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tassert(!this.isAcceptState(s, useContext));\r\n\t\tif (this.isAcceptState(s, useContext)) {\r\n\t\t\treturn new SimulatorState(previous.outerContext, s, useContext, remainingGlobalContext);\r\n\t\t}\r\n\r\n\t\tlet s0: DFAState = s;\r\n\r\n\t\tlet target: DFAState | undefined = this.getExistingTargetState(s0, t);\r\n\t\tif (target == null) {\r\n\t\t\tlet result: [DFAState, ParserRuleContext | undefined] = this.computeTargetState(dfa, s0, remainingGlobalContext, t, useContext, contextCache);\r\n\t\t\ttarget = result[0];\r\n\t\t\tremainingGlobalContext = result[1];\r\n\t\t}\r\n\r\n\t\tif (target === ATNSimulator.ERROR) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tassert(!useContext || !target.configs.dipsIntoOuterContext);\r\n\t\treturn new SimulatorState(previous.outerContext, target, useContext, remainingGlobalContext);\r\n\t}\r\n\r\n\t/**\r\n\t * Get an existing target state for an edge in the DFA. If the target state\r\n\t * for the edge has not yet been computed or is otherwise not available,\r\n\t * this method returns `undefined`.\r\n\t *\r\n\t * @param s The current DFA state\r\n\t * @param t The next input symbol\r\n\t * @returns The existing target DFA state for the given input symbol\r\n\t * `t`, or `undefined` if the target state for this edge is not\r\n\t * already cached\r\n\t */\r\n\tprotected getExistingTargetState(@NotNull s: DFAState, t: number): DFAState | undefined {\r\n\t\treturn s.getTarget(t);\r\n\t}\r\n\r\n\t/**\r\n\t * Compute a target state for an edge in the DFA, and attempt to add the\r\n\t * computed state and corresponding edge to the DFA.\r\n\t *\r\n\t * @param dfa\r\n\t * @param s The current DFA state\r\n\t * @param remainingGlobalContext\r\n\t * @param t The next input symbol\r\n\t * @param useContext\r\n\t * @param contextCache\r\n\t *\r\n\t * @returns The computed target DFA state for the given input symbol\r\n\t * `t`. If `t` does not lead to a valid DFA state, this method\r\n\t * returns {@link #ERROR}.\r\n\t */\r\n\t@NotNull\r\n\tprotected computeTargetState(@NotNull dfa: DFA, @NotNull s: DFAState, remainingGlobalContext: ParserRuleContext | undefined, t: number, useContext: boolean, contextCache: PredictionContextCache): [DFAState, ParserRuleContext | undefined] {\r\n\t\tlet closureConfigs: ATNConfig[] = s.configs.toArray();\r\n\t\tlet contextElements: IntegerList | undefined;\r\n\t\tlet reach: ATNConfigSet = new ATNConfigSet();\r\n\t\tlet stepIntoGlobal: boolean;\r\n\t\tdo {\r\n\t\t\tlet hasMoreContext: boolean = !useContext || remainingGlobalContext != null;\r\n\t\t\tif (!hasMoreContext) {\r\n\t\t\t\treach.isOutermostConfigSet = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet reachIntermediate: ATNConfigSet = new ATNConfigSet();\r\n\r\n\t\t\t/* Configurations already in a rule stop state indicate reaching the end\r\n\t\t\t * of the decision rule (local context) or end of the start rule (full\r\n\t\t\t * context). Once reached, these configurations are never updated by a\r\n\t\t\t * closure operation, so they are handled separately for the performance\r\n\t\t\t * advantage of having a smaller intermediate set when calling closure.\r\n\t\t\t *\r\n\t\t\t * For full-context reach operations, separate handling is required to\r\n\t\t\t * ensure that the alternative matching the longest overall sequence is\r\n\t\t\t * chosen when multiple such configurations can match the input.\r\n\t\t\t */\r\n\t\t\tlet skippedStopStates: ATNConfig[] | undefined;\r\n\r\n\t\t\tfor (let c of closureConfigs) {\r\n\t\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\t\tconsole.log(\"testing \" + this.getTokenName(t) + \" at \" + c.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.state instanceof RuleStopState) {\r\n\t\t\t\t\tassert(c.context.isEmpty);\r\n\t\t\t\t\tif (useContext && !c.reachesIntoOuterContext || t === IntStream.EOF) {\r\n\t\t\t\t\t\tif (skippedStopStates == null) {\r\n\t\t\t\t\t\t\tskippedStopStates = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tskippedStopStates.push(c);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet n: number = c.state.numberOfOptimizedTransitions;\r\n\t\t\t\tfor (let ti = 0; ti < n; ti++) {               // for each optimized transition\r\n\t\t\t\t\tlet trans: Transition = c.state.getOptimizedTransition(ti);\r\n\t\t\t\t\tlet target: ATNState | undefined = this.getReachableTarget(c, trans, t);\r\n\t\t\t\t\tif (target != null) {\r\n\t\t\t\t\t\treachIntermediate.add(c.transform(target, false), contextCache);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/* This block optimizes the reach operation for intermediate sets which\r\n\t\t\t * trivially indicate a termination state for the overall\r\n\t\t\t * adaptivePredict operation.\r\n\t\t\t *\r\n\t\t\t * The conditions assume that intermediate\r\n\t\t\t * contains all configurations relevant to the reach set, but this\r\n\t\t\t * condition is not true when one or more configurations have been\r\n\t\t\t * withheld in skippedStopStates, or when the current symbol is EOF.\r\n\t\t\t */\r\n\t\t\tif (this.optimize_unique_closure && skippedStopStates == null && t !== Token.EOF && reachIntermediate.uniqueAlt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\treachIntermediate.isOutermostConfigSet = reach.isOutermostConfigSet;\r\n\t\t\t\treach = reachIntermediate;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t/* If the reach set could not be trivially determined, perform a closure\r\n\t\t\t * operation on the intermediate set to compute its initial value.\r\n\t\t\t */\r\n\t\t\tlet collectPredicates: boolean = false;\r\n\t\t\tlet treatEofAsEpsilon: boolean = t === Token.EOF;\r\n\t\t\tthis.closure(reachIntermediate, reach, collectPredicates, hasMoreContext, contextCache, treatEofAsEpsilon);\r\n\t\t\tstepIntoGlobal = reach.dipsIntoOuterContext;\r\n\r\n\t\t\tif (t === IntStream.EOF) {\r\n\t\t\t\t/* After consuming EOF no additional input is possible, so we are\r\n\t\t\t\t * only interested in configurations which reached the end of the\r\n\t\t\t\t * decision rule (local context) or end of the start rule (full\r\n\t\t\t\t * context). Update reach to contain only these configurations. This\r\n\t\t\t\t * handles both explicit EOF transitions in the grammar and implicit\r\n\t\t\t\t * EOF transitions following the end of the decision or start rule.\r\n\t\t\t\t *\r\n\t\t\t\t * This is handled before the configurations in skippedStopStates,\r\n\t\t\t\t * because any configurations potentially added from that list are\r\n\t\t\t\t * already guaranteed to meet this condition whether or not it's\r\n\t\t\t\t * required.\r\n\t\t\t\t */\r\n\t\t\t\treach = this.removeAllConfigsNotInRuleStopState(reach, contextCache);\r\n\t\t\t}\r\n\r\n\t\t\t/* If skippedStopStates is not undefined, then it contains at least one\r\n\t\t\t * configuration. For full-context reach operations, these\r\n\t\t\t * configurations reached the end of the start rule, in which case we\r\n\t\t\t * only add them back to reach if no configuration during the current\r\n\t\t\t * closure operation reached such a state. This ensures adaptivePredict\r\n\t\t\t * chooses an alternative matching the longest overall sequence when\r\n\t\t\t * multiple alternatives are viable.\r\n\t\t\t */\r\n\t\t\tif (skippedStopStates != null && (!useContext || !PredictionMode.hasConfigInRuleStopState(reach))) {\r\n\t\t\t\tassert(skippedStopStates.length > 0);\r\n\t\t\t\tfor (let c of skippedStopStates) {\r\n\t\t\t\t\treach.add(c, contextCache);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (useContext && stepIntoGlobal) {\r\n\t\t\t\treach.clear();\r\n\r\n\t\t\t\t// We know remainingGlobalContext is not undefined at this point (why?)\r\n\t\t\t\tremainingGlobalContext = remainingGlobalContext as ParserRuleContext;\r\n\r\n\t\t\t\tremainingGlobalContext = this.skipTailCalls(remainingGlobalContext);\r\n\t\t\t\tlet nextContextElement: number = this.getReturnState(remainingGlobalContext);\r\n\t\t\t\tif (contextElements == null) {\r\n\t\t\t\t\tcontextElements = new IntegerList();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (remainingGlobalContext.isEmpty) {\r\n\t\t\t\t\tremainingGlobalContext = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tremainingGlobalContext = remainingGlobalContext.parent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontextElements.add(nextContextElement);\r\n\t\t\t\tif (nextContextElement !== PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\t\tfor (let i = 0; i < closureConfigs.length; i++) {\r\n\t\t\t\t\t\tclosureConfigs[i] = closureConfigs[i].appendContext(nextContextElement, contextCache);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (useContext && stepIntoGlobal);\r\n\r\n\t\tif (reach.isEmpty) {\r\n\t\t\tthis.setDFAEdge(s, t, ATNSimulator.ERROR);\r\n\t\t\treturn [ATNSimulator.ERROR, remainingGlobalContext];\r\n\t\t}\r\n\r\n\t\tlet result: DFAState = this.addDFAEdge(dfa, s, t, contextElements, reach, contextCache);\r\n\t\treturn [result, remainingGlobalContext];\r\n\t}\r\n\r\n\t/**\r\n\t * Return a configuration set containing only the configurations from\r\n\t * `configs` which are in a {@link RuleStopState}. If all\r\n\t * configurations in `configs` are already in a rule stop state, this\r\n\t * method simply returns `configs`.\r\n\t *\r\n\t * @param configs the configuration set to update\r\n\t * @param contextCache the {@link PredictionContext} cache\r\n\t *\r\n\t * @returns `configs` if all configurations in `configs` are in a\r\n\t * rule stop state, otherwise return a new configuration set containing only\r\n\t * the configurations from `configs` which are in a rule stop state\r\n\t */\r\n\t@NotNull\r\n\tprotected removeAllConfigsNotInRuleStopState(@NotNull configs: ATNConfigSet, contextCache: PredictionContextCache): ATNConfigSet {\r\n\t\tif (PredictionMode.allConfigsInRuleStopStates(configs)) {\r\n\t\t\treturn configs;\r\n\t\t}\r\n\r\n\t\tlet result: ATNConfigSet = new ATNConfigSet();\r\n\t\tfor (let config of configs) {\r\n\t\t\tif (!(config.state instanceof RuleStopState)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tresult.add(config, contextCache);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected computeStartState(\r\n\t\tdfa: DFA,\r\n\t\tglobalContext: ParserRuleContext,\r\n\t\tuseContext: boolean): SimulatorState {\r\n\t\tlet s0: DFAState | undefined =\r\n\t\t\tdfa.isPrecedenceDfa ? dfa.getPrecedenceStartState(this._parser.precedence, useContext) :\r\n\t\t\t\tuseContext ? dfa.s0full :\r\n\t\t\t\t\tdfa.s0;\r\n\r\n\t\tif (s0 != null) {\r\n\t\t\tif (!useContext) {\r\n\t\t\t\treturn new SimulatorState(globalContext, s0, useContext, globalContext);\r\n\t\t\t}\r\n\r\n\t\t\ts0.setContextSensitive(this.atn);\r\n\t\t}\r\n\r\n\t\tlet decision: number = dfa.decision;\r\n\t\t// @NotNull\r\n\t\tlet p: ATNState = dfa.atnStartState;\r\n\r\n\t\tlet previousContext: number = 0;\r\n\t\tlet remainingGlobalContext: ParserRuleContext | undefined = globalContext;\r\n\t\tlet initialContext: PredictionContext = useContext ? PredictionContext.EMPTY_FULL : PredictionContext.EMPTY_LOCAL; // always at least the implicit call to start rule\r\n\t\tlet contextCache: PredictionContextCache = new PredictionContextCache();\r\n\t\tif (useContext) {\r\n\t\t\tif (!this.enable_global_context_dfa) {\r\n\t\t\t\twhile (remainingGlobalContext != null) {\r\n\t\t\t\t\tif (remainingGlobalContext.isEmpty) {\r\n\t\t\t\t\t\tpreviousContext = PredictionContext.EMPTY_FULL_STATE_KEY;\r\n\t\t\t\t\t\tremainingGlobalContext = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpreviousContext = this.getReturnState(remainingGlobalContext);\r\n\t\t\t\t\t\tinitialContext = initialContext.appendSingleContext(previousContext, contextCache);\r\n\t\t\t\t\t\tremainingGlobalContext = remainingGlobalContext.parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (s0 != null && s0.isContextSensitive && remainingGlobalContext != null) {\r\n\t\t\t\tlet next: DFAState | undefined;\r\n\t\t\t\tremainingGlobalContext = this.skipTailCalls(remainingGlobalContext);\r\n\t\t\t\tif (remainingGlobalContext.isEmpty) {\r\n\t\t\t\t\tnext = s0.getContextTarget(PredictionContext.EMPTY_FULL_STATE_KEY);\r\n\t\t\t\t\tpreviousContext = PredictionContext.EMPTY_FULL_STATE_KEY;\r\n\t\t\t\t\tremainingGlobalContext = undefined;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousContext = this.getReturnState(remainingGlobalContext);\r\n\t\t\t\t\tnext = s0.getContextTarget(previousContext);\r\n\t\t\t\t\tinitialContext = initialContext.appendSingleContext(previousContext, contextCache);\r\n\t\t\t\t\tremainingGlobalContext = remainingGlobalContext.parent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (next == null) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ts0 = next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (s0 != null && !s0.isContextSensitive) {\r\n\t\t\treturn new SimulatorState(globalContext, s0, useContext, remainingGlobalContext);\r\n\t\t}\r\n\r\n\t\tlet configs: ATNConfigSet = new ATNConfigSet();\r\n\t\twhile (true) {\r\n\t\t\tlet reachIntermediate: ATNConfigSet = new ATNConfigSet();\r\n\t\t\tlet n: number = p.numberOfTransitions;\r\n\t\t\tfor (let ti = 0; ti < n; ti++) {\r\n\t\t\t\t// for each transition\r\n\t\t\t\tlet target: ATNState = p.transition(ti).target;\r\n\t\t\t\treachIntermediate.add(ATNConfig.create(target, ti + 1, initialContext));\r\n\t\t\t}\r\n\r\n\t\t\tlet hasMoreContext: boolean = remainingGlobalContext != null;\r\n\t\t\tif (!hasMoreContext) {\r\n\t\t\t\tconfigs.isOutermostConfigSet = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet collectPredicates: boolean = true;\r\n\t\t\tthis.closure(reachIntermediate, configs, collectPredicates, hasMoreContext, contextCache, false);\r\n\t\t\tlet stepIntoGlobal: boolean = configs.dipsIntoOuterContext;\r\n\r\n\t\t\tlet next: DFAState;\r\n\t\t\tif (useContext && !this.enable_global_context_dfa) {\r\n\t\t\t\ts0 = this.addDFAState(dfa, configs, contextCache);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if (s0 == null) {\r\n\t\t\t\tif (!dfa.isPrecedenceDfa) {\r\n\t\t\t\t\tnext = this.addDFAState(dfa, configs, contextCache);\r\n\t\t\t\t\tif (useContext) {\r\n\t\t\t\t\t\tif (!dfa.s0full) {\r\n\t\t\t\t\t\t\tdfa.s0full = next;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnext = dfa.s0full;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!dfa.s0) {\r\n\t\t\t\t\t\t\tdfa.s0 = next;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnext = dfa.s0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t/* If this is a precedence DFA, we use applyPrecedenceFilter\r\n\t\t\t\t\t * to convert the computed start state to a precedence start\r\n\t\t\t\t\t * state. We then use DFA.setPrecedenceStartState to set the\r\n\t\t\t\t\t * appropriate start state for the precedence level rather\r\n\t\t\t\t\t * than simply setting DFA.s0.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconfigs = this.applyPrecedenceFilter(configs, globalContext, contextCache);\r\n\t\t\t\t\tnext = this.addDFAState(dfa, configs, contextCache);\r\n\t\t\t\t\tdfa.setPrecedenceStartState(this._parser.precedence, useContext, next);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (dfa.isPrecedenceDfa) {\r\n\t\t\t\t\tconfigs = this.applyPrecedenceFilter(configs, globalContext, contextCache);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnext = this.addDFAState(dfa, configs, contextCache);\r\n\t\t\t\ts0.setContextTarget(previousContext, next);\r\n\t\t\t}\r\n\r\n\t\t\ts0 = next;\r\n\r\n\t\t\tif (!useContext || !stepIntoGlobal) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: make sure it distinguishes empty stack states\r\n\t\t\tnext.setContextSensitive(this.atn);\r\n\r\n\t\t\t// We know remainingGlobalContext is not undefined at this point (why?)\r\n\t\t\tremainingGlobalContext = remainingGlobalContext as ParserRuleContext;\r\n\r\n\t\t\tconfigs.clear();\r\n\t\t\tremainingGlobalContext = this.skipTailCalls(remainingGlobalContext);\r\n\t\t\tlet nextContextElement: number = this.getReturnState(remainingGlobalContext);\r\n\r\n\t\t\tif (remainingGlobalContext.isEmpty) {\r\n\t\t\t\tremainingGlobalContext = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tremainingGlobalContext = remainingGlobalContext.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif (nextContextElement !== PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\tinitialContext = initialContext.appendSingleContext(nextContextElement, contextCache);\r\n\t\t\t}\r\n\r\n\t\t\tpreviousContext = nextContextElement;\r\n\t\t}\r\n\r\n\t\treturn new SimulatorState(globalContext, s0, useContext, remainingGlobalContext);\r\n\t}\r\n\r\n\t/**\r\n\t * This method transforms the start state computed by\r\n\t * {@link #computeStartState} to the special start state used by a\r\n\t * precedence DFA for a particular precedence value. The transformation\r\n\t * process applies the following changes to the start state's configuration\r\n\t * set.\r\n\t *\r\n\t * 1. Evaluate the precedence predicates for each configuration using\r\n\t *    {@link SemanticContext#evalPrecedence}.\r\n\t * 1. When {@link ATNConfig#isPrecedenceFilterSuppressed} is `false`,\r\n\t *    remove all configurations which predict an alternative greater than 1,\r\n\t *    for which another configuration that predicts alternative 1 is in the\r\n\t *    same ATN state with the same prediction context. This transformation is\r\n\t *    valid for the following reasons:\r\n\t *\r\n\t *     * The closure block cannot contain any epsilon transitions which bypass\r\n\t *       the body of the closure, so all states reachable via alternative 1 are\r\n\t *       part of the precedence alternatives of the transformed left-recursive\r\n\t *       rule.\r\n\t *     * The \"primary\" portion of a left recursive rule cannot contain an\r\n\t *       epsilon transition, so the only way an alternative other than 1 can exist\r\n\t *       in a state that is also reachable via alternative 1 is by nesting calls\r\n\t *       to the left-recursive rule, with the outer calls not being at the\r\n\t *       preferred precedence level. The\r\n\t *       {@link ATNConfig#isPrecedenceFilterSuppressed} property marks ATN\r\n\t *       configurations which do not meet this condition, and therefore are not\r\n\t *       eligible for elimination during the filtering process.\r\n\t *\r\n\t * The prediction context must be considered by this filter to address\r\n\t * situations like the following.\r\n\t *\r\n\t * ```antlr\r\n\t * grammar TA;\r\n\t * prog: statement* EOF;\r\n\t * statement: letterA | statement letterA 'b' ;\r\n\t * letterA: 'a';\r\n\t * ```\r\n\t *\r\n\t * If the above grammar, the ATN state immediately before the token\r\n\t * reference `'a'` in `letterA` is reachable from the left edge\r\n\t * of both the primary and closure blocks of the left-recursive rule\r\n\t * `statement`. The prediction context associated with each of these\r\n\t * configurations distinguishes between them, and prevents the alternative\r\n\t * which stepped out to `prog` (and then back in to `statement`\r\n\t * from being eliminated by the filter.\r\n\t *\r\n\t * @param configs The configuration set computed by\r\n\t * {@link #computeStartState} as the start state for the DFA.\r\n\t * @returns The transformed configuration set representing the start state\r\n\t * for a precedence DFA at a particular precedence level (determined by\r\n\t * calling {@link Parser#getPrecedence}).\r\n\t */\r\n\t@NotNull\r\n\tprotected applyPrecedenceFilter(@NotNull configs: ATNConfigSet, globalContext: ParserRuleContext, contextCache: PredictionContextCache): ATNConfigSet {\r\n\t\tlet statesFromAlt1: Map<number, PredictionContext> = new Map<number, PredictionContext>();\r\n\t\tlet configSet: ATNConfigSet = new ATNConfigSet();\r\n\t\tfor (let config of configs) {\r\n\t\t\t// handle alt 1 first\r\n\t\t\tif (config.alt !== 1) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet updatedContext: SemanticContext | undefined = config.semanticContext.evalPrecedence(this._parser, globalContext);\r\n\t\t\tif (updatedContext == null) {\r\n\t\t\t\t// the configuration was eliminated\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tstatesFromAlt1.set(config.state.stateNumber, config.context);\r\n\t\t\tif (updatedContext !== config.semanticContext) {\r\n\t\t\t\tconfigSet.add(config.transform(config.state, false, updatedContext), contextCache);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconfigSet.add(config, contextCache);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let config of configs) {\r\n\t\t\tif (config.alt === 1) {\r\n\t\t\t\t// already handled\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (!config.isPrecedenceFilterSuppressed) {\r\n\t\t\t\t/* In the future, this elimination step could be updated to also\r\n\t\t\t\t * filter the prediction context for alternatives predicting alt>1\r\n\t\t\t\t * (basically a graph subtraction algorithm).\r\n\t\t\t\t */\r\n\t\t\t\tlet context: PredictionContext | undefined = statesFromAlt1.get(config.state.stateNumber);\r\n\t\t\t\tif (context != null && context.equals(config.context)) {\r\n\t\t\t\t\t// eliminated\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconfigSet.add(config, contextCache);\r\n\t\t}\r\n\r\n\t\treturn configSet;\r\n\t}\r\n\r\n\tprotected getReachableTarget(@NotNull source: ATNConfig, @NotNull trans: Transition, ttype: number): ATNState | undefined {\r\n\t\tif (trans.matches(ttype, 0, this.atn.maxTokenType)) {\r\n\t\t\treturn trans.target;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/** collect and set D's semantic context */\r\n\tprotected predicateDFAState(\r\n\t\tD: DFAState,\r\n\t\tconfigs: ATNConfigSet,\r\n\t\tnalts: number): DFAState.PredPrediction[] | undefined {\r\n\t\tlet conflictingAlts: BitSet | undefined = this.getConflictingAltsFromConfigSet(configs);\r\n\t\tif (!conflictingAlts) {\r\n\t\t\tthrow new Error(\"This unhandled scenario is intended to be unreachable, but I'm currently not sure of why we know that's the case.\");\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"predicateDFAState \" + D);\r\n\t\t}\r\n\t\tlet altToPred: SemanticContext[] | undefined = this.getPredsForAmbigAlts(conflictingAlts, configs, nalts);\r\n\t\t// altToPred[uniqueAlt] is now our validating predicate (if any)\r\n\t\tlet predPredictions: DFAState.PredPrediction[] | undefined;\r\n\t\tif (altToPred != null) {\r\n\t\t\t// we have a validating predicate; test it\r\n\t\t\t// Update DFA so reach becomes accept state with predicate\r\n\t\t\tpredPredictions = this.getPredicatePredictions(conflictingAlts, altToPred);\r\n\t\t\tD.predicates = predPredictions;\r\n\t\t}\r\n\t\treturn predPredictions;\r\n\t}\r\n\r\n\tprotected getPredsForAmbigAlts(\r\n\t\t@NotNull ambigAlts: BitSet,\r\n\t\t@NotNull configs: ATNConfigSet,\r\n\t\tnalts: number): SemanticContext[] | undefined {\r\n\t\t// REACH=[1|1|[]|0:0, 1|2|[]|0:1]\r\n\r\n\t\t/* altToPred starts as an array of all undefined contexts. The entry at index i\r\n\t\t * corresponds to alternative i. altToPred[i] may have one of three values:\r\n\t\t *   1. undefined: no ATNConfig c is found such that c.alt===i\r\n\t\t *   2. SemanticContext.NONE: At least one ATNConfig c exists such that\r\n\t\t *      c.alt===i and c.semanticContext===SemanticContext.NONE. In other words,\r\n\t\t *      alt i has at least one unpredicated config.\r\n\t\t *   3. Non-NONE Semantic Context: There exists at least one, and for all\r\n\t\t *      ATNConfig c such that c.alt===i, c.semanticContext!==SemanticContext.NONE.\r\n\t\t *\r\n\t\t * From this, it is clear that NONE||anything==NONE.\r\n\t\t */\r\n\t\tlet altToPred: Array<SemanticContext | undefined> | undefined = new Array<SemanticContext>(nalts + 1);\r\n\t\tlet n: number = altToPred.length;\r\n\t\tfor (let c of configs) {\r\n\t\t\tif (ambigAlts.get(c.alt)) {\r\n\t\t\t\taltToPred[c.alt] = SemanticContext.or(altToPred[c.alt], c.semanticContext);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet nPredAlts: number = 0;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tif (altToPred[i] == null) {\r\n\t\t\t\taltToPred[i] = SemanticContext.NONE;\r\n\t\t\t}\r\n\t\t\telse if (altToPred[i] !== SemanticContext.NONE) {\r\n\t\t\t\tnPredAlts++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// At this point we know `altToPred` doesn't contain any undefined entries\r\n\t\tlet result: SemanticContext[] | undefined = altToPred as SemanticContext[];\r\n\r\n\t\t// nonambig alts are undefined in result\r\n\t\tif (nPredAlts === 0) {\r\n\t\t\tresult = undefined;\r\n\t\t}\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"getPredsForAmbigAlts result \" + (result ? Arrays.toString(result) : \"undefined\"));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getPredicatePredictions(ambigAlts: BitSet | undefined, altToPred: SemanticContext[]): DFAState.PredPrediction[] | undefined {\r\n\t\tlet pairs: DFAState.PredPrediction[] = [];\r\n\t\tlet containsPredicate: boolean = false;\r\n\t\tfor (let i = 1; i < altToPred.length; i++) {\r\n\t\t\tlet pred: SemanticContext = altToPred[i];\r\n\r\n\t\t\t// unpredicated is indicated by SemanticContext.NONE\r\n\t\t\tassert(pred != null);\r\n\r\n\t\t\t// find first unpredicated but ambig alternative, if any.\r\n\t\t\t// Only ambiguous alternatives will have SemanticContext.NONE.\r\n\t\t\t// Any unambig alts or ambig naked alts after first ambig naked are ignored\r\n\t\t\t// (undefined, i) means alt i is the default prediction\r\n\t\t\t// if no (undefined, i), then no default prediction.\r\n\t\t\tif (ambigAlts != null && ambigAlts.get(i) && pred === SemanticContext.NONE) {\r\n\t\t\t\tpairs.push(new DFAState.PredPrediction(pred, i));\r\n\t\t\t}\r\n\t\t\telse if (pred !== SemanticContext.NONE) {\r\n\t\t\t\tcontainsPredicate = true;\r\n\t\t\t\tpairs.push(new DFAState.PredPrediction(pred, i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!containsPredicate) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n//\t\tSystem.out.println(Arrays.toString(altToPred)+\"->\"+pairs);\r\n\t\treturn pairs;\r\n\t}\r\n\r\n\t/** Look through a list of predicate/alt pairs, returning alts for the\r\n\t *  pairs that win. An `undefined` predicate indicates an alt containing an\r\n\t *  unpredicated config which behaves as \"always true.\"\r\n\t */\r\n\tprotected evalSemanticContext(\r\n\t\t@NotNull predPredictions: DFAState.PredPrediction[],\r\n\t\touterContext: ParserRuleContext,\r\n\t\tcomplete: boolean): BitSet {\r\n\t\tlet predictions: BitSet = new BitSet();\r\n\t\tfor (let pair of predPredictions) {\r\n\t\t\tif (pair.pred === SemanticContext.NONE) {\r\n\t\t\t\tpredictions.set(pair.alt);\r\n\t\t\t\tif (!complete) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet evaluatedResult: boolean = this.evalSemanticContextImpl(pair.pred, outerContext, pair.alt);\r\n\t\t\tif (ParserATNSimulator.debug || ParserATNSimulator.dfa_debug) {\r\n\t\t\t\tconsole.log(\"eval pred \" + pair + \"=\" + evaluatedResult);\r\n\t\t\t}\r\n\r\n\t\t\tif (evaluatedResult) {\r\n\t\t\t\tif (ParserATNSimulator.debug || ParserATNSimulator.dfa_debug) {\r\n\t\t\t\t\tconsole.log(\"PREDICT \" + pair.alt);\r\n\t\t\t\t}\r\n\t\t\t\tpredictions.set(pair.alt);\r\n\t\t\t\tif (!complete) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn predictions;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluate a semantic context within a specific parser context.\r\n\t *\r\n\t * This method might not be called for every semantic context evaluated\r\n\t * during the prediction process. In particular, we currently do not\r\n\t * evaluate the following but it may change in the future:\r\n\t *\r\n\t * * Precedence predicates (represented by\r\n\t *   {@link SemanticContext.PrecedencePredicate}) are not currently evaluated\r\n\t *   through this method.\r\n\t * * Operator predicates (represented by {@link SemanticContext.AND} and\r\n\t *   {@link SemanticContext.OR}) are evaluated as a single semantic\r\n\t *   context, rather than evaluating the operands individually.\r\n\t *   Implementations which require evaluation results from individual\r\n\t *   predicates should override this method to explicitly handle evaluation of\r\n\t *   the operands within operator predicates.\r\n\t *\r\n\t * @param pred The semantic context to evaluate\r\n\t * @param parserCallStack The parser context in which to evaluate the\r\n\t * semantic context\r\n\t * @param alt The alternative which is guarded by `pred`\r\n\t *\r\n\t * @since 4.3\r\n\t */\r\n\tprotected evalSemanticContextImpl(@NotNull pred: SemanticContext, parserCallStack: ParserRuleContext, alt: number): boolean {\r\n\t\treturn pred.eval(this._parser, parserCallStack);\r\n\t}\r\n\r\n\t/* TODO: If we are doing predicates, there is no point in pursuing\r\n\t\t closure operations if we reach a DFA state that uniquely predicts\r\n\t\t alternative. We will not be caching that DFA state and it is a\r\n\t\t waste to pursue the closure. Might have to advance when we do\r\n\t\t ambig detection thought :(\r\n\t\t  */\r\n\r\n\tprotected closure(\r\n\t\tsourceConfigs: ATNConfigSet,\r\n\t\t@NotNull configs: ATNConfigSet,\r\n\t\tcollectPredicates: boolean,\r\n\t\thasMoreContext: boolean,\r\n\t\t@Nullable contextCache: PredictionContextCache,\r\n\t\ttreatEofAsEpsilon: boolean): void {\r\n\t\tif (contextCache == null) {\r\n\t\t\tcontextCache = PredictionContextCache.UNCACHED;\r\n\t\t}\r\n\r\n\t\tlet currentConfigs: ATNConfigSet = sourceConfigs;\r\n\t\tlet closureBusy: Array2DHashSet<ATNConfig> = new Array2DHashSet<ATNConfig>(ObjectEqualityComparator.INSTANCE);\r\n\t\twhile (currentConfigs.size > 0) {\r\n\t\t\tlet intermediate: ATNConfigSet = new ATNConfigSet();\r\n\t\t\tfor (let config of currentConfigs) {\r\n\t\t\t\tthis.closureImpl(config, configs, intermediate, closureBusy, collectPredicates, hasMoreContext, contextCache, 0, treatEofAsEpsilon);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentConfigs = intermediate;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected closureImpl(\r\n\t\t@NotNull config: ATNConfig,\r\n\t\t@NotNull configs: ATNConfigSet,\r\n\t\t@Nullable intermediate: ATNConfigSet,\r\n\t\t@NotNull closureBusy: Array2DHashSet<ATNConfig>,\r\n\t\tcollectPredicates: boolean,\r\n\t\thasMoreContexts: boolean,\r\n\t\t@NotNull contextCache: PredictionContextCache,\r\n\t\tdepth: number,\r\n\t\ttreatEofAsEpsilon: boolean): void {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"closure(\" + config.toString(this._parser, true) + \")\");\r\n\t\t}\r\n\r\n\t\tif (config.state instanceof RuleStopState) {\r\n\t\t\t// We hit rule end. If we have context info, use it\r\n\t\t\tif (!config.context.isEmpty) {\r\n\t\t\t\tlet hasEmpty: boolean = config.context.hasEmpty;\r\n\t\t\t\tlet nonEmptySize: number = config.context.size - (hasEmpty ? 1 : 0);\r\n\t\t\t\tfor (let i = 0; i < nonEmptySize; i++) {\r\n\t\t\t\t\tlet newContext: PredictionContext = config.context.getParent(i); // \"pop\" return state\r\n\t\t\t\t\tlet returnState: ATNState = this.atn.states[config.context.getReturnState(i)];\r\n\t\t\t\t\tlet c: ATNConfig = ATNConfig.create(returnState, config.alt, newContext, config.semanticContext);\r\n\t\t\t\t\t// While we have context to pop back from, we may have\r\n\t\t\t\t\t// gotten that context AFTER having fallen off a rule.\r\n\t\t\t\t\t// Make sure we track that we are now out of context.\r\n\t\t\t\t\tc.outerContextDepth = config.outerContextDepth;\r\n\t\t\t\t\tc.isPrecedenceFilterSuppressed = config.isPrecedenceFilterSuppressed;\r\n\t\t\t\t\tassert(depth > MIN_INTEGER_VALUE);\r\n\t\t\t\t\tthis.closureImpl(c, configs, intermediate, closureBusy, collectPredicates, hasMoreContexts, contextCache, depth - 1, treatEofAsEpsilon);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!hasEmpty || !hasMoreContexts) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconfig = config.transform(config.state, false, PredictionContext.EMPTY_LOCAL);\r\n\t\t\t}\r\n\t\t\telse if (!hasMoreContexts) {\r\n\t\t\t\tconfigs.add(config, contextCache);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// else if we have no context info, just chase follow links (if greedy)\r\n\t\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\t\tconsole.log(\"FALLING off rule \" +\r\n\t\t\t\t\t\tthis.getRuleName(config.state.ruleIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (config.context === PredictionContext.EMPTY_FULL) {\r\n\t\t\t\t\t// no need to keep full context overhead when we step out\r\n\t\t\t\t\tconfig = config.transform(config.state, false, PredictionContext.EMPTY_LOCAL);\r\n\t\t\t\t}\r\n\t\t\t\telse if (!config.reachesIntoOuterContext && PredictionContext.isEmptyLocal(config.context)) {\r\n\t\t\t\t\t// add stop state when leaving decision rule for the first time\r\n\t\t\t\t\tconfigs.add(config, contextCache);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet p: ATNState = config.state;\r\n\t\t// optimization\r\n\t\tif (!p.onlyHasEpsilonTransitions) {\r\n\t\t\tconfigs.add(config, contextCache);\r\n\t\t\t// make sure to not return here, because EOF transitions can act as\r\n\t\t\t// both epsilon transitions and non-epsilon transitions.\r\n\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\tconsole.log(\"added config \" + configs);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < p.numberOfOptimizedTransitions; i++) {\r\n\t\t\t// This block implements first-edge elimination of ambiguous LR\r\n\t\t\t// alternatives as part of dynamic disambiguation during prediction.\r\n\t\t\t// See antlr/antlr4#1398.\r\n\t\t\tif (i === 0\r\n\t\t\t\t&& p.stateType === ATNStateType.STAR_LOOP_ENTRY\r\n\t\t\t\t&& (p as StarLoopEntryState).precedenceRuleDecision\r\n\t\t\t\t&& !config.context.hasEmpty) {\r\n\r\n\t\t\t\tlet precedenceDecision = p as StarLoopEntryState;\r\n\r\n\t\t\t\t// When suppress is true, it means the outgoing edge i==0 is\r\n\t\t\t\t// ambiguous with the outgoing edge i==1, and thus the closure\r\n\t\t\t\t// operation can dynamically disambiguate by suppressing this\r\n\t\t\t\t// edge during the closure operation.\r\n\t\t\t\tlet suppress: boolean = true;\r\n\t\t\t\tfor (let j: number = 0; j < config.context.size; j++) {\r\n\t\t\t\t\tif (!precedenceDecision.precedenceLoopbackStates.get(config.context.getReturnState(j))) {\r\n\t\t\t\t\t\tsuppress = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (suppress) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet t: Transition = p.getOptimizedTransition(i);\r\n\t\t\tlet continueCollecting: boolean =\r\n\t\t\t\t!(t instanceof ActionTransition) && collectPredicates;\r\n\t\t\tlet c: ATNConfig | undefined = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, contextCache, treatEofAsEpsilon);\r\n\t\t\tif (c != null) {\r\n\t\t\t\tif (t instanceof RuleTransition) {\r\n\t\t\t\t\tif (intermediate != null && !collectPredicates) {\r\n\t\t\t\t\t\tintermediate.add(c, contextCache);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet newDepth: number = depth;\r\n\t\t\t\tif (config.state instanceof RuleStopState) {\r\n\t\t\t\t\t// target fell off end of rule; mark resulting c as having dipped into outer context\r\n\t\t\t\t\t// We can't get here if incoming config was rule stop and we had context\r\n\t\t\t\t\t// track how far we dip into outer context.  Might\r\n\t\t\t\t\t// come in handy and we avoid evaluating context dependent\r\n\t\t\t\t\t// preds if this is > 0.\r\n\r\n\t\t\t\t\tif (this.dfa != null && this.dfa.isPrecedenceDfa) {\r\n\t\t\t\t\t\tlet outermostPrecedenceReturn: number = (t as EpsilonTransition).outermostPrecedenceReturn;\r\n\t\t\t\t\t\tif (outermostPrecedenceReturn === this.dfa.atnStartState.ruleIndex) {\r\n\t\t\t\t\t\t\tc.isPrecedenceFilterSuppressed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tc.outerContextDepth = c.outerContextDepth + 1;\r\n\r\n\t\t\t\t\tif (!closureBusy.add(c)) {\r\n\t\t\t\t\t\t// avoid infinite recursion for right-recursive rules\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tassert(newDepth > MIN_INTEGER_VALUE);\r\n\t\t\t\t\tnewDepth--;\r\n\t\t\t\t\tif (ParserATNSimulator.debug) {\r\n\t\t\t\t\t\tconsole.log(\"dips into outer ctx: \" + c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (t instanceof RuleTransition) {\r\n\t\t\t\t\tif (this.optimize_tail_calls && t.optimizedTailCall && (!this.tail_call_preserves_sll || !PredictionContext.isEmptyLocal(config.context))) {\r\n\t\t\t\t\t\tassert(c.context === config.context);\r\n\t\t\t\t\t\tif (newDepth === 0) {\r\n\t\t\t\t\t\t\t// the pop/push of a tail call would keep the depth\r\n\t\t\t\t\t\t\t// constant, except we latch if it goes negative\r\n\t\t\t\t\t\t\tnewDepth--;\r\n\t\t\t\t\t\t\tif (!this.tail_call_preserves_sll && PredictionContext.isEmptyLocal(config.context)) {\r\n\t\t\t\t\t\t\t\t// make sure the SLL config \"dips into the outer context\" or prediction may not fall back to LL on conflict\r\n\t\t\t\t\t\t\t\tc.outerContextDepth = c.outerContextDepth + 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// latch when newDepth goes negative - once we step out of the entry context we can't return\r\n\t\t\t\t\t\tif (newDepth >= 0) {\r\n\t\t\t\t\t\t\tnewDepth++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!t.isEpsilon && !closureBusy.add(c)) {\r\n\t\t\t\t\t\t// avoid infinite recursion for EOF* and EOF+\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.closureImpl(c, configs, intermediate, closureBusy, continueCollecting, hasMoreContexts, contextCache, newDepth, treatEofAsEpsilon);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getRuleName(index: number): string {\r\n\t\tif (this._parser != null && index >= 0) {\r\n\t\t\treturn this._parser.ruleNames[index];\r\n\t\t}\r\n\t\treturn \"<rule \" + index + \">\";\r\n\t}\r\n\r\n\tprotected getEpsilonTarget(@NotNull config: ATNConfig, @NotNull t: Transition, collectPredicates: boolean, inContext: boolean, contextCache: PredictionContextCache, treatEofAsEpsilon: boolean): ATNConfig | undefined {\r\n\t\tswitch (t.serializationType) {\r\n\t\tcase TransitionType.RULE:\r\n\t\t\treturn this.ruleTransition(config, t as RuleTransition, contextCache);\r\n\r\n\t\tcase TransitionType.PRECEDENCE:\r\n\t\t\treturn this.precedenceTransition(config, t as PrecedencePredicateTransition, collectPredicates, inContext);\r\n\r\n\t\tcase TransitionType.PREDICATE:\r\n\t\t\treturn this.predTransition(config, t as PredicateTransition, collectPredicates, inContext);\r\n\r\n\t\tcase TransitionType.ACTION:\r\n\t\t\treturn this.actionTransition(config, t as ActionTransition);\r\n\r\n\t\tcase TransitionType.EPSILON:\r\n\t\t\treturn config.transform(t.target, false);\r\n\r\n\t\tcase TransitionType.ATOM:\r\n\t\tcase TransitionType.RANGE:\r\n\t\tcase TransitionType.SET:\r\n\t\t\t// EOF transitions act like epsilon transitions after the first EOF\r\n\t\t\t// transition is traversed\r\n\t\t\tif (treatEofAsEpsilon) {\r\n\t\t\t\tif (t.matches(Token.EOF, 0, 1)) {\r\n\t\t\t\t\treturn config.transform(t.target, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\tdefault:\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected actionTransition(@NotNull config: ATNConfig, @NotNull t: ActionTransition): ATNConfig {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"ACTION edge \" + t.ruleIndex + \":\" + t.actionIndex);\r\n\t\t}\r\n\t\treturn config.transform(t.target, false);\r\n\t}\r\n\r\n\t@Nullable\r\n\tprotected precedenceTransition(\r\n\t\t@NotNull config: ATNConfig,\r\n\t\t@NotNull pt: PrecedencePredicateTransition,\r\n\t\tcollectPredicates: boolean,\r\n\t\tinContext: boolean): ATNConfig {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\r\n\t\t\t\tpt.precedence + \">=_p\" +\r\n\t\t\t\t\", ctx dependent=true\");\r\n\t\t\tif (this._parser != null) {\r\n\t\t\t\tconsole.log(\"context surrounding pred is \" +\r\n\t\t\t\t\tthis._parser.getRuleInvocationStack());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet c: ATNConfig;\r\n\t\tif (collectPredicates && inContext) {\r\n\t\t\tlet newSemCtx: SemanticContext = SemanticContext.and(config.semanticContext, pt.predicate);\r\n\t\t\tc = config.transform(pt.target, false, newSemCtx);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tc = config.transform(pt.target, false);\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"config from pred transition=\" + c);\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\t@Nullable\r\n\tprotected predTransition(\r\n\t\t@NotNull config: ATNConfig,\r\n\t\t@NotNull pt: PredicateTransition,\r\n\t\tcollectPredicates: boolean,\r\n\t\tinContext: boolean): ATNConfig {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\r\n\t\t\t\tpt.ruleIndex + \":\" + pt.predIndex +\r\n\t\t\t\t\", ctx dependent=\" + pt.isCtxDependent);\r\n\t\t\tif (this._parser != null) {\r\n\t\t\t\tconsole.log(\"context surrounding pred is \" +\r\n\t\t\t\t\tthis._parser.getRuleInvocationStack());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet c: ATNConfig;\r\n\t\tif (collectPredicates &&\r\n\t\t\t(!pt.isCtxDependent || (pt.isCtxDependent && inContext))) {\r\n\t\t\tlet newSemCtx: SemanticContext = SemanticContext.and(config.semanticContext, pt.predicate);\r\n\t\t\tc = config.transform(pt.target, false, newSemCtx);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tc = config.transform(pt.target, false);\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"config from pred transition=\" + c);\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected ruleTransition(@NotNull config: ATNConfig, @NotNull t: RuleTransition, @Nullable contextCache: PredictionContextCache): ATNConfig {\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) +\r\n\t\t\t\t\", ctx=\" + config.context);\r\n\t\t}\r\n\r\n\t\tlet returnState: ATNState = t.followState;\r\n\t\tlet newContext: PredictionContext;\r\n\r\n\t\tif (this.optimize_tail_calls && t.optimizedTailCall && (!this.tail_call_preserves_sll || !PredictionContext.isEmptyLocal(config.context))) {\r\n\t\t\tnewContext = config.context;\r\n\t\t}\r\n\t\telse if (contextCache != null) {\r\n\t\t\tnewContext = contextCache.getChild(config.context, returnState.stateNumber);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewContext = config.context.getChild(returnState.stateNumber);\r\n\t\t}\r\n\r\n\t\treturn config.transform(t.target, false, newContext);\r\n\t}\r\n\r\n\tprivate static STATE_ALT_SORT_COMPARATOR: (o1: ATNConfig, o2: ATNConfig) => number =\r\n\t\t(o1: ATNConfig, o2: ATNConfig): number => {\r\n\t\t\tlet diff: number = o1.state.nonStopStateNumber - o2.state.nonStopStateNumber;\r\n\t\t\tif (diff !== 0) {\r\n\t\t\t\treturn diff;\r\n\t\t\t}\r\n\r\n\t\t\tdiff = o1.alt - o2.alt;\r\n\t\t\tif (diff !== 0) {\r\n\t\t\t\treturn diff;\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\tprivate isConflicted(@NotNull configset: ATNConfigSet, contextCache: PredictionContextCache): ConflictInfo | undefined {\r\n\t\tif (configset.uniqueAlt !== ATN.INVALID_ALT_NUMBER || configset.size <= 1) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet configs: ATNConfig[] = configset.toArray();\r\n\t\tconfigs.sort(ParserATNSimulator.STATE_ALT_SORT_COMPARATOR);\r\n\r\n\t\tlet exact: boolean = !configset.dipsIntoOuterContext;\r\n\t\tlet alts: BitSet = new BitSet();\r\n\t\tlet minAlt: number = configs[0].alt;\r\n\t\talts.set(minAlt);\r\n\r\n\t\t/* Quick checks come first (single pass, no context joining):\r\n\t\t *  1. Make sure first config in the sorted list predicts the minimum\r\n\t\t *     represented alternative.\r\n\t\t *  2. Make sure every represented state has at least one configuration\r\n\t\t *     which predicts the minimum represented alternative.\r\n\t\t *  3. (exact only) make sure every represented state has at least one\r\n\t\t *     configuration which predicts each represented alternative.\r\n\t\t */\r\n\r\n\t\t// quick check 1 & 2 => if we assume #1 holds and check #2 against the\r\n\t\t// minAlt from the first state, #2 will fail if the assumption was\r\n\t\t// incorrect\r\n\t\tlet currentState: number = configs[0].state.nonStopStateNumber;\r\n\t\tfor (let config of configs) {\r\n\t\t\tlet stateNumber: number = config.state.nonStopStateNumber;\r\n\t\t\tif (stateNumber !== currentState) {\r\n\t\t\t\tif (config.alt !== minAlt) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentState = stateNumber;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet representedAlts: BitSet;\r\n\t\tif (exact) {\r\n\t\t\tcurrentState = configs[0].state.nonStopStateNumber;\r\n\r\n\t\t\t// get the represented alternatives of the first state\r\n\t\t\trepresentedAlts = new BitSet();\r\n\t\t\tlet maxAlt: number = minAlt;\r\n\t\t\tfor (let config of configs) {\r\n\t\t\t\tif (config.state.nonStopStateNumber !== currentState) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet alt: number = config.alt;\r\n\t\t\t\trepresentedAlts.set(alt);\r\n\t\t\t\tmaxAlt = alt;\r\n\t\t\t}\r\n\r\n\t\t\t// quick check #3:\r\n\t\t\tcurrentState = configs[0].state.nonStopStateNumber;\r\n\t\t\tlet currentAlt: number = minAlt;\r\n\t\t\tfor (let config of configs) {\r\n\t\t\t\tlet stateNumber: number = config.state.nonStopStateNumber;\r\n\t\t\t\tlet alt: number = config.alt;\r\n\t\t\t\tif (stateNumber !== currentState) {\r\n\t\t\t\t\tif (currentAlt !== maxAlt) {\r\n\t\t\t\t\t\texact = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentState = stateNumber;\r\n\t\t\t\t\tcurrentAlt = minAlt;\r\n\t\t\t\t}\r\n\t\t\t\telse if (alt !== currentAlt) {\r\n\t\t\t\t\tif (alt !== representedAlts.nextSetBit(currentAlt + 1)) {\r\n\t\t\t\t\t\texact = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentAlt = alt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcurrentState = configs[0].state.nonStopStateNumber;\r\n\t\tlet firstIndexCurrentState: number = 0;\r\n\t\tlet lastIndexCurrentStateMinAlt: number = 0;\r\n\t\tlet joinedCheckContext: PredictionContext = configs[0].context;\r\n\t\tfor (let i = 1; i < configs.length; i++) {\r\n\t\t\tlet config: ATNConfig = configs[i];\r\n\t\t\tif (config.alt !== minAlt) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.state.nonStopStateNumber !== currentState) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlastIndexCurrentStateMinAlt = i;\r\n\t\t\tjoinedCheckContext = contextCache.join(joinedCheckContext, configs[i].context);\r\n\t\t}\r\n\r\n\t\tfor (let i = lastIndexCurrentStateMinAlt + 1; i < configs.length; i++) {\r\n\t\t\tlet config: ATNConfig = configs[i];\r\n\t\t\tlet state: ATNState = config.state;\r\n\t\t\talts.set(config.alt);\r\n\t\t\tif (state.nonStopStateNumber !== currentState) {\r\n\t\t\t\tcurrentState = state.nonStopStateNumber;\r\n\t\t\t\tfirstIndexCurrentState = i;\r\n\t\t\t\tlastIndexCurrentStateMinAlt = i;\r\n\t\t\t\tjoinedCheckContext = config.context;\r\n\t\t\t\tfor (let j = firstIndexCurrentState + 1; j < configs.length; j++) {\r\n\t\t\t\t\tlet config2: ATNConfig = configs[j];\r\n\t\t\t\t\tif (config2.alt !== minAlt) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (config2.state.nonStopStateNumber !== currentState) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlastIndexCurrentStateMinAlt = j;\r\n\t\t\t\t\tjoinedCheckContext = contextCache.join(joinedCheckContext, config2.context);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti = lastIndexCurrentStateMinAlt;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet joinedCheckContext2: PredictionContext = config.context;\r\n\t\t\tlet currentAlt: number = config.alt;\r\n\t\t\tlet lastIndexCurrentStateCurrentAlt: number = i;\r\n\t\t\tfor (let j = lastIndexCurrentStateCurrentAlt + 1; j < configs.length; j++) {\r\n\t\t\t\tlet config2: ATNConfig = configs[j];\r\n\t\t\t\tif (config2.alt !== currentAlt) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (config2.state.nonStopStateNumber !== currentState) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastIndexCurrentStateCurrentAlt = j;\r\n\t\t\t\tjoinedCheckContext2 = contextCache.join(joinedCheckContext2, config2.context);\r\n\t\t\t}\r\n\r\n\t\t\ti = lastIndexCurrentStateCurrentAlt;\r\n\r\n\t\t\tlet check: PredictionContext = contextCache.join(joinedCheckContext, joinedCheckContext2);\r\n\t\t\tif (!joinedCheckContext.equals(check)) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// update exact if necessary\r\n\t\t\texact = exact && joinedCheckContext.equals(joinedCheckContext2);\r\n\t\t}\r\n\r\n\t\treturn new ConflictInfo(alts, exact);\r\n\t}\r\n\r\n\tprotected getConflictingAltsFromConfigSet(configs: ATNConfigSet): BitSet | undefined {\r\n\t\tlet conflictingAlts: BitSet | undefined = configs.conflictingAlts;\r\n\t\tif (conflictingAlts == null && configs.uniqueAlt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\tconflictingAlts = new BitSet();\r\n\t\t\tconflictingAlts.set(configs.uniqueAlt);\r\n\t\t}\r\n\r\n\t\treturn conflictingAlts;\r\n\t}\r\n\r\n\t@NotNull\r\n\tpublic getTokenName(t: number): string {\r\n\t\tif (t === Token.EOF) {\r\n\t\t\treturn \"EOF\";\r\n\t\t}\r\n\r\n\t\tlet vocabulary: Vocabulary = this._parser != null ? this._parser.vocabulary : VocabularyImpl.EMPTY_VOCABULARY;\r\n\t\tlet displayName: string = vocabulary.getDisplayName(t);\r\n\t\tif (displayName === String(t)) {\r\n\t\t\treturn displayName;\r\n\t\t}\r\n\r\n\t\treturn displayName + \"<\" + t + \">\";\r\n\t}\r\n\r\n\tpublic getLookaheadName(input: TokenStream): string {\r\n\t\treturn this.getTokenName(input.LA(1));\r\n\t}\r\n\r\n\tpublic dumpDeadEndConfigs(@NotNull nvae: NoViableAltException): void {\r\n\t\tconsole.log(\"dead end configs: \");\r\n\t\tlet deadEndConfigs = nvae.deadEndConfigs;\r\n\t\tif (!deadEndConfigs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let c of deadEndConfigs) {\r\n\t\t\tlet trans: string = \"no edges\";\r\n\t\t\tif (c.state.numberOfOptimizedTransitions > 0) {\r\n\t\t\t\tlet t: Transition = c.state.getOptimizedTransition(0);\r\n\t\t\t\tif (t instanceof AtomTransition) {\r\n\t\t\t\t\ttrans = \"Atom \" + this.getTokenName(t._label);\r\n\t\t\t\t}\r\n\t\t\t\telse if (t instanceof SetTransition) {\r\n\t\t\t\t\tlet not: boolean = t instanceof NotSetTransition;\r\n\t\t\t\t\ttrans = (not ? \"~\" : \"\") + \"Set \" + t.set.toString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(c.toString(this._parser, true) + \":\" + trans);\r\n\t\t}\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected noViableAlt(\r\n\t\t@NotNull input: TokenStream,\r\n\t\t@NotNull outerContext: ParserRuleContext,\r\n\t\t@NotNull configs: ATNConfigSet,\r\n\t\tstartIndex: number): NoViableAltException {\r\n\t\treturn new NoViableAltException(this._parser, input,\r\n\t\t\tinput.get(startIndex),\r\n\t\t\tinput.LT(1),\r\n\t\t\tconfigs, outerContext);\r\n\t}\r\n\r\n\tprotected getUniqueAlt(@NotNull configs: Iterable<ATNConfig>): number {\r\n\t\tlet alt: number = ATN.INVALID_ALT_NUMBER;\r\n\t\tfor (let c of configs) {\r\n\t\t\tif (alt === ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\talt = c.alt; // found first alt\r\n\t\t\t}\r\n\t\t\telse if (c.alt !== alt) {\r\n\t\t\t\treturn ATN.INVALID_ALT_NUMBER;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn alt;\r\n\t}\r\n\r\n\tprotected configWithAltAtStopState(@NotNull configs: Iterable<ATNConfig>, alt: number): boolean {\r\n\t\tfor (let c of configs) {\r\n\t\t\tif (c.alt === alt) {\r\n\t\t\t\tif (c.state instanceof RuleStopState) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected addDFAEdge(\r\n\t\t@NotNull dfa: DFA,\r\n\t\t@NotNull fromState: DFAState,\r\n\t\tt: number,\r\n\t\tcontextTransitions: IntegerList | undefined,\r\n\t\t@NotNull toConfigs: ATNConfigSet,\r\n\t\tcontextCache: PredictionContextCache): DFAState {\r\n\t\tassert(contextTransitions == null || contextTransitions.isEmpty || dfa.isContextSensitive);\r\n\r\n\t\tlet from: DFAState = fromState;\r\n\t\tlet to: DFAState = this.addDFAState(dfa, toConfigs, contextCache);\r\n\r\n\t\tif (contextTransitions != null) {\r\n\t\t\tfor (let context of contextTransitions.toArray()) {\r\n\t\t\t\tif (context === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\t\tif (from.configs.isOutermostConfigSet) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfrom.setContextSensitive(this.atn);\r\n\t\t\t\tfrom.setContextSymbol(t);\r\n\t\t\t\tlet next: DFAState | undefined = from.getContextTarget(context);\r\n\t\t\t\tif (next != null) {\r\n\t\t\t\t\tfrom = next;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnext = this.addDFAContextState(dfa, from.configs, context, contextCache);\r\n\t\t\t\tassert(context !== PredictionContext.EMPTY_FULL_STATE_KEY || next.configs.isOutermostConfigSet);\r\n\t\t\t\tfrom.setContextTarget(context, next);\r\n\t\t\t\tfrom = next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"EDGE \" + from + \" -> \" + to + \" upon \" + this.getTokenName(t));\r\n\t\t}\r\n\t\tthis.setDFAEdge(from, t, to);\r\n\t\tif (ParserATNSimulator.debug) {\r\n\t\t\tconsole.log(\"DFA=\\n\" + dfa.toString(this._parser != null ? this._parser.vocabulary : VocabularyImpl.EMPTY_VOCABULARY, this._parser != null ? this._parser.ruleNames : undefined));\r\n\t\t}\r\n\t\treturn to;\r\n\t}\r\n\r\n\tprotected setDFAEdge(@Nullable p: DFAState, t: number, @Nullable q: DFAState): void {\r\n\t\tif (p != null) {\r\n\t\t\tp.setTarget(t, q);\r\n\t\t}\r\n\t}\r\n\r\n\t/** See comment on LexerInterpreter.addDFAState. */\r\n\t@NotNull\r\n\tprotected addDFAContextState(@NotNull dfa: DFA, @NotNull configs: ATNConfigSet, returnContext: number, contextCache: PredictionContextCache): DFAState {\r\n\t\tif (returnContext !== PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\tlet contextConfigs: ATNConfigSet = new ATNConfigSet();\r\n\t\t\tfor (let config of configs) {\r\n\t\t\t\tcontextConfigs.add(config.appendContext(returnContext, contextCache));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.addDFAState(dfa, contextConfigs, contextCache);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tassert(!configs.isOutermostConfigSet, \"Shouldn't be adding a duplicate edge.\");\r\n\t\t\tconfigs = configs.clone(true);\r\n\t\t\tconfigs.isOutermostConfigSet = true;\r\n\t\t\treturn this.addDFAState(dfa, configs, contextCache);\r\n\t\t}\r\n\t}\r\n\r\n\t/** See comment on LexerInterpreter.addDFAState. */\r\n\t@NotNull\r\n\tprotected addDFAState(@NotNull dfa: DFA, @NotNull configs: ATNConfigSet, contextCache: PredictionContextCache): DFAState {\r\n\t\tlet enableDfa: boolean = this.enable_global_context_dfa || !configs.isOutermostConfigSet;\r\n\t\tif (enableDfa) {\r\n\t\t\tif (!configs.isReadOnly) {\r\n\t\t\t\tconfigs.optimizeConfigs(this);\r\n\t\t\t}\r\n\r\n\t\t\tlet proposed: DFAState = this.createDFAState(dfa, configs);\r\n\t\t\tlet existing: DFAState | undefined = dfa.states.get(proposed);\r\n\t\t\tif (existing != null) {\r\n\t\t\t\treturn existing;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!configs.isReadOnly) {\r\n\t\t\tif (configs.conflictInfo == null) {\r\n\t\t\t\tconfigs.conflictInfo = this.isConflicted(configs, contextCache);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet newState: DFAState = this.createDFAState(dfa, configs.clone(true));\r\n\t\t// getDecisionState won't return undefined when we request a known valid decision\r\n\t\tlet decisionState: DecisionState = this.atn.getDecisionState(dfa.decision) as DecisionState;\r\n\t\tlet predictedAlt: number = this.getUniqueAlt(configs);\r\n\t\tif (predictedAlt !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\tnewState.acceptStateInfo = new AcceptStateInfo(predictedAlt);\r\n\t\t} else if (configs.conflictingAlts != null) {\r\n\t\t\tlet conflictingAlts = configs.conflictingAlts;\r\n\t\t\tif (conflictingAlts) {\r\n\t\t\t\tnewState.acceptStateInfo = new AcceptStateInfo(conflictingAlts.nextSetBit(0));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newState.isAcceptState && configs.hasSemanticContext) {\r\n\t\t\tthis.predicateDFAState(newState, configs, decisionState.numberOfTransitions);\r\n\t\t}\r\n\r\n\t\tif (!enableDfa) {\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tlet added: DFAState = dfa.addState(newState);\r\n\t\tif (ParserATNSimulator.debug && added === newState) {\r\n\t\t\tconsole.log(\"adding new DFA state: \" + newState);\r\n\t\t}\r\n\t\treturn added;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected createDFAState(@NotNull dfa: DFA, @NotNull configs: ATNConfigSet): DFAState {\r\n\t\treturn new DFAState(configs);\r\n\t}\r\n\r\n\tprotected reportAttemptingFullContext(@NotNull dfa: DFA, conflictingAlts: BitSet | undefined, @NotNull conflictState: SimulatorState, startIndex: number, stopIndex: number): void {\r\n\t\tif (ParserATNSimulator.debug || ParserATNSimulator.retry_debug) {\r\n\t\t\tlet interval: Interval = Interval.of(startIndex, stopIndex);\r\n\t\t\tconsole.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + conflictState.s0.configs +\r\n\t\t\t\t\", input=\" + this._parser.inputStream.getText(interval));\r\n\t\t}\r\n\t\tif (this._parser != null) {\r\n\t\t\tlet listener = this._parser.getErrorListenerDispatch();\r\n\t\t\tif (listener.reportAttemptingFullContext) {\r\n\t\t\t\tlistener.reportAttemptingFullContext(this._parser, dfa, startIndex, stopIndex, conflictingAlts, conflictState);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected reportContextSensitivity(@NotNull dfa: DFA, prediction: number, @NotNull acceptState: SimulatorState, startIndex: number, stopIndex: number): void {\r\n\t\tif (ParserATNSimulator.debug || ParserATNSimulator.retry_debug) {\r\n\t\t\tlet interval: Interval = Interval.of(startIndex, stopIndex);\r\n\t\t\tconsole.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + acceptState.s0.configs +\r\n\t\t\t\t\", input=\" + this._parser.inputStream.getText(interval));\r\n\t\t}\r\n\t\tif (this._parser != null) {\r\n\t\t\tlet listener = this._parser.getErrorListenerDispatch();\r\n\t\t\tif (listener.reportContextSensitivity) {\r\n\t\t\t\tlistener.reportContextSensitivity(this._parser, dfa, startIndex, stopIndex, prediction, acceptState);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** If context sensitive parsing, we know it's ambiguity not conflict */\r\n\tprotected reportAmbiguity(\r\n\t\t@NotNull dfa: DFA,\r\n\t\tD: DFAState,  // the DFA state from execATN(): void that had SLL conflicts\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\texact: boolean,\r\n\t\t@NotNull ambigAlts: BitSet,\r\n\t\t@NotNull configs: ATNConfigSet) // configs that LL not SLL considered conflicting\r\n\t{\r\n\t\tif (ParserATNSimulator.debug || ParserATNSimulator.retry_debug) {\r\n\t\t\tlet interval: Interval = Interval.of(startIndex, stopIndex);\r\n\t\t\tconsole.log(\"reportAmbiguity \" +\r\n\t\t\t\tambigAlts + \":\" + configs +\r\n\t\t\t\t\", input=\" + this._parser.inputStream.getText(interval));\r\n\t\t}\r\n\t\tif (this._parser != null) {\r\n\t\t\tlet listener = this._parser.getErrorListenerDispatch();\r\n\t\t\tif (listener.reportAmbiguity) {\r\n\t\t\t\tlistener.reportAmbiguity(this._parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getReturnState(context: RuleContext): number {\r\n\t\tif (context.isEmpty) {\r\n\t\t\treturn PredictionContext.EMPTY_FULL_STATE_KEY;\r\n\t\t}\r\n\r\n\t\tlet state: ATNState = this.atn.states[context.invokingState];\r\n\t\tlet transition: RuleTransition = state.transition(0) as RuleTransition;\r\n\t\treturn transition.followState.stateNumber;\r\n\t}\r\n\r\n\tprotected skipTailCalls(context: ParserRuleContext): ParserRuleContext {\r\n\t\tif (!this.optimize_tail_calls) {\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\twhile (!context.isEmpty) {\r\n\t\t\tlet state: ATNState = this.atn.states[context.invokingState];\r\n\t\t\tassert(state.numberOfTransitions === 1 && state.transition(0).serializationType === TransitionType.RULE);\r\n\t\t\tlet transition: RuleTransition = state.transition(0) as RuleTransition;\r\n\t\t\tif (!transition.tailCall) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// This method requires that the root ancestor of the ParserRuleContext be empty. If we make it to this\r\n\t\t\t// line, we know the current node is not empty, which means it does have a parent.\r\n\t\t\tcontext = context.parent as ParserRuleContext;\r\n\t\t}\r\n\r\n\t\treturn context;\r\n\t}\r\n\r\n\t/**\r\n\t * @since 4.3\r\n\t */\r\n\tget parser(): Parser {\r\n\t\treturn this._parser;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:34.9572142-07:00\r\n\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BlockStartState } from \"./BlockStartState\";\r\nimport { Override } from \"../Decorators\";\r\nimport { PlusLoopbackState } from \"./PlusLoopbackState\";\r\n\r\n/** Start of `(A|B|...)+` loop. Technically a decision state, but\r\n *  we don't use for code generation; somebody might need it, so I'm defining\r\n *  it for completeness. In reality, the {@link PlusLoopbackState} node is the\r\n *  real decision-making note for `A+`.\r\n */\r\nexport class PlusBlockStartState extends BlockStartState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic loopBackState!: PlusLoopbackState;\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.PLUS_BLOCK_START;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.0257730-07:00\r\n\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** Decision state for `A+` and `(A|B)+`.  It has two transitions:\r\n *  one to the loop back to start of the block and one to exit.\r\n */\r\nexport class PlusLoopbackState extends DecisionState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.PLUS_LOOP_BACK;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.0994191-07:00\r\n\r\nimport { AbstractPredicateTransition } from \"./AbstractPredicateTransition\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class PrecedencePredicateTransition extends AbstractPredicateTransition {\r\n\tpublic precedence: number;\r\n\r\n\tconstructor( @NotNull target: ATNState, precedence: number) {\r\n\t\tsuper(target);\r\n\t\tthis.precedence = precedence;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.PRECEDENCE;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEpsilon(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget predicate(): SemanticContext.PrecedencePredicate {\r\n\t\treturn new SemanticContext.PrecedencePredicate(this.precedence);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this.precedence + \" >= _p\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.1914305-07:00\r\n\r\nimport { DecisionEventInfo } from \"./DecisionEventInfo\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * This class represents profiling event information for semantic predicate\r\n * evaluations which occur during prediction.\r\n *\r\n * @see ParserATNSimulator#evalSemanticContext\r\n *\r\n * @since 4.3\r\n */\r\nexport class PredicateEvalInfo extends DecisionEventInfo {\r\n\t/**\r\n\t * The semantic context which was evaluated.\r\n\t */\r\n\tpublic semctx: SemanticContext;\r\n\t/**\r\n\t * The alternative number for the decision which is guarded by the semantic\r\n\t * context {@link #semctx}. Note that other ATN\r\n\t * configurations may predict the same alternative which are guarded by\r\n\t * other semantic contexts and/or {@link SemanticContext#NONE}.\r\n\t */\r\n\tpublic predictedAlt: number;\r\n\t/**\r\n\t * The result of evaluating the semantic context {@link #semctx}.\r\n\t */\r\n\tpublic evalResult: boolean;\r\n\r\n\t/**\r\n\t * Constructs a new instance of the {@link PredicateEvalInfo} class with the\r\n\t * specified detailed predicate evaluation information.\r\n\t *\r\n\t * @param state The simulator state\r\n\t * @param decision The decision number\r\n\t * @param input The input token stream\r\n\t * @param startIndex The start index for the current prediction\r\n\t * @param stopIndex The index at which the predicate evaluation was\r\n\t * triggered. Note that the input stream may be reset to other positions for\r\n\t * the actual evaluation of individual predicates.\r\n\t * @param semctx The semantic context which was evaluated\r\n\t * @param evalResult The results of evaluating the semantic context\r\n\t * @param predictedAlt The alternative number for the decision which is\r\n\t * guarded by the semantic context `semctx`. See {@link #predictedAlt}\r\n\t * for more information.\r\n\t *\r\n\t * @see ParserATNSimulator#evalSemanticContext(SemanticContext, ParserRuleContext, int)\r\n\t * @see SemanticContext#eval(Recognizer, RuleContext)\r\n\t */\r\n\tconstructor(\r\n\t\t@NotNull state: SimulatorState,\r\n\t\tdecision: number,\r\n\t\t@NotNull input: TokenStream,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number,\r\n\t\t@NotNull semctx: SemanticContext,\r\n\t\tevalResult: boolean,\r\n\t\tpredictedAlt: number) {\r\n\r\n\t\tsuper(decision, state, input, startIndex, stopIndex, state.useContext);\r\n\t\tthis.semctx = semctx;\r\n\t\tthis.evalResult = evalResult;\r\n\t\tthis.predictedAlt = predictedAlt;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.2826960-07:00\r\n\r\nimport { AbstractPredicateTransition } from \"./AbstractPredicateTransition\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/** TODO: this is old comment:\r\n *  A tree of semantic predicates from the grammar AST if label==SEMPRED.\r\n *  In the ATN, labels will always be exactly one predicate, but the DFA\r\n *  may have to combine a bunch of them as it collects predicates from\r\n *  multiple ATN configurations into a single DFA state.\r\n */\r\nexport class PredicateTransition extends AbstractPredicateTransition {\r\n\tpublic ruleIndex: number;\r\n\tpublic predIndex: number;\r\n\tpublic isCtxDependent: boolean;   // e.g., $i ref in pred\r\n\r\n\tconstructor(@NotNull target: ATNState, ruleIndex: number, predIndex: number, isCtxDependent: boolean) {\r\n\t\tsuper(target);\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t\tthis.predIndex = predIndex;\r\n\t\tthis.isCtxDependent = isCtxDependent;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.PREDICATE;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEpsilon(): boolean { return true; }\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget predicate(): SemanticContext.Predicate {\r\n\t\treturn new SemanticContext.Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.3812636-07:00\r\n\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { Arrays } from \"../misc/Arrays\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { EqualityComparator } from \"../misc/EqualityComparator\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { Equatable, JavaSet } from \"../misc/Stubs\";\r\nimport { PredictionContextCache } from \"./PredictionContextCache\";\r\nimport { Recognizer } from \"../Recognizer\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { RuleTransition } from \"./RuleTransition\";\r\n\r\nimport * as assert from \"assert\";\r\n\r\nconst INITIAL_HASH: number = 1;\r\n\r\nexport abstract class PredictionContext implements Equatable {\r\n\t/**\r\n\t * Stores the computed hash code of this {@link PredictionContext}. The hash\r\n\t * code is computed in parts to match the following reference algorithm.\r\n\t *\r\n\t * ```\r\n\t * private int referenceHashCode() {\r\n\t *   int hash = {@link MurmurHash#initialize MurmurHash.initialize}({@link #INITIAL_HASH});\r\n\t *\r\n\t *   for (int i = 0; i &lt; this.size; i++) {\r\n\t *     hash = {@link MurmurHash#update MurmurHash.update}(hash, {@link #getParent getParent}(i));\r\n\t *   }\r\n\t *\r\n\t *   for (int i = 0; i &lt; this.size; i++) {\r\n\t *     hash = {@link MurmurHash#update MurmurHash.update}(hash, {@link #getReturnState getReturnState}(i));\r\n\t *   }\r\n\t *\r\n\t *   hash = {@link MurmurHash#finish MurmurHash.finish}(hash, 2 * this.size);\r\n\t *   return hash;\r\n\t * }\r\n\t * ```\r\n\t */\r\n\tprivate readonly cachedHashCode: number;\r\n\r\n\tconstructor(cachedHashCode: number) {\r\n\t\tthis.cachedHashCode = cachedHashCode;\r\n\t}\r\n\r\n\tprotected static calculateEmptyHashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize(INITIAL_HASH);\r\n\t\thash = MurmurHash.finish(hash, 0);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\tprotected static calculateSingleHashCode(parent: PredictionContext, returnState: number): number {\r\n\t\tlet hash: number = MurmurHash.initialize(INITIAL_HASH);\r\n\t\thash = MurmurHash.update(hash, parent);\r\n\t\thash = MurmurHash.update(hash, returnState);\r\n\t\thash = MurmurHash.finish(hash, 2);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\tprotected static calculateHashCode(parents: PredictionContext[], returnStates: number[]): number {\r\n\t\tlet hash: number = MurmurHash.initialize(INITIAL_HASH);\r\n\r\n\t\tfor (let parent of parents) {\r\n\t\t\thash = MurmurHash.update(hash, parent);\r\n\t\t}\r\n\r\n\t\tfor (let returnState of returnStates) {\r\n\t\t\thash = MurmurHash.update(hash, returnState);\r\n\t\t}\r\n\r\n\t\thash = MurmurHash.finish(hash, 2 * parents.length);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\tpublic abstract readonly size: number;\r\n\r\n\tpublic abstract getReturnState(index: number): number;\r\n\r\n\tpublic abstract findReturnState(returnState: number): number;\r\n\r\n\t// @NotNull\r\n\tpublic abstract getParent(index: number): PredictionContext;\r\n\r\n\tprotected abstract addEmptyContext(): PredictionContext;\r\n\r\n\tprotected abstract removeEmptyContext(): PredictionContext;\r\n\r\n\tpublic static fromRuleContext(atn: ATN, outerContext: RuleContext, fullContext: boolean = true): PredictionContext {\r\n\t\tif (outerContext.isEmpty) {\r\n\t\t\treturn fullContext ? PredictionContext.EMPTY_FULL : PredictionContext.EMPTY_LOCAL;\r\n\t\t}\r\n\r\n\t\tlet parent: PredictionContext;\r\n\t\tif (outerContext._parent) {\r\n\t\t\tparent = PredictionContext.fromRuleContext(atn, outerContext._parent, fullContext);\r\n\t\t} else {\r\n\t\t\tparent = fullContext ? PredictionContext.EMPTY_FULL : PredictionContext.EMPTY_LOCAL;\r\n\t\t}\r\n\r\n\t\tlet state: ATNState = atn.states[outerContext.invokingState];\r\n\t\tlet transition: RuleTransition = state.transition(0) as RuleTransition;\r\n\t\treturn parent.getChild(transition.followState.stateNumber);\r\n\t}\r\n\r\n\tprivate static addEmptyContext(context: PredictionContext): PredictionContext {\r\n\t\treturn context.addEmptyContext();\r\n\t}\r\n\r\n\tprivate static removeEmptyContext(context: PredictionContext): PredictionContext {\r\n\t\treturn context.removeEmptyContext();\r\n\t}\r\n\r\n\tpublic static join(@NotNull context0: PredictionContext, @NotNull context1: PredictionContext, @NotNull contextCache: PredictionContextCache = PredictionContextCache.UNCACHED): PredictionContext {\r\n\t\tif (context0 === context1) {\r\n\t\t\treturn context0;\r\n\t\t}\r\n\r\n\t\tif (context0.isEmpty) {\r\n\t\t\treturn PredictionContext.isEmptyLocal(context0) ? context0 : PredictionContext.addEmptyContext(context1);\r\n\t\t} else if (context1.isEmpty) {\r\n\t\t\treturn PredictionContext.isEmptyLocal(context1) ? context1 : PredictionContext.addEmptyContext(context0);\r\n\t\t}\r\n\r\n\t\tlet context0size: number = context0.size;\r\n\t\tlet context1size: number = context1.size;\r\n\t\tif (context0size === 1 && context1size === 1 && context0.getReturnState(0) === context1.getReturnState(0)) {\r\n\t\t\tlet merged: PredictionContext = contextCache.join(context0.getParent(0), context1.getParent(0));\r\n\t\t\tif (merged === context0.getParent(0)) {\r\n\t\t\t\treturn context0;\r\n\t\t\t} else if (merged === context1.getParent(0)) {\r\n\t\t\t\treturn context1;\r\n\t\t\t} else {\r\n\t\t\t\treturn merged.getChild(context0.getReturnState(0));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet count: number = 0;\r\n\t\tlet parentsList: PredictionContext[] = new Array<PredictionContext>(context0size + context1size);\r\n\t\tlet returnStatesList: number[] = new Array<number>(parentsList.length);\r\n\t\tlet leftIndex: number = 0;\r\n\t\tlet rightIndex: number = 0;\r\n\t\tlet canReturnLeft: boolean = true;\r\n\t\tlet canReturnRight: boolean = true;\r\n\t\twhile (leftIndex < context0size && rightIndex < context1size) {\r\n\t\t\tif (context0.getReturnState(leftIndex) === context1.getReturnState(rightIndex)) {\r\n\t\t\t\tparentsList[count] = contextCache.join(context0.getParent(leftIndex), context1.getParent(rightIndex));\r\n\t\t\t\treturnStatesList[count] = context0.getReturnState(leftIndex);\r\n\t\t\t\tcanReturnLeft = canReturnLeft && parentsList[count] === context0.getParent(leftIndex);\r\n\t\t\t\tcanReturnRight = canReturnRight && parentsList[count] === context1.getParent(rightIndex);\r\n\t\t\t\tleftIndex++;\r\n\t\t\t\trightIndex++;\r\n\t\t\t} else if (context0.getReturnState(leftIndex) < context1.getReturnState(rightIndex)) {\r\n\t\t\t\tparentsList[count] = context0.getParent(leftIndex);\r\n\t\t\t\treturnStatesList[count] = context0.getReturnState(leftIndex);\r\n\t\t\t\tcanReturnRight = false;\r\n\t\t\t\tleftIndex++;\r\n\t\t\t} else {\r\n\t\t\t\tassert(context1.getReturnState(rightIndex) < context0.getReturnState(leftIndex));\r\n\t\t\t\tparentsList[count] = context1.getParent(rightIndex);\r\n\t\t\t\treturnStatesList[count] = context1.getReturnState(rightIndex);\r\n\t\t\t\tcanReturnLeft = false;\r\n\t\t\t\trightIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\twhile (leftIndex < context0size) {\r\n\t\t\tparentsList[count] = context0.getParent(leftIndex);\r\n\t\t\treturnStatesList[count] = context0.getReturnState(leftIndex);\r\n\t\t\tleftIndex++;\r\n\t\t\tcanReturnRight = false;\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\twhile (rightIndex < context1size) {\r\n\t\t\tparentsList[count] = context1.getParent(rightIndex);\r\n\t\t\treturnStatesList[count] = context1.getReturnState(rightIndex);\r\n\t\t\trightIndex++;\r\n\t\t\tcanReturnLeft = false;\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tif (canReturnLeft) {\r\n\t\t\treturn context0;\r\n\t\t} else if (canReturnRight) {\r\n\t\t\treturn context1;\r\n\t\t}\r\n\r\n\t\tif (count < parentsList.length) {\r\n\t\t\tparentsList = parentsList.slice(0, count);\r\n\t\t\treturnStatesList = returnStatesList.slice(0, count);\r\n\t\t}\r\n\r\n\t\tif (parentsList.length === 0) {\r\n\t\t\t// if one of them was EMPTY_LOCAL, it would be empty and handled at the beginning of the method\r\n\t\t\treturn PredictionContext.EMPTY_FULL;\r\n\t\t} else if (parentsList.length === 1) {\r\n\t\t\treturn new SingletonPredictionContext(parentsList[0], returnStatesList[0]);\r\n\t\t} else {\r\n\t\t\treturn new ArrayPredictionContext(parentsList, returnStatesList);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static isEmptyLocal(context: PredictionContext): boolean {\r\n\t\treturn context === PredictionContext.EMPTY_LOCAL;\r\n\t}\r\n\r\n\tpublic static getCachedContext(\r\n\t\t@NotNull context: PredictionContext,\r\n\t\t@NotNull contextCache: Array2DHashMap<PredictionContext, PredictionContext>,\r\n\t\t@NotNull visited: PredictionContext.IdentityHashMap): PredictionContext {\r\n\t\tif (context.isEmpty) {\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\tlet existing = visited.get(context);\r\n\t\tif (existing) {\r\n\t\t\treturn existing;\r\n\t\t}\r\n\r\n\t\texisting = contextCache.get(context);\r\n\t\tif (existing) {\r\n\t\t\tvisited.put(context, existing);\r\n\t\t\treturn existing;\r\n\t\t}\r\n\r\n\t\tlet changed: boolean = false;\r\n\t\tlet parents: PredictionContext[] = new Array<PredictionContext>(context.size);\r\n\t\tfor (let i = 0; i < parents.length; i++) {\r\n\t\t\tlet parent: PredictionContext = PredictionContext.getCachedContext(context.getParent(i), contextCache, visited);\r\n\t\t\tif (changed || parent !== context.getParent(i)) {\r\n\t\t\t\tif (!changed) {\r\n\t\t\t\t\tparents = new Array<PredictionContext>(context.size);\r\n\t\t\t\t\tfor (let j = 0; j < context.size; j++) {\r\n\t\t\t\t\t\tparents[j] = context.getParent(j);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparents[i] = parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!changed) {\r\n\t\t\texisting = contextCache.putIfAbsent(context, context);\r\n\t\t\tvisited.put(context, existing != null ? existing : context);\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\t// We know parents.length>0 because context.isEmpty is checked at the beginning of the method.\r\n\t\tlet updated: PredictionContext;\r\n\t\tif (parents.length === 1) {\r\n\t\t\tupdated = new SingletonPredictionContext(parents[0], context.getReturnState(0));\r\n\t\t} else {\r\n\t\t\tlet returnStates: number[] = new Array<number>(context.size);\r\n\t\t\tfor (let i = 0; i < context.size; i++) {\r\n\t\t\t\treturnStates[i] = context.getReturnState(i);\r\n\t\t\t}\r\n\r\n\t\t\tupdated = new ArrayPredictionContext(parents, returnStates, context.hashCode());\r\n\t\t}\r\n\r\n\t\texisting = contextCache.putIfAbsent(updated, updated);\r\n\t\tvisited.put(updated, existing || updated);\r\n\t\tvisited.put(context, existing || updated);\r\n\r\n\t\treturn updated;\r\n\t}\r\n\r\n\tpublic appendSingleContext(returnContext: number, contextCache: PredictionContextCache): PredictionContext {\r\n\t\treturn this.appendContext(PredictionContext.EMPTY_FULL.getChild(returnContext), contextCache);\r\n\t}\r\n\r\n\tpublic abstract appendContext(suffix: PredictionContext, contextCache: PredictionContextCache): PredictionContext;\r\n\r\n\tpublic getChild(returnState: number): PredictionContext {\r\n\t\treturn new SingletonPredictionContext(this, returnState);\r\n\t}\r\n\r\n\tpublic abstract readonly isEmpty: boolean;\r\n\r\n\tpublic abstract readonly hasEmpty: boolean;\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\treturn this.cachedHashCode;\r\n\t}\r\n\r\n\t// @Override\r\n\tpublic abstract equals(o: any): boolean;\r\n\r\n\tpublic toStrings(recognizer: Recognizer<any, any> | undefined, currentState: number, stop: PredictionContext = PredictionContext.EMPTY_FULL): string[] {\r\n\t\tlet result: string[] = [];\r\n\r\n\t\touter:\r\n\t\tfor (let perm = 0; ; perm++) {\r\n\t\t\tlet offset: number = 0;\r\n\t\t\tlet last: boolean = true;\r\n\t\t\tlet p: PredictionContext = this;\r\n\t\t\tlet stateNumber: number = currentState;\r\n\t\t\tlet localBuffer: string = \"\";\r\n\t\t\tlocalBuffer += \"[\";\r\n\t\t\twhile (!p.isEmpty && p !== stop) {\r\n\t\t\t\tlet index: number = 0;\r\n\t\t\t\tif (p.size > 0) {\r\n\t\t\t\t\tlet bits: number = 1;\r\n\t\t\t\t\twhile (((1 << bits) >>> 0) < p.size) {\r\n\t\t\t\t\t\tbits++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mask: number = ((1 << bits) >>> 0) - 1;\r\n\t\t\t\t\tindex = (perm >> offset) & mask;\r\n\t\t\t\t\tlast = last && index >= p.size - 1;\r\n\t\t\t\t\tif (index >= p.size) {\r\n\t\t\t\t\t\tcontinue outer;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toffset += bits;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (recognizer) {\r\n\t\t\t\t\tif (localBuffer.length > 1) {\r\n\t\t\t\t\t\t// first char is '[', if more than that this isn't the first rule\r\n\t\t\t\t\t\tlocalBuffer += \" \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet atn: ATN = recognizer.atn;\r\n\t\t\t\t\tlet s: ATNState = atn.states[stateNumber];\r\n\t\t\t\t\tlet ruleName: string = recognizer.ruleNames[s.ruleIndex];\r\n\t\t\t\t\tlocalBuffer += ruleName;\r\n\t\t\t\t} else if (p.getReturnState(index) !== PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\t\t\tif (!p.isEmpty) {\r\n\t\t\t\t\t\tif (localBuffer.length > 1) {\r\n\t\t\t\t\t\t\t// first char is '[', if more than that this isn't the first rule\r\n\t\t\t\t\t\t\tlocalBuffer += \" \";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlocalBuffer += p.getReturnState(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstateNumber = p.getReturnState(index);\r\n\t\t\t\tp = p.getParent(index);\r\n\t\t\t}\r\n\r\n\t\t\tlocalBuffer += \"]\";\r\n\t\t\tresult.push(localBuffer);\r\n\r\n\t\t\tif (last) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nclass EmptyPredictionContext extends PredictionContext {\r\n\tprivate fullContext: boolean;\r\n\r\n\tconstructor(fullContext: boolean) {\r\n\t\tsuper(PredictionContext.calculateEmptyHashCode());\r\n\t\tthis.fullContext = fullContext;\r\n\t}\r\n\r\n\tget isFullContext(): boolean {\r\n\t\treturn this.fullContext;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected addEmptyContext(): PredictionContext {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected removeEmptyContext(): PredictionContext {\r\n\t\tthrow new Error(\"Cannot remove the empty context from itself.\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getParent(index: number): PredictionContext {\r\n\t\tthrow new Error(\"index out of bounds\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getReturnState(index: number): number {\r\n\t\tthrow new Error(\"index out of bounds\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic findReturnState(returnState: number): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic appendSingleContext(returnContext: number, contextCache: PredictionContextCache): PredictionContext {\r\n\t\treturn contextCache.getChild(this, returnContext);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic appendContext(suffix: PredictionContext, contextCache: PredictionContextCache): PredictionContext {\r\n\t\treturn suffix;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEmpty(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tget hasEmpty(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\treturn this === o;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toStrings(recognizer: any, currentState: number, stop?: PredictionContext): string[] {\r\n\t\treturn [\"[]\"];\r\n\t}\r\n\r\n}\r\n\r\nclass ArrayPredictionContext extends PredictionContext {\r\n\t@NotNull\r\n\tpublic parents: PredictionContext[];\r\n\r\n\t@NotNull\r\n\tpublic returnStates: number[];\r\n\r\n\tconstructor( @NotNull parents: PredictionContext[], returnStates: number[], hashCode?: number) {\r\n\t\tsuper(hashCode || PredictionContext.calculateHashCode(parents, returnStates));\r\n\t\tassert(parents.length === returnStates.length);\r\n\t\tassert(returnStates.length > 1 || returnStates[0] !== PredictionContext.EMPTY_FULL_STATE_KEY, \"Should be using PredictionContext.EMPTY instead.\");\r\n\r\n\t\tthis.parents = parents;\r\n\t\tthis.returnStates = returnStates;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getParent(index: number): PredictionContext {\r\n\t\treturn this.parents[index];\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getReturnState(index: number): number {\r\n\t\treturn this.returnStates[index];\r\n\t}\r\n\r\n\t@Override\r\n\tpublic findReturnState(returnState: number): number {\r\n\t\treturn Arrays.binarySearch(this.returnStates, returnState);\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn this.returnStates.length;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEmpty(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tget hasEmpty(): boolean {\r\n\t\treturn this.returnStates[this.returnStates.length - 1] === PredictionContext.EMPTY_FULL_STATE_KEY;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected addEmptyContext(): PredictionContext {\r\n\t\tif (this.hasEmpty) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlet parents2: PredictionContext[] = this.parents.slice(0);\r\n\t\tlet returnStates2: number[] = this.returnStates.slice(0);\r\n\t\tparents2.push(PredictionContext.EMPTY_FULL);\r\n\t\treturnStates2.push(PredictionContext.EMPTY_FULL_STATE_KEY);\r\n\t\treturn new ArrayPredictionContext(parents2, returnStates2);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected removeEmptyContext(): PredictionContext {\r\n\t\tif (!this.hasEmpty) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (this.returnStates.length === 2) {\r\n\t\t\treturn new SingletonPredictionContext(this.parents[0], this.returnStates[0]);\r\n\t\t} else {\r\n\t\t\tlet parents2: PredictionContext[] = this.parents.slice(0, this.parents.length - 1);\r\n\t\t\tlet returnStates2: number[] = this.returnStates.slice(0, this.returnStates.length - 1);\r\n\t\t\treturn new ArrayPredictionContext(parents2, returnStates2);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic appendContext(suffix: PredictionContext, contextCache: PredictionContextCache): PredictionContext {\r\n\t\treturn ArrayPredictionContext.appendContextImpl(this, suffix, new PredictionContext.IdentityHashMap());\r\n\t}\r\n\r\n\tprivate static appendContextImpl(context: PredictionContext, suffix: PredictionContext, visited: PredictionContext.IdentityHashMap): PredictionContext {\r\n\t\tif (suffix.isEmpty) {\r\n\t\t\tif (PredictionContext.isEmptyLocal(suffix)) {\r\n\t\t\t\tif (context.hasEmpty) {\r\n\t\t\t\t\treturn PredictionContext.EMPTY_LOCAL;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthrow new Error(\"what to do here?\");\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\tif (suffix.size !== 1) {\r\n\t\t\tthrow new Error(\"Appending a tree suffix is not yet supported.\");\r\n\t\t}\r\n\r\n\t\tlet result = visited.get(context);\r\n\t\tif (!result) {\r\n\t\t\tif (context.isEmpty) {\r\n\t\t\t\tresult = suffix;\r\n\t\t\t} else {\r\n\t\t\t\tlet parentCount: number = context.size;\r\n\t\t\t\tif (context.hasEmpty) {\r\n\t\t\t\t\tparentCount--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet updatedParents: PredictionContext[] = new Array<PredictionContext>(parentCount);\r\n\t\t\t\tlet updatedReturnStates: number[] = new Array<number>(parentCount);\r\n\t\t\t\tfor (let i = 0; i < parentCount; i++) {\r\n\t\t\t\t\tupdatedReturnStates[i] = context.getReturnState(i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < parentCount; i++) {\r\n\t\t\t\t\tupdatedParents[i] = ArrayPredictionContext.appendContextImpl(context.getParent(i), suffix, visited);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (updatedParents.length === 1) {\r\n\t\t\t\t\tresult = new SingletonPredictionContext(updatedParents[0], updatedReturnStates[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassert(updatedParents.length > 1);\r\n\t\t\t\t\tresult = new ArrayPredictionContext(updatedParents, updatedReturnStates);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (context.hasEmpty) {\r\n\t\t\t\t\tresult = PredictionContext.join(result, suffix);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvisited.put(context, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (this === o) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(o instanceof ArrayPredictionContext)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.hashCode() !== o.hashCode()) {\r\n\t\t\t// can't be same if hash is different\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet other: ArrayPredictionContext = o;\r\n\t\treturn this.equalsImpl(other, new Array2DHashSet<PredictionContextCache.IdentityCommutativePredictionContextOperands>());\r\n\t}\r\n\r\n\tprivate equalsImpl(other: ArrayPredictionContext, visited: JavaSet<PredictionContextCache.IdentityCommutativePredictionContextOperands>): boolean {\r\n\t\tlet selfWorkList: PredictionContext[] = [];\r\n\t\tlet otherWorkList: PredictionContext[] = [];\r\n\t\tselfWorkList.push(this);\r\n\t\totherWorkList.push(other);\r\n\t\twhile (true) {\r\n\t\t\tlet currentSelf = selfWorkList.pop();\r\n\t\t\tlet currentOther = otherWorkList.pop();\r\n\t\t\tif (!currentSelf || !currentOther) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet operands: PredictionContextCache.IdentityCommutativePredictionContextOperands = new PredictionContextCache.IdentityCommutativePredictionContextOperands(currentSelf, currentOther);\r\n\t\t\tif (!visited.add(operands)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet selfSize: number = operands.x.size;\r\n\t\t\tif (selfSize === 0) {\r\n\t\t\t\tif (!operands.x.equals(operands.y)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet otherSize: number = operands.y.size;\r\n\t\t\tif (selfSize !== otherSize) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < selfSize; i++) {\r\n\t\t\t\tif (operands.x.getReturnState(i) !== operands.y.getReturnState(i)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet selfParent: PredictionContext = operands.x.getParent(i);\r\n\t\t\t\tlet otherParent: PredictionContext = operands.y.getParent(i);\r\n\t\t\t\tif (selfParent.hashCode() !== otherParent.hashCode()) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (selfParent !== otherParent) {\r\n\t\t\t\t\tselfWorkList.push(selfParent);\r\n\t\t\t\t\totherWorkList.push(otherParent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class SingletonPredictionContext extends PredictionContext {\r\n\r\n\t@NotNull\r\n\tpublic parent: PredictionContext;\r\n\tpublic returnState: number;\r\n\r\n\tconstructor(@NotNull parent: PredictionContext, returnState: number) {\r\n\t\tsuper(PredictionContext.calculateSingleHashCode(parent, returnState));\r\n\t\t// assert(returnState != PredictionContext.EMPTY_FULL_STATE_KEY && returnState != PredictionContext.EMPTY_LOCAL_STATE_KEY);\r\n\t\tthis.parent = parent;\r\n\t\tthis.returnState = returnState;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getParent(index: number): PredictionContext {\r\n\t\t// assert(index == 0);\r\n\t\treturn this.parent;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getReturnState(index: number): number {\r\n\t\t// assert(index == 0);\r\n\t\treturn this.returnState;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic findReturnState(returnState: number): number {\r\n\t\treturn this.returnState === returnState ? 0 : -1;\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEmpty(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tget hasEmpty(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic appendContext(suffix: PredictionContext, contextCache: PredictionContextCache): PredictionContext {\r\n\t\treturn contextCache.getChild(this.parent.appendContext(suffix, contextCache), this.returnState);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected addEmptyContext(): PredictionContext {\r\n\t\tlet parents: PredictionContext[] = [this.parent, PredictionContext.EMPTY_FULL];\r\n\t\tlet returnStates: number[] = [this.returnState, PredictionContext.EMPTY_FULL_STATE_KEY];\r\n\t\treturn new ArrayPredictionContext(parents, returnStates);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected removeEmptyContext(): PredictionContext {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (o === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(o instanceof SingletonPredictionContext)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet other: SingletonPredictionContext = o;\r\n\t\tif (this.hashCode() !== other.hashCode()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.returnState === other.returnState\r\n\t\t\t&& this.parent.equals(other.parent);\r\n\t}\r\n}\r\n\r\nexport namespace PredictionContext {\r\n\texport const EMPTY_LOCAL: PredictionContext = new EmptyPredictionContext(false);\r\n\texport const EMPTY_FULL: PredictionContext = new EmptyPredictionContext(true);\r\n\texport const EMPTY_LOCAL_STATE_KEY: number = -((1 << 31) >>> 0);\r\n\texport const EMPTY_FULL_STATE_KEY: number = ((1 << 31) >>> 0) - 1;\r\n\r\n\texport class IdentityHashMap extends Array2DHashMap<PredictionContext, PredictionContext> {\r\n\t\tconstructor() {\r\n\t\t\tsuper(IdentityEqualityComparator.INSTANCE);\r\n\t\t}\r\n\t}\r\n\r\n\texport class IdentityEqualityComparator implements EqualityComparator<PredictionContext> {\r\n\t\tpublic static readonly INSTANCE: IdentityEqualityComparator = new IdentityEqualityComparator();\r\n\r\n\t\tprivate IdentityEqualityComparator() {\r\n\t\t\t// intentionally empty\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(obj: PredictionContext): number {\r\n\t\t\treturn obj.hashCode();\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(a: PredictionContext, b: PredictionContext): boolean {\r\n\t\t\treturn a === b;\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:35.6390614-07:00\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { Override } from \"../Decorators\";\r\nimport { JavaMap } from \"../misc/Stubs\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { PredictionContext } from \"./PredictionContext\";\r\nimport * as assert from \"assert\";\r\n\r\n/** Used to cache {@link PredictionContext} objects. Its used for the shared\r\n *  context cash associated with contexts in DFA states. This cache\r\n *  can be used for both lexers and parsers.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class PredictionContextCache {\r\n\tpublic static UNCACHED: PredictionContextCache = new PredictionContextCache(false);\r\n\r\n\tprivate contexts: JavaMap<PredictionContext, PredictionContext> =\r\n\t\tnew Array2DHashMap<PredictionContext, PredictionContext>(ObjectEqualityComparator.INSTANCE);\r\n\tprivate childContexts: JavaMap<PredictionContextCache.PredictionContextAndInt, PredictionContext> =\r\n\t\tnew Array2DHashMap<PredictionContextCache.PredictionContextAndInt, PredictionContext>(ObjectEqualityComparator.INSTANCE);\r\n\tprivate joinContexts: JavaMap<PredictionContextCache.IdentityCommutativePredictionContextOperands, PredictionContext> =\r\n\t\tnew Array2DHashMap<PredictionContextCache.IdentityCommutativePredictionContextOperands, PredictionContext>(ObjectEqualityComparator.INSTANCE);\r\n\r\n\tprivate enableCache: boolean;\r\n\r\n\tconstructor(enableCache: boolean = true) {\r\n\t\tthis.enableCache = enableCache;\r\n\t}\r\n\r\n\tpublic getAsCached(context: PredictionContext): PredictionContext {\r\n\t\tif (!this.enableCache) {\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\tlet result = this.contexts.get(context);\r\n\t\tif (!result) {\r\n\t\t\tresult = context;\r\n\t\t\tthis.contexts.put(context, context);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic getChild(context: PredictionContext, invokingState: number): PredictionContext {\r\n\t\tif (!this.enableCache) {\r\n\t\t\treturn context.getChild(invokingState);\r\n\t\t}\r\n\r\n\t\tlet operands: PredictionContextCache.PredictionContextAndInt = new PredictionContextCache.PredictionContextAndInt(context, invokingState);\r\n\t\tlet result = this.childContexts.get(operands);\r\n\t\tif (!result) {\r\n\t\t\tresult = context.getChild(invokingState);\r\n\t\t\tresult = this.getAsCached(result);\r\n\t\t\tthis.childContexts.put(operands, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic join(x: PredictionContext, y: PredictionContext): PredictionContext {\r\n\t\tif (!this.enableCache) {\r\n\t\t\treturn PredictionContext.join(x, y, this);\r\n\t\t}\r\n\r\n\t\tlet operands: PredictionContextCache.IdentityCommutativePredictionContextOperands = new PredictionContextCache.IdentityCommutativePredictionContextOperands(x, y);\r\n\t\tlet result = this.joinContexts.get(operands);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tresult = PredictionContext.join(x, y, this);\r\n\t\tresult = this.getAsCached(result);\r\n\t\tthis.joinContexts.put(operands, result);\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport namespace PredictionContextCache {\r\n\texport class PredictionContextAndInt {\r\n\t\tprivate obj: PredictionContext;\r\n\t\tprivate value: number;\r\n\r\n\t\tconstructor(obj: PredictionContext, value: number) {\r\n\t\t\tthis.obj = obj;\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(obj: any): boolean {\r\n\t\t\tif (!(obj instanceof PredictionContextAndInt)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (obj === this) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tlet other: PredictionContextAndInt = obj;\r\n\t\t\treturn this.value === other.value\r\n\t\t\t\t&& (this.obj === other.obj || (this.obj != null && this.obj.equals(other.obj)));\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\tlet hashCode: number = 5;\r\n\t\t\thashCode = 7 * hashCode + (this.obj != null ? this.obj.hashCode() : 0);\r\n\t\t\thashCode = 7 * hashCode + this.value;\r\n\t\t\treturn hashCode;\r\n\t\t}\r\n\t}\r\n\r\n\texport class IdentityCommutativePredictionContextOperands {\r\n\t\tprivate _x: PredictionContext;\r\n\t\tprivate _y: PredictionContext;\r\n\r\n\t\tconstructor(x: PredictionContext, y: PredictionContext) {\r\n\t\t\tassert(x != null);\r\n\t\t\tassert(y != null);\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t}\r\n\r\n\t\tget x(): PredictionContext {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tget y(): PredictionContext {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(o: any): boolean {\r\n\t\t\tif (!(o instanceof IdentityCommutativePredictionContextOperands)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (this === o) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tlet other: IdentityCommutativePredictionContextOperands = o;\r\n\t\t\treturn (this._x === other._x && this._y === other._y) || (this._x === other._y && this._y === other._x);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\treturn this._x.hashCode() ^ this._y.hashCode();\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.2673893-07:00\r\n\r\nimport { Array2DHashMap } from \"../misc/Array2DHashMap\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfig } from \"./ATNConfig\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { ATNState } from \"./ATNState\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { EqualityComparator } from \"../misc/EqualityComparator\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { Override } from \"../Decorators\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\n\r\n/**\r\n * This enumeration defines the prediction modes available in ANTLR 4 along with\r\n * utility methods for analyzing configuration sets for conflicts and/or\r\n * ambiguities.\r\n */\r\nexport enum PredictionMode {\r\n\t/**\r\n\t * The SLL(*) prediction mode. This prediction mode ignores the current\r\n\t * parser context when making predictions. This is the fastest prediction\r\n\t * mode, and provides correct results for many grammars. This prediction\r\n\t * mode is more powerful than the prediction mode provided by ANTLR 3, but\r\n\t * may result in syntax errors for grammar and input combinations which are\r\n\t * not SLL.\r\n\t *\r\n\t * When using this prediction mode, the parser will either return a correct\r\n\t * parse tree (i.e. the same parse tree that would be returned with the\r\n\t * {@link #LL} prediction mode), or it will report a syntax error. If a\r\n\t * syntax error is encountered when using the {@link #SLL} prediction mode,\r\n\t * it may be due to either an actual syntax error in the input or indicate\r\n\t * that the particular combination of grammar and input requires the more\r\n\t * powerful {@link #LL} prediction abilities to complete successfully.\r\n\t *\r\n\t * This prediction mode does not provide any guarantees for prediction\r\n\t * behavior for syntactically-incorrect inputs.\r\n\t */\r\n\tSLL,\r\n\t/**\r\n\t * The LL(*) prediction mode. This prediction mode allows the current parser\r\n\t * context to be used for resolving SLL conflicts that occur during\r\n\t * prediction. This is the fastest prediction mode that guarantees correct\r\n\t * parse results for all combinations of grammars with syntactically correct\r\n\t * inputs.\r\n\t *\r\n\t * When using this prediction mode, the parser will make correct decisions\r\n\t * for all syntactically-correct grammar and input combinations. However, in\r\n\t * cases where the grammar is truly ambiguous this prediction mode might not\r\n\t * report a precise answer for *exactly which* alternatives are\r\n\t * ambiguous.\r\n\t *\r\n\t * This prediction mode does not provide any guarantees for prediction\r\n\t * behavior for syntactically-incorrect inputs.\r\n\t */\r\n\tLL,\r\n\t/**\r\n\t * The LL(*) prediction mode with exact ambiguity detection. In addition to\r\n\t * the correctness guarantees provided by the {@link #LL} prediction mode,\r\n\t * this prediction mode instructs the prediction algorithm to determine the\r\n\t * complete and exact set of ambiguous alternatives for every ambiguous\r\n\t * decision encountered while parsing.\r\n\t *\r\n\t * This prediction mode may be used for diagnosing ambiguities during\r\n\t * grammar development. Due to the performance overhead of calculating sets\r\n\t * of ambiguous alternatives, this prediction mode should be avoided when\r\n\t * the exact results are not necessary.\r\n\t *\r\n\t * This prediction mode does not provide any guarantees for prediction\r\n\t * behavior for syntactically-incorrect inputs.\r\n\t */\r\n\tLL_EXACT_AMBIG_DETECTION,\r\n}\r\n\r\nexport namespace PredictionMode {\r\n\t/** A Map that uses just the state and the stack context as the key. */\r\n\t// NOTE: Base type used to be FlexibleHashMap<ATNConfig, BitSet>\r\n\tclass AltAndContextMap extends Array2DHashMap<ATNConfig, BitSet> {\r\n\t\tconstructor() {\r\n\t\t\tsuper(AltAndContextConfigEqualityComparator.INSTANCE);\r\n\t\t}\r\n\t}\r\n\r\n\tclass AltAndContextConfigEqualityComparator implements EqualityComparator<ATNConfig> {\r\n\t\tpublic static readonly INSTANCE: AltAndContextConfigEqualityComparator = new AltAndContextConfigEqualityComparator();\r\n\r\n\t\tprivate AltAndContextConfigEqualityComparator() {\r\n\t\t\t// intentionally empty\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The hash code is only a function of the {@link ATNState#stateNumber}\r\n\t\t * and {@link ATNConfig#context}.\r\n\t\t */\r\n\t\t@Override\r\n\t\tpublic hashCode(o: ATNConfig): number {\r\n\t\t\tlet hashCode: number = MurmurHash.initialize(7);\r\n\t\t\thashCode = MurmurHash.update(hashCode, o.state.stateNumber);\r\n\t\t\thashCode = MurmurHash.update(hashCode, o.context);\r\n\t\t\thashCode = MurmurHash.finish(hashCode, 2);\r\n\t\t\treturn hashCode;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(a: ATNConfig, b: ATNConfig): boolean {\r\n\t\t\tif (a === b) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (a == null || b == null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn a.state.stateNumber === b.state.stateNumber\r\n\t\t\t\t&& a.context.equals(b.context);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if any configuration in `configs` is in a\r\n\t * {@link RuleStopState}. Configurations meeting this condition have reached\r\n\t * the end of the decision rule (local context) or end of start rule (full\r\n\t * context).\r\n\t *\r\n\t * @param configs the configuration set to test\r\n\t * @returns `true` if any configuration in `configs` is in a\r\n\t * {@link RuleStopState}, otherwise `false`\r\n\t */\r\n\texport function hasConfigInRuleStopState(configs: ATNConfigSet): boolean {\r\n\t\tfor (let c of configs) {\r\n\t\t\tif (c.state instanceof RuleStopState) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all configurations in `configs` are in a\r\n\t * {@link RuleStopState}. Configurations meeting this condition have reached\r\n\t * the end of the decision rule (local context) or end of start rule (full\r\n\t * context).\r\n\t *\r\n\t * @param configs the configuration set to test\r\n\t * @returns `true` if all configurations in `configs` are in a\r\n\t * {@link RuleStopState}, otherwise `false`\r\n\t */\r\n\texport function allConfigsInRuleStopStates(/*@NotNull*/ configs: ATNConfigSet): boolean {\r\n\t\tfor (let config of configs) {\r\n\t\t\tif (!(config.state instanceof RuleStopState)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.4188352-07:00\r\n\r\nimport { AmbiguityInfo } from \"./AmbiguityInfo\";\r\nimport { ATN } from \"./ATN\";\r\nimport { ATNConfigSet } from \"./ATNConfigSet\";\r\nimport { ATNSimulator } from \"./ATNSimulator\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { ContextSensitivityInfo } from \"./ContextSensitivityInfo\";\r\nimport { DecisionInfo } from \"./DecisionInfo\";\r\nimport { DFA } from \"../dfa/DFA\";\r\nimport { DFAState } from \"../dfa/DFAState\";\r\nimport { ErrorInfo } from \"./ErrorInfo\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { LookaheadEventInfo } from \"./LookaheadEventInfo\";\r\nimport { Parser } from \"../Parser\";\r\nimport { ParserATNSimulator } from \"./ParserATNSimulator\";\r\nimport { ParserRuleContext } from \"../ParserRuleContext\";\r\nimport { PredicateEvalInfo } from \"./PredicateEvalInfo\";\r\nimport { PredictionContextCache } from \"./PredictionContextCache\";\r\nimport { SemanticContext } from \"./SemanticContext\";\r\nimport { SimulatorState } from \"./SimulatorState\";\r\nimport { TokenStream } from \"../TokenStream\";\r\n\r\n/**\r\n * @since 4.3\r\n */\r\nexport class ProfilingATNSimulator extends ParserATNSimulator {\r\n\tprotected decisions: DecisionInfo[];\r\n\tprotected numDecisions: number;\r\n\r\n\tprotected _input: TokenStream | undefined;\r\n\tprotected _startIndex: number = 0;\r\n\tprotected _sllStopIndex: number = 0;\r\n\tprotected _llStopIndex: number = 0;\r\n\r\n\tprotected currentDecision: number = 0;\r\n\tprotected currentState: SimulatorState | undefined;\r\n\r\n\t/** At the point of LL failover, we record how SLL would resolve the conflict so that\r\n\t *  we can determine whether or not a decision / input pair is context-sensitive.\r\n\t *  If LL gives a different result than SLL's predicted alternative, we have a\r\n\t *  context sensitivity for sure. The converse is not necessarily true, however.\r\n\t *  It's possible that after conflict resolution chooses minimum alternatives,\r\n\t *  SLL could get the same answer as LL. Regardless of whether or not the result indicates\r\n\t *  an ambiguity, it is not treated as a context sensitivity because LL prediction\r\n\t *  was not required in order to produce a correct prediction for this decision and input sequence.\r\n\t *  It may in fact still be a context sensitivity but we don't know by looking at the\r\n\t *  minimum alternatives for the current input.\r\n\t */\r\n\tprotected conflictingAltResolvedBySLL: number = 0;\r\n\r\n\tconstructor(parser: Parser) {\r\n\t\tsuper(parser.interpreter.atn, parser);\r\n\t\tthis.optimize_ll1 = false;\r\n\t\tthis.reportAmbiguities = true;\r\n\t\tthis.numDecisions = this.atn.decisionToState.length;\r\n\t\tthis.decisions = [];\r\n\t\tfor (let i = 0; i < this.numDecisions; i++) {\r\n\t\t\tthis.decisions.push(new DecisionInfo(i));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic adaptivePredict(/*@NotNull*/ input: TokenStream, decision: number, outerContext: ParserRuleContext | undefined): number;\r\n\tpublic adaptivePredict(/*@NotNull*/ input: TokenStream, decision: number, outerContext: ParserRuleContext | undefined, useContext: boolean): number;\r\n\t@Override\r\n\tpublic adaptivePredict(\r\n\t\t@NotNull input: TokenStream,\r\n\t\tdecision: number,\r\n\t\touterContext: ParserRuleContext | undefined,\r\n\t\tuseContext?: boolean): number {\r\n\t\tif (useContext !== undefined) {\r\n\t\t\treturn super.adaptivePredict(input, decision, outerContext, useContext);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tthis._input = input;\r\n\t\t\tthis._startIndex = input.index;\r\n\t\t\t// it's possible for SLL to reach a conflict state without consuming any input\r\n\t\t\tthis._sllStopIndex = this._startIndex - 1;\r\n\t\t\tthis._llStopIndex = -1;\r\n\t\t\tthis.currentDecision = decision;\r\n\t\t\tthis.currentState = undefined;\r\n\t\t\tthis.conflictingAltResolvedBySLL = ATN.INVALID_ALT_NUMBER;\r\n\t\t\tlet start: number[] = process.hrtime();\r\n\t\t\tlet alt: number = super.adaptivePredict(input, decision, outerContext);\r\n\t\t\tlet stop: number[] = process.hrtime();\r\n\r\n\t\t\tlet nanoseconds: number = (stop[0] - start[0]) * 1000000000;\r\n\t\t\tif (nanoseconds === 0) {\r\n\t\t\t\tnanoseconds = stop[1] - start[1];\r\n\t\t\t} else {\r\n\t\t\t\t// Add nanoseconds from start to end of that second, plus start of the end second to end\r\n\t\t\t\tnanoseconds += (1000000000 - start[1]) + stop[1];\r\n\t\t\t}\r\n\r\n\t\t\tthis.decisions[decision].timeInPrediction += nanoseconds;\r\n\t\t\tthis.decisions[decision].invocations++;\r\n\r\n\t\t\tlet SLL_k: number = this._sllStopIndex - this._startIndex + 1;\r\n\t\t\tthis.decisions[decision].SLL_TotalLook += SLL_k;\r\n\t\t\tthis.decisions[decision].SLL_MinLook = this.decisions[decision].SLL_MinLook === 0 ? SLL_k : Math.min(this.decisions[decision].SLL_MinLook, SLL_k);\r\n\t\t\tif (SLL_k > this.decisions[decision].SLL_MaxLook) {\r\n\t\t\t\tthis.decisions[decision].SLL_MaxLook = SLL_k;\r\n\t\t\t\tthis.decisions[decision].SLL_MaxLookEvent =\r\n\t\t\t\t\tnew LookaheadEventInfo(decision, undefined, alt, input, this._startIndex, this._sllStopIndex, false);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._llStopIndex >= 0) {\r\n\t\t\t\tlet LL_k: number = this._llStopIndex - this._startIndex + 1;\r\n\t\t\t\tthis.decisions[decision].LL_TotalLook += LL_k;\r\n\t\t\t\tthis.decisions[decision].LL_MinLook = this.decisions[decision].LL_MinLook === 0 ? LL_k : Math.min(this.decisions[decision].LL_MinLook, LL_k);\r\n\t\t\t\tif (LL_k > this.decisions[decision].LL_MaxLook) {\r\n\t\t\t\t\tthis.decisions[decision].LL_MaxLook = LL_k;\r\n\t\t\t\t\tthis.decisions[decision].LL_MaxLookEvent =\r\n\t\t\t\t\t\tnew LookaheadEventInfo(decision, undefined, alt, input, this._startIndex, this._llStopIndex, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn alt;\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis._input = undefined;\r\n\t\t\tthis.currentDecision = -1;\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tprotected getStartState(dfa: DFA, input: TokenStream, outerContext: ParserRuleContext, useContext: boolean): SimulatorState | undefined {\r\n\t\tlet state: SimulatorState | undefined = super.getStartState(dfa, input, outerContext, useContext);\r\n\t\tthis.currentState = state;\r\n\t\treturn state;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected computeStartState(dfa: DFA, globalContext: ParserRuleContext, useContext: boolean): SimulatorState {\r\n\t\tlet state: SimulatorState = super.computeStartState(dfa, globalContext, useContext);\r\n\t\tthis.currentState = state;\r\n\t\treturn state;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected computeReachSet(dfa: DFA, previous: SimulatorState, t: number, contextCache: PredictionContextCache): SimulatorState | undefined {\r\n\t\tif (this._input === undefined) {\r\n\t\t\tthrow new Error(\"Invalid state\");\r\n\t\t}\r\n\r\n\t\tlet reachState: SimulatorState | undefined = super.computeReachSet(dfa, previous, t, contextCache);\r\n\t\tif (reachState == null) {\r\n\t\t\t// no reach on current lookahead symbol. ERROR.\r\n\t\t\tthis.decisions[this.currentDecision].errors.push(\r\n\t\t\t\tnew ErrorInfo(this.currentDecision, previous, this._input, this._startIndex, this._input.index),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.currentState = reachState;\r\n\t\treturn reachState;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected getExistingTargetState(previousD: DFAState, t: number): DFAState | undefined {\r\n\t\tif (this.currentState === undefined || this._input === undefined) {\r\n\t\t\tthrow new Error(\"Invalid state\");\r\n\t\t}\r\n\r\n\t\t// this method is called after each time the input position advances\r\n\t\tif (this.currentState.useContext) {\r\n\t\t\tthis._llStopIndex = this._input.index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._sllStopIndex = this._input.index;\r\n\t\t}\r\n\r\n\t\tlet existingTargetState: DFAState | undefined = super.getExistingTargetState(previousD, t);\r\n\t\tif (existingTargetState != null) {\r\n\t\t\t// this method is directly called by execDFA; must construct a SimulatorState\r\n\t\t\t// to represent the current state for this case\r\n\t\t\tthis.currentState = new SimulatorState(this.currentState.outerContext, existingTargetState, this.currentState.useContext, this.currentState.remainingOuterContext);\r\n\r\n\t\t\tif (this.currentState.useContext) {\r\n\t\t\t\tthis.decisions[this.currentDecision].LL_DFATransitions++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.decisions[this.currentDecision].SLL_DFATransitions++; // count only if we transition over a DFA state\r\n\t\t\t}\r\n\r\n\t\t\tif (existingTargetState === ATNSimulator.ERROR) {\r\n\t\t\t\tlet state: SimulatorState = new SimulatorState(this.currentState.outerContext, previousD, this.currentState.useContext, this.currentState.remainingOuterContext);\r\n\t\t\t\tthis.decisions[this.currentDecision].errors.push(\r\n\t\t\t\t\tnew ErrorInfo(this.currentDecision, state, this._input, this._startIndex, this._input.index),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn existingTargetState;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected computeTargetState(dfa: DFA, s: DFAState, remainingGlobalContext: ParserRuleContext, t: number, useContext: boolean, contextCache: PredictionContextCache): [DFAState, ParserRuleContext | undefined] {\r\n\t\tlet targetState: [DFAState, ParserRuleContext | undefined] = super.computeTargetState(dfa, s, remainingGlobalContext, t, useContext, contextCache);\r\n\r\n\t\tif (useContext) {\r\n\t\t\tthis.decisions[this.currentDecision].LL_ATNTransitions++;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.decisions[this.currentDecision].SLL_ATNTransitions++;\r\n\t\t}\r\n\r\n\t\treturn targetState;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected evalSemanticContextImpl(pred: SemanticContext, parserCallStack: ParserRuleContext, alt: number): boolean {\r\n\t\tif (this.currentState === undefined || this._input === undefined) {\r\n\t\t\tthrow new Error(\"Invalid state\");\r\n\t\t}\r\n\r\n\t\tlet result: boolean = super.evalSemanticContextImpl(pred, parserCallStack, alt);\r\n\t\tif (!(pred instanceof SemanticContext.PrecedencePredicate)) {\r\n\t\t\tlet fullContext: boolean = this._llStopIndex >= 0;\r\n\t\t\tlet stopIndex: number = fullContext ? this._llStopIndex : this._sllStopIndex;\r\n\t\t\tthis.decisions[this.currentDecision].predicateEvals.push(\r\n\t\t\t\tnew PredicateEvalInfo(this.currentState, this.currentDecision, this._input, this._startIndex, stopIndex, pred, result, alt),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected reportContextSensitivity(dfa: DFA, prediction: number, acceptState: SimulatorState, startIndex: number, stopIndex: number): void {\r\n\t\tif (this._input === undefined) {\r\n\t\t\tthrow new Error(\"Invalid state\");\r\n\t\t}\r\n\r\n\t\tif (prediction !== this.conflictingAltResolvedBySLL) {\r\n\t\t\tthis.decisions[this.currentDecision].contextSensitivities.push(\r\n\t\t\t\tnew ContextSensitivityInfo(this.currentDecision, acceptState, this._input, startIndex, stopIndex),\r\n\t\t\t);\r\n\t\t}\r\n\t\tsuper.reportContextSensitivity(dfa, prediction, acceptState, startIndex, stopIndex);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected reportAttemptingFullContext(dfa: DFA, conflictingAlts: BitSet, conflictState: SimulatorState, startIndex: number, stopIndex: number): void {\r\n\t\tif (conflictingAlts != null) {\r\n\t\t\tthis.conflictingAltResolvedBySLL = conflictingAlts.nextSetBit(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.conflictingAltResolvedBySLL = conflictState.s0.configs.getRepresentedAlternatives().nextSetBit(0);\r\n\t\t}\r\n\t\tthis.decisions[this.currentDecision].LL_Fallback++;\r\n\t\tsuper.reportAttemptingFullContext(dfa, conflictingAlts, conflictState, startIndex, stopIndex);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected reportAmbiguity(@NotNull dfa: DFA, D: DFAState, startIndex: number, stopIndex: number, exact: boolean, @NotNull ambigAlts: BitSet, @NotNull configs: ATNConfigSet): void {\r\n\t\tif (this.currentState === undefined || this._input === undefined) {\r\n\t\t\tthrow new Error(\"Invalid state\");\r\n\t\t}\r\n\r\n\t\tlet prediction: number;\r\n\t\tif (ambigAlts != null) {\r\n\t\t\tprediction = ambigAlts.nextSetBit(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprediction = configs.getRepresentedAlternatives().nextSetBit(0);\r\n\t\t}\r\n\t\tif (this.conflictingAltResolvedBySLL !== ATN.INVALID_ALT_NUMBER && prediction !== this.conflictingAltResolvedBySLL) {\r\n\t\t\t// Even though this is an ambiguity we are reporting, we can\r\n\t\t\t// still detect some context sensitivities.  Both SLL and LL\r\n\t\t\t// are showing a conflict, hence an ambiguity, but if they resolve\r\n\t\t\t// to different minimum alternatives we have also identified a\r\n\t\t\t// context sensitivity.\r\n\t\t\tthis.decisions[this.currentDecision].contextSensitivities.push(\r\n\t\t\t\tnew ContextSensitivityInfo(this.currentDecision, this.currentState, this._input, startIndex, stopIndex),\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis.decisions[this.currentDecision].ambiguities.push(\r\n\t\t\tnew AmbiguityInfo(this.currentDecision, this.currentState, ambigAlts, this._input, startIndex, stopIndex),\r\n\t\t);\r\n\t\tsuper.reportAmbiguity(dfa, D, startIndex, stopIndex, exact, ambigAlts, configs);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tpublic getDecisionInfo(): DecisionInfo[] {\r\n\t\treturn this.decisions;\r\n\t}\r\n\r\n\tpublic getCurrentState(): SimulatorState | undefined {\r\n\t\treturn this.currentState;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.5959980-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\nexport class RangeTransition extends Transition {\r\n\tpublic from: number;\r\n\tpublic to: number;\r\n\r\n\tconstructor(@NotNull target: ATNState, from: number, to: number) {\r\n\t\tsuper(target);\r\n\t\tthis.from = from;\r\n\t\tthis.to = to;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.RANGE;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tget label(): IntervalSet {\r\n\t\treturn IntervalSet.of(this.from, this.to);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn symbol >= this.from && symbol <= this.to;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn \"'\" + String.fromCodePoint(this.from) + \"'..'\" + String.fromCodePoint(this.to) + \"'\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.6806851-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { Override } from \"../Decorators\";\r\nimport { RuleStopState } from \"./RuleStopState\";\r\n\r\nexport class RuleStartState extends ATNState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic stopState!: RuleStopState;\r\n\tpublic isPrecedenceRule: boolean = false;\r\n\tpublic leftFactored: boolean = false;\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.RULE_START;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.7513856-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** The last node in the ATN for a rule, unless that rule is the start symbol.\r\n *  In that case, there is one transition to EOF. Later, we might encode\r\n *  references to all calls to this rule to compute FOLLOW sets for\r\n *  error handling.\r\n */\r\nexport class RuleStopState extends ATNState {\r\n\r\n\t@Override\r\n\tget nonStopStateNumber(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.RULE_STOP;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.8294453-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { RuleStartState } from \"./RuleStartState\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/** */\r\nexport class RuleTransition extends Transition {\r\n\t/** Ptr to the rule definition object for this rule ref */\r\n\tpublic ruleIndex: number;      // no Rule object at runtime\r\n\r\n\tpublic precedence: number;\r\n\r\n\t/** What node to begin computations following ref to rule */\r\n\t@NotNull\r\n\tpublic followState: ATNState;\r\n\r\n\tpublic tailCall: boolean = false;\r\n\tpublic optimizedTailCall: boolean = false;\r\n\r\n\tconstructor(@NotNull ruleStart: RuleStartState, ruleIndex: number, precedence: number, @NotNull followState: ATNState) {\r\n\t\tsuper(ruleStart);\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t\tthis.precedence = precedence;\r\n\t\tthis.followState = followState;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.RULE;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEpsilon(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn false;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:36.9521478-07:00\r\n\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { ArrayEqualityComparator } from \"../misc/ArrayEqualityComparator\";\r\nimport { Comparable } from \"../misc/Stubs\";\r\nimport { Equatable } from \"../misc/Stubs\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { Recognizer } from \"../Recognizer\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport * as Utils from \"../misc/Utils\";\r\n\r\nfunction max<T extends Comparable<T>>(items: Iterable<T>): T | undefined {\r\n\tlet result: T | undefined;\r\n\tfor (let current of items) {\r\n\t\tif (result === undefined) {\r\n\t\t\tresult = current;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tlet comparison = result.compareTo(current);\r\n\t\tif (comparison < 0) {\r\n\t\t\tresult = current;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction min<T extends Comparable<T>>(items: Iterable<T>): T | undefined {\r\n\tlet result: T | undefined;\r\n\tfor (let current of items) {\r\n\t\tif (result === undefined) {\r\n\t\t\tresult = current;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tlet comparison = result.compareTo(current);\r\n\t\tif (comparison > 0) {\r\n\t\t\tresult = current;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n/** A tree structure used to record the semantic context in which\r\n *  an ATN configuration is valid.  It's either a single predicate,\r\n *  a conjunction `p1&&p2`, or a sum of products `p1||p2`.\r\n *\r\n *  I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\r\n *  {@link SemanticContext} within the scope of this outer class.\r\n */\r\nexport abstract class SemanticContext implements Equatable {\r\n\tprivate static _NONE: SemanticContext;\r\n\r\n\t/**\r\n\t * The default {@link SemanticContext}, which is semantically equivalent to\r\n\t * a predicate of the form `{true}?`.\r\n\t */\r\n\tstatic get NONE(): SemanticContext {\r\n\t\tif (SemanticContext._NONE === undefined) {\r\n\t\t\tSemanticContext._NONE = new SemanticContext.Predicate();\r\n\t\t}\r\n\r\n\t\treturn SemanticContext._NONE;\r\n\t}\r\n\r\n\t/**\r\n\t * For context independent predicates, we evaluate them without a local\r\n\t * context (i.e., unedfined context). That way, we can evaluate them without\r\n\t * having to create proper rule-specific context during prediction (as\r\n\t * opposed to the parser, which creates them naturally). In a practical\r\n\t * sense, this avoids a cast exception from RuleContext to myruleContext.\r\n\t *\r\n\t * For context dependent predicates, we must pass in a local context so that\r\n\t * references such as $arg evaluate properly as _localctx.arg. We only\r\n\t * capture context dependent predicates in the context in which we begin\r\n\t * prediction, so we passed in the outer context here in case of context\r\n\t * dependent predicate evaluation.\r\n\t */\r\n\tpublic abstract eval<T>(parser: Recognizer<T, any>, parserCallStack: RuleContext): boolean;\r\n\r\n\t/**\r\n\t * Evaluate the precedence predicates for the context and reduce the result.\r\n\t *\r\n\t * @param parser The parser instance.\r\n\t * @param parserCallStack\r\n\t * @returns The simplified semantic context after precedence predicates are\r\n\t * evaluated, which will be one of the following values.\r\n\t *\r\n\t * * {@link #NONE}: if the predicate simplifies to `true` after\r\n\t *   precedence predicates are evaluated.\r\n\t * * `undefined`: if the predicate simplifies to `false` after\r\n\t *   precedence predicates are evaluated.\r\n\t * * `this`: if the semantic context is not changed as a result of\r\n\t *   precedence predicate evaluation.\r\n\t * * A non-`undefined` {@link SemanticContext}: the new simplified\r\n\t *   semantic context after precedence predicates are evaluated.\r\n\t */\r\n\tpublic evalPrecedence(parser: Recognizer<any, any>, parserCallStack: RuleContext): SemanticContext | undefined {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic abstract hashCode(): number;\r\n\r\n\tpublic abstract equals(obj: any): boolean;\r\n\r\n\tpublic static and(a: SemanticContext | undefined, b: SemanticContext): SemanticContext {\r\n\t\tif (!a || a === SemanticContext.NONE) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif (b === SemanticContext.NONE) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet result: SemanticContext.AND = new SemanticContext.AND(a, b);\r\n\t\tif (result.opnds.length === 1) {\r\n\t\t\treturn result.opnds[0];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t *  @see ParserATNSimulator#getPredsForAmbigAlts\r\n\t */\r\n\tpublic static or(a: SemanticContext | undefined, b: SemanticContext): SemanticContext {\r\n\t\tif (!a) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\r\n\t\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\r\n\t\t\treturn SemanticContext.NONE;\r\n\t\t}\r\n\t\tlet result: SemanticContext.OR = new SemanticContext.OR(a, b);\r\n\t\tif (result.opnds.length === 1) {\r\n\t\t\treturn result.opnds[0];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport namespace SemanticContext {\r\n\t/**\r\n\t * This random 30-bit prime represents the value of `AND.class.hashCode()`.\r\n\t */\r\n\tconst AND_HASHCODE = 40363613;\r\n\t/**\r\n\t * This random 30-bit prime represents the value of `OR.class.hashCode()`.\r\n\t */\r\n\tconst OR_HASHCODE = 486279973;\r\n\r\n\tfunction filterPrecedencePredicates(collection: SemanticContext[]): SemanticContext.PrecedencePredicate[] {\r\n\t\tlet result: SemanticContext.PrecedencePredicate[] = [];\r\n\t\tfor (let i = 0; i < collection.length; i++) {\r\n\t\t\tlet context: SemanticContext = collection[i];\r\n\t\t\tif (context instanceof SemanticContext.PrecedencePredicate) {\r\n\t\t\t\tresult.push(context);\r\n\r\n\t\t\t\t// Remove the item from 'collection' and move i back so we look at the same index again\r\n\t\t\t\tcollection.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\texport class Predicate extends SemanticContext {\r\n\t\tpublic ruleIndex: number;\r\n\t\tpublic predIndex: number;\r\n\t\tpublic isCtxDependent: boolean;   // e.g., $i ref in pred\r\n\r\n\t\tconstructor();\r\n\t\tconstructor(ruleIndex: number, predIndex: number, isCtxDependent: boolean);\r\n\r\n\t\tconstructor(ruleIndex: number = -1, predIndex: number = -1, isCtxDependent: boolean = false) {\r\n\t\t\tsuper();\r\n\t\t\tthis.ruleIndex = ruleIndex;\r\n\t\t\tthis.predIndex = predIndex;\r\n\t\t\tthis.isCtxDependent = isCtxDependent;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic eval<T>(parser: Recognizer<T, any>, parserCallStack: RuleContext): boolean {\r\n\t\t\tlet localctx: RuleContext | undefined = this.isCtxDependent ? parserCallStack : undefined;\r\n\t\t\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\tlet hashCode: number = MurmurHash.initialize();\r\n\t\t\thashCode = MurmurHash.update(hashCode, this.ruleIndex);\r\n\t\t\thashCode = MurmurHash.update(hashCode, this.predIndex);\r\n\t\t\thashCode = MurmurHash.update(hashCode, this.isCtxDependent ? 1 : 0);\r\n\t\t\thashCode = MurmurHash.finish(hashCode, 3);\r\n\t\t\treturn hashCode;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(obj: any): boolean {\r\n\t\t\tif (!(obj instanceof Predicate)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this === obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn this.ruleIndex === obj.ruleIndex &&\r\n\t\t\t\tthis.predIndex === obj.predIndex &&\r\n\t\t\t\tthis.isCtxDependent === obj.isCtxDependent;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic toString(): string {\r\n\t\t\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\r\n\t\t}\r\n\t}\r\n\r\n\texport class PrecedencePredicate extends SemanticContext implements Comparable<PrecedencePredicate> {\r\n\t\tpublic precedence: number;\r\n\r\n\t\tconstructor(precedence: number) {\r\n\t\t\tsuper();\r\n\t\t\tthis.precedence = precedence;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic eval<T>(parser: Recognizer<T, any>, parserCallStack: RuleContext): boolean {\r\n\t\t\treturn parser.precpred(parserCallStack, this.precedence);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic evalPrecedence(parser: Recognizer<any, any>, parserCallStack: RuleContext): SemanticContext | undefined {\r\n\t\t\tif (parser.precpred(parserCallStack, this.precedence)) {\r\n\t\t\t\treturn SemanticContext.NONE;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic compareTo(o: PrecedencePredicate): number {\r\n\t\t\treturn this.precedence - o.precedence;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\tlet hashCode: number = 1;\r\n\t\t\thashCode = 31 * hashCode + this.precedence;\r\n\t\t\treturn hashCode;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(obj: any): boolean {\r\n\t\t\tif (!(obj instanceof PrecedencePredicate)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this === obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.precedence === obj.precedence;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\t// precedence >= _precedenceStack.peek()\r\n\t\tpublic toString(): string {\r\n\t\t\treturn \"{\" + this.precedence + \">=prec}?\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This is the base class for semantic context \"operators\", which operate on\r\n\t * a collection of semantic context \"operands\".\r\n\t *\r\n\t * @since 4.3\r\n\t */\r\n\texport abstract class Operator extends SemanticContext {\r\n\t\t/**\r\n\t\t * Gets the operands for the semantic context operator.\r\n\t\t *\r\n\t\t * @returns a collection of {@link SemanticContext} operands for the\r\n\t\t * operator.\r\n\t\t *\r\n\t\t * @since 4.3\r\n\t\t */\r\n\t\t// @NotNull\r\n\t\tpublic abstract readonly operands: Iterable<SemanticContext>;\r\n\t}\r\n\r\n\t/**\r\n\t * A semantic context which is true whenever none of the contained contexts\r\n\t * is false.\r\n\t */\r\n\texport class AND extends Operator {\r\n\t\tpublic opnds: SemanticContext[];\r\n\r\n\t\tconstructor(@NotNull a: SemanticContext, @NotNull b: SemanticContext) {\r\n\t\t\tsuper();\r\n\r\n\t\t\tlet operands: Array2DHashSet<SemanticContext> = new Array2DHashSet<SemanticContext>(ObjectEqualityComparator.INSTANCE);\r\n\t\t\tif (a instanceof AND) {\r\n\t\t\t\toperands.addAll(a.opnds);\r\n\t\t\t} else {\r\n\t\t\t\toperands.add(a);\r\n\t\t\t}\r\n\r\n\t\t\tif (b instanceof AND) {\r\n\t\t\t\toperands.addAll(b.opnds);\r\n\t\t\t} else {\r\n\t\t\t\toperands.add(b);\r\n\t\t\t}\r\n\r\n\t\t\tthis.opnds = operands.toArray();\r\n\t\t\tlet precedencePredicates: PrecedencePredicate[] = filterPrecedencePredicates(this.opnds);\r\n\r\n\t\t\t// interested in the transition with the lowest precedence\r\n\t\t\tlet reduced = min(precedencePredicates);\r\n\t\t\tif (reduced) {\r\n\t\t\t\tthis.opnds.push(reduced);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tget operands(): Iterable<SemanticContext> {\r\n\t\t\treturn this.opnds;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(obj: any): boolean {\r\n\t\t\tif (this === obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (!(obj instanceof AND)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn ArrayEqualityComparator.INSTANCE.equals(this.opnds, obj.opnds);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\treturn MurmurHash.hashCode(this.opnds, AND_HASHCODE);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * {@inheritDoc}\r\n\t\t *\r\n\t\t * The evaluation of predicates by this context is short-circuiting, but\r\n\t\t * unordered.\r\n\t\t */\r\n\t\t@Override\r\n\t\tpublic eval<T>(parser: Recognizer<T, any>, parserCallStack: RuleContext): boolean {\r\n\t\t\tfor (let opnd of this.opnds) {\r\n\t\t\t\tif (!opnd.eval(parser, parserCallStack)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic evalPrecedence(parser: Recognizer<any, any>, parserCallStack: RuleContext): SemanticContext | undefined {\r\n\t\t\tlet differs: boolean = false;\r\n\t\t\tlet operands: SemanticContext[] = [];\r\n\t\t\tfor (let context of this.opnds) {\r\n\t\t\t\tlet evaluated: SemanticContext | undefined = context.evalPrecedence(parser, parserCallStack);\r\n\t\t\t\tdiffers = differs || (evaluated !== context);\r\n\t\t\t\tif (evaluated == null) {\r\n\t\t\t\t\t// The AND context is false if any element is false\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\telse if (evaluated !== SemanticContext.NONE) {\r\n\t\t\t\t\t// Reduce the result by skipping true elements\r\n\t\t\t\t\toperands.push(evaluated);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!differs) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (operands.length === 0) {\r\n\t\t\t\t// all elements were true, so the AND context is true\r\n\t\t\t\treturn SemanticContext.NONE;\r\n\t\t\t}\r\n\r\n\t\t\tlet result: SemanticContext = operands[0];\r\n\t\t\tfor (let i = 1; i < operands.length; i++) {\r\n\t\t\t\tresult = SemanticContext.and(result, operands[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic toString(): string {\r\n\t\t\treturn Utils.join(this.opnds, \"&&\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A semantic context which is true whenever at least one of the contained\r\n\t * contexts is true.\r\n\t */\r\n\texport class OR extends Operator {\r\n\t\tpublic opnds: SemanticContext[];\r\n\r\n\t\tconstructor(@NotNull a: SemanticContext, @NotNull b: SemanticContext) {\r\n\t\t\tsuper();\r\n\r\n\t\t\tlet operands: Array2DHashSet<SemanticContext> = new Array2DHashSet<SemanticContext>(ObjectEqualityComparator.INSTANCE);\r\n\t\t\tif (a instanceof OR) {\r\n\t\t\t\toperands.addAll(a.opnds);\r\n\t\t\t} else {\r\n\t\t\t\toperands.add(a);\r\n\t\t\t}\r\n\r\n\t\t\tif (b instanceof OR) {\r\n\t\t\t\toperands.addAll(b.opnds);\r\n\t\t\t} else {\r\n\t\t\t\toperands.add(b);\r\n\t\t\t}\r\n\r\n\t\t\tthis.opnds = operands.toArray();\r\n\t\t\tlet precedencePredicates: PrecedencePredicate[] = filterPrecedencePredicates(this.opnds);\r\n\r\n\t\t\t// interested in the transition with the highest precedence\r\n\t\t\tlet reduced = max(precedencePredicates);\r\n\t\t\tif (reduced) {\r\n\t\t\t\tthis.opnds.push(reduced);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tget operands(): Iterable<SemanticContext> {\r\n\t\t\treturn this.opnds;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic equals(obj: any): boolean {\r\n\t\t\tif (this === obj) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (!(obj instanceof OR)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn ArrayEqualityComparator.INSTANCE.equals(this.opnds, obj.opnds);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic hashCode(): number {\r\n\t\t\treturn MurmurHash.hashCode(this.opnds, OR_HASHCODE);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * {@inheritDoc}\r\n\t\t *\r\n\t\t * The evaluation of predicates by this context is short-circuiting, but\r\n\t\t * unordered.\r\n\t\t */\r\n\t\t@Override\r\n\t\tpublic eval<T>(parser: Recognizer<T, any>, parserCallStack: RuleContext): boolean {\r\n\t\t\tfor (let opnd of this.opnds) {\r\n\t\t\t\tif (opnd.eval(parser, parserCallStack)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic evalPrecedence(parser: Recognizer<any, any>, parserCallStack: RuleContext): SemanticContext | undefined {\r\n\t\t\tlet differs: boolean = false;\r\n\t\t\tlet operands: SemanticContext[] = [];\r\n\t\t\tfor (let context of this.opnds) {\r\n\t\t\t\tlet evaluated: SemanticContext | undefined = context.evalPrecedence(parser, parserCallStack);\r\n\t\t\t\tdiffers = differs || (evaluated !== context);\r\n\t\t\t\tif (evaluated === SemanticContext.NONE) {\r\n\t\t\t\t\t// The OR context is true if any element is true\r\n\t\t\t\t\treturn SemanticContext.NONE;\r\n\t\t\t\t} else if (evaluated) {\r\n\t\t\t\t\t// Reduce the result by skipping false elements\r\n\t\t\t\t\toperands.push(evaluated);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!differs) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (operands.length === 0) {\r\n\t\t\t\t// all elements were false, so the OR context is false\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\tlet result: SemanticContext = operands[0];\r\n\t\t\tfor (let i = 1; i < operands.length; i++) {\r\n\t\t\t\tresult = SemanticContext.or(result, operands[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic toString(): string {\r\n\t\t\treturn Utils.join(this.opnds, \"||\");\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.3060135-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { Override, NotNull, Nullable } from \"../Decorators\";\r\nimport { Token } from \"../Token\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/** A transition containing a set of values. */\r\nexport class SetTransition extends Transition {\r\n\t@NotNull\r\n\tpublic set: IntervalSet;\r\n\r\n\t// TODO (sam): should we really allow undefined here?\r\n\tconstructor(@NotNull target: ATNState, @Nullable set: IntervalSet) {\r\n\t\tsuper(target);\r\n\t\tif (set == null) {\r\n\t\t\tset = IntervalSet.of(Token.INVALID_TYPE);\r\n\t\t}\r\n\r\n\t\tthis.set = set;\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.SET;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tget label(): IntervalSet {\r\n\t\treturn this.set;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn this.set.contains(symbol);\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn this.set.toString();\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.3871984-07:00\r\n\r\nimport { DFAState } from \"../dfa/DFAState\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { ParserRuleContext } from \"../ParserRuleContext\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class SimulatorState {\r\n\tpublic outerContext: ParserRuleContext;\r\n\r\n\tpublic s0: DFAState;\r\n\r\n\tpublic useContext: boolean;\r\n\tpublic remainingOuterContext: ParserRuleContext | undefined;\r\n\r\n\tconstructor(outerContext: ParserRuleContext, @NotNull s0: DFAState, useContext: boolean, remainingOuterContext: ParserRuleContext | undefined) {\r\n\t\tthis.outerContext = outerContext != null ? outerContext : ParserRuleContext.emptyContext();\r\n\t\tthis.s0 = s0;\r\n\t\tthis.useContext = useContext;\r\n\t\tthis.remainingOuterContext = remainingOuterContext;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.5657409-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BlockStartState } from \"./BlockStartState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** The block that begins a closure loop. */\r\nexport class StarBlockStartState extends BlockStartState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.STAR_BLOCK_START;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.7099201-07:00\r\n\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { Override } from \"../Decorators\";\r\nimport { StarLoopbackState } from \"./StarLoopbackState\";\r\n\r\nexport class StarLoopEntryState extends DecisionState {\r\n\t// This is always set during ATN deserialization\r\n\tpublic loopBackState!: StarLoopbackState;\r\n\r\n\t/**\r\n\t * Indicates whether this state can benefit from a precedence DFA during SLL\r\n\t * decision making.\r\n\t *\r\n\t * This is a computed property that is calculated during ATN deserialization\r\n\t * and stored for use in {@link ParserATNSimulator} and\r\n\t * {@link ParserInterpreter}.\r\n\t *\r\n\t * @see `DFA.isPrecedenceDfa`\r\n\t */\r\n\tpublic precedenceRuleDecision: boolean = false;\r\n\r\n\t/**\r\n\t * For precedence decisions, this set marks states *S* which have all\r\n\t * of the following characteristics:\r\n\t *\r\n\t * * One or more invocation sites of the current rule returns to\r\n\t *   *S*.\r\n\t * * The closure from *S* includes the current decision without\r\n\t *   passing through any rule invocations or stepping out of the current\r\n\t *   rule.\r\n\t *\r\n\t * This field is not used when {@link #precedenceRuleDecision} is\r\n\t * `false`.\r\n\t */\r\n\tpublic precedenceLoopbackStates: BitSet = new BitSet();\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.STAR_LOOP_ENTRY;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.6368726-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { Override } from \"../Decorators\";\r\nimport { StarLoopEntryState } from \"./StarLoopEntryState\";\r\n\r\nexport class StarLoopbackState extends ATNState {\r\n\tget loopEntryState(): StarLoopEntryState {\r\n\t\treturn this.transition(0).target as StarLoopEntryState;\r\n\t}\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.STAR_LOOP_BACK;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.7814046-07:00\r\n\r\nimport { ATNStateType } from \"./ATNStateType\";\r\nimport { DecisionState } from \"./DecisionState\";\r\nimport { Override } from \"../Decorators\";\r\n\r\n/** The Tokens rule start state linking to each lexer rule start state */\r\nexport class TokensStartState extends DecisionState {\r\n\r\n\t@Override\r\n\tget stateType(): ATNStateType {\r\n\t\treturn ATNStateType.TOKEN_START;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.8530496-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { IntervalSet } from \"../misc/IntervalSet\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\n/** An ATN transition between any two ATN states.  Subclasses define\r\n *  atom, set, epsilon, action, predicate, rule transitions.\r\n *\r\n *  This is a one way link.  It emanates from a state (usually via a list of\r\n *  transitions) and has a target state.\r\n *\r\n *  Since we never have to change the ATN transitions once we construct it,\r\n *  we can fix these transitions as specific classes. The DFA transitions\r\n *  on the other hand need to update the labels as it adds transitions to\r\n *  the states. We'll use the term Edge for the DFA to distinguish them from\r\n *  ATN transitions.\r\n */\r\nexport abstract class Transition {\r\n\tpublic static readonly serializationNames: string[] = [\r\n\t\t\"INVALID\",\r\n\t\t\"EPSILON\",\r\n\t\t\"RANGE\",\r\n\t\t\"RULE\",\r\n\t\t\"PREDICATE\",\r\n\t\t\"ATOM\",\r\n\t\t\"ACTION\",\r\n\t\t\"SET\",\r\n\t\t\"NOT_SET\",\r\n\t\t\"WILDCARD\",\r\n\t\t\"PRECEDENCE\",\r\n\t];\r\n\r\n\t// @SuppressWarnings(\"serial\")\r\n\t// static serializationTypes: Map<Class<? extends Transition>, number> =\r\n\t// \tCollections.unmodifiableMap(new HashMap<Class<? extends Transition>, Integer>() {{\r\n\t// \t\tput(EpsilonTransition.class, EPSILON);\r\n\t// \t\tput(RangeTransition.class, RANGE);\r\n\t// \t\tput(RuleTransition.class, RULE);\r\n\t// \t\tput(PredicateTransition.class, PREDICATE);\r\n\t// \t\tput(AtomTransition.class, ATOM);\r\n\t// \t\tput(ActionTransition.class, ACTION);\r\n\t// \t\tput(SetTransition.class, SET);\r\n\t// \t\tput(NotSetTransition.class, NOT_SET);\r\n\t// \t\tput(WildcardTransition.class, WILDCARD);\r\n\t// \t\tput(PrecedencePredicateTransition.class, PRECEDENCE);\r\n\t// \t}});\r\n\r\n\t/** The target of this transition. */\r\n\t@NotNull\r\n\tpublic target: ATNState;\r\n\r\n\tconstructor(@NotNull target: ATNState) {\r\n\t\tif (target == null) {\r\n\t\t\tthrow new Error(\"target cannot be null.\");\r\n\t\t}\r\n\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\tpublic abstract readonly serializationType: TransitionType;\r\n\r\n\t/**\r\n\t * Determines if the transition is an \"epsilon\" transition.\r\n\t *\r\n\t * The default implementation returns `false`.\r\n\t *\r\n\t * @returns `true` if traversing this transition in the ATN does not\r\n\t * consume an input symbol; otherwise, `false` if traversing this\r\n\t * transition consumes (matches) an input symbol.\r\n\t */\r\n\tget isEpsilon(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget label(): IntervalSet | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic abstract matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:37.9456839-07:00\r\n\r\nimport { ATNState } from \"./ATNState\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Transition } from \"./Transition\";\r\nimport { TransitionType } from \"./TransitionType\";\r\n\r\nexport class WildcardTransition extends Transition {\r\n\tconstructor(@NotNull target: ATNState) {\r\n\t\tsuper(target);\r\n\t}\r\n\r\n\t@Override\r\n\tget serializationType(): TransitionType {\r\n\t\treturn TransitionType.WILDCARD;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\r\n\t\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tpublic toString(): string {\r\n\t\treturn \".\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:38.1172076-07:00\r\n\r\nimport { LexerActionExecutor } from \"../atn/LexerActionExecutor\";\r\n\r\n/**\r\n * Stores information about a {@link DFAState} which is an accept state under\r\n * some condition. Certain settings, such as\r\n * {@link ParserATNSimulator#getPredictionMode()}, may be used in addition to\r\n * this information to determine whether or not a particular state is an accept\r\n * state.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class AcceptStateInfo {\r\n\tprivate readonly _prediction: number;\r\n\tprivate readonly _lexerActionExecutor?: LexerActionExecutor;\r\n\r\n\tconstructor(prediction: number);\r\n\tconstructor(prediction: number, lexerActionExecutor: LexerActionExecutor | undefined);\r\n\tconstructor(prediction: number, lexerActionExecutor?: LexerActionExecutor) {\r\n\t\tthis._prediction = prediction;\r\n\t\tthis._lexerActionExecutor = lexerActionExecutor;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the prediction made by this accept state. Note that this value\r\n\t * assumes the predicates, if any, in the {@link DFAState} evaluate to\r\n\t * `true`. If predicate evaluation is enabled, the final prediction of\r\n\t * the accept state will be determined by the result of predicate\r\n\t * evaluation.\r\n\t */\r\n\tget prediction(): number {\r\n\t\treturn this._prediction;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the {@link LexerActionExecutor} which can be used to execute actions\r\n\t * and/or commands after the lexer matches a token.\r\n\t */\r\n\tget lexerActionExecutor(): LexerActionExecutor | undefined {\r\n\t\treturn this._lexerActionExecutor;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:38.3567094-07:00\r\n\r\nimport { Array2DHashSet } from \"../misc/Array2DHashSet\";\r\nimport { ATN } from \"../atn/ATN\";\r\nimport { ATNConfigSet } from \"../atn/ATNConfigSet\";\r\nimport { ATNState } from \"../atn/ATNState\";\r\nimport { ATNType } from \"../atn/ATNType\";\r\nimport { DecisionState } from \"../atn/DecisionState\";\r\nimport { DFASerializer } from \"./DFASerializer\";\r\nimport { DFAState } from \"./DFAState\";\r\nimport { LexerATNSimulator } from \"../atn/LexerATNSimulator\";\r\nimport { LexerDFASerializer } from \"./LexerDFASerializer\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { ObjectEqualityComparator } from \"../misc/ObjectEqualityComparator\";\r\nimport { StarLoopEntryState } from \"../atn/StarLoopEntryState\";\r\nimport { Token } from \"../Token\";\r\nimport { TokensStartState } from \"../atn/TokensStartState\";\r\nimport { Vocabulary } from \"../Vocabulary\";\r\nimport { VocabularyImpl } from \"../VocabularyImpl\";\r\n\r\nexport class DFA {\r\n\t/**\r\n\t * A set of all states in the `DFA`.\r\n\t *\r\n\t * Note that this collection of states holds the DFA states for both SLL and LL prediction. Only the start state\r\n\t * needs to be differentiated for these cases, which is tracked by the `s0` and `s0full` fields.\r\n\t */\r\n\t@NotNull\r\n\tpublic readonly states: Array2DHashSet<DFAState> = new Array2DHashSet<DFAState>(ObjectEqualityComparator.INSTANCE);\r\n\r\n\tpublic s0: DFAState | undefined;\r\n\r\n\tpublic s0full: DFAState | undefined;\r\n\r\n\tpublic readonly decision: number;\r\n\r\n\t/** From which ATN state did we create this DFA? */\r\n\t@NotNull\r\n\tpublic atnStartState: ATNState;\r\n\t/**\r\n\t * Note: this field is accessed as `atnStartState.atn` in other targets. The TypeScript target keeps a separate copy\r\n\t * to avoid a number of additional null/undefined checks each time the ATN is accessed.\r\n\t */\r\n\t@NotNull\r\n\tpublic atn: ATN;\r\n\r\n\tprivate nextStateNumber: number = 0;\r\n\r\n\t/**\r\n\t * `true` if this DFA is for a precedence decision; otherwise,\r\n\t * `false`. This is the backing field for {@link #isPrecedenceDfa}.\r\n\t */\r\n\tprivate precedenceDfa: boolean;\r\n\r\n\t/**\r\n\t * Constructs a `DFA` instance associated with a lexer mode.\r\n\t *\r\n\t * The start state for a `DFA` constructed with this constructor should be a `TokensStartState`, which is the start\r\n\t * state for a lexer mode. The prediction made by this DFA determines the lexer rule which matches the current\r\n\t * input.\r\n\t *\r\n\t * @param atnStartState The start state for the mode.\r\n\t */\r\n\tconstructor(atnStartState: TokensStartState);\r\n\t/**\r\n\t * Constructs a `DFA` instance associated with a decision.\r\n\t *\r\n\t * @param atnStartState The decision associated with this DFA.\r\n\t * @param decision The decision number.\r\n\t */\r\n\tconstructor(atnStartState: DecisionState, decision: number);\r\n\tconstructor(@NotNull atnStartState: ATNState, decision: number = 0) {\r\n\t\tif (!atnStartState.atn) {\r\n\t\t\tthrow new Error(\"The ATNState must be associated with an ATN\");\r\n\t\t}\r\n\r\n\t\tthis.atnStartState = atnStartState;\r\n\t\tthis.atn = atnStartState.atn;\r\n\t\tthis.decision = decision;\r\n\r\n\t\t// Precedence DFAs are associated with the special precedence decision created for left-recursive rules which\r\n\t\t// evaluate their alternatives using a precedence hierarchy. When such a decision is encountered, we mark this\r\n\t\t// DFA instance as a precedence DFA and initialize the initial states s0 and s0full to special DFAState\r\n\t\t// instances which use outgoing edges to link to the actual start state used for each precedence level.\r\n\t\tlet isPrecedenceDfa: boolean = false;\r\n\t\tif (atnStartState instanceof StarLoopEntryState) {\r\n\t\t\tif (atnStartState.precedenceRuleDecision) {\r\n\t\t\t\tisPrecedenceDfa = true;\r\n\t\t\t\tthis.s0 = new DFAState(new ATNConfigSet());\r\n\t\t\t\tthis.s0full = new DFAState(new ATNConfigSet());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.precedenceDfa = isPrecedenceDfa;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets whether this DFA is a precedence DFA. Precedence DFAs use a special\r\n\t * start state {@link #s0} which is not stored in {@link #states}. The\r\n\t * {@link DFAState#edges} array for this start state contains outgoing edges\r\n\t * supplying individual start states corresponding to specific precedence\r\n\t * values.\r\n\t *\r\n\t * @returns `true` if this is a precedence DFA; otherwise,\r\n\t * `false`.\r\n\t * @see Parser.precedence\r\n\t */\r\n\tget isPrecedenceDfa(): boolean {\r\n\t\treturn this.precedenceDfa;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the start state for a specific precedence value.\r\n\t *\r\n\t * @param precedence The current precedence.\r\n\t * @returns The start state corresponding to the specified precedence, or\r\n\t * `undefined` if no start state exists for the specified precedence.\r\n\t *\r\n\t * @ if this is not a precedence DFA.\r\n\t * @see `isPrecedenceDfa`\r\n\t */\r\n\tpublic getPrecedenceStartState(precedence: number, fullContext: boolean): DFAState | undefined {\r\n\t\tif (!this.isPrecedenceDfa) {\r\n\t\t\tthrow new Error(\"Only precedence DFAs may contain a precedence start state.\");\r\n\t\t}\r\n\r\n\t\t// s0 and s0full are never null for a precedence DFA\r\n\t\tif (fullContext) {\r\n\t\t\treturn (this.s0full as DFAState).getTarget(precedence);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (this.s0 as DFAState).getTarget(precedence);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the start state for a specific precedence value.\r\n\t *\r\n\t * @param precedence The current precedence.\r\n\t * @param startState The start state corresponding to the specified\r\n\t * precedence.\r\n\t *\r\n\t * @ if this is not a precedence DFA.\r\n\t * @see `isPrecedenceDfa`\r\n\t */\r\n\tpublic setPrecedenceStartState(precedence: number, fullContext: boolean, startState: DFAState): void {\r\n\t\tif (!this.isPrecedenceDfa) {\r\n\t\t\tthrow new Error(\"Only precedence DFAs may contain a precedence start state.\");\r\n\t\t}\r\n\r\n\t\tif (precedence < 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (fullContext) {\r\n\t\t\t// s0full is never null for a precedence DFA\r\n\t\t\t(this.s0full as DFAState).setTarget(precedence, startState);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// s0 is never null for a precedence DFA\r\n\t\t\t(this.s0 as DFAState).setTarget(precedence, startState);\r\n\t\t}\r\n\t}\r\n\r\n\tget isEmpty(): boolean {\r\n\t\tif (this.isPrecedenceDfa) {\r\n\t\t\t// s0 and s0full are never null for a precedence DFA\r\n\t\t\treturn this.s0!.getEdgeMap().size === 0 && this.s0full!.getEdgeMap().size === 0;\r\n\t\t}\r\n\r\n\t\treturn this.s0 == null && this.s0full == null;\r\n\t}\r\n\r\n\tget isContextSensitive(): boolean {\r\n\t\tif (this.isPrecedenceDfa) {\r\n\t\t\t// s0full is never null for a precedence DFA\r\n\t\t\treturn (this.s0full as DFAState).getEdgeMap().size > 0;\r\n\t\t}\r\n\r\n\t\treturn this.s0full != null;\r\n\t}\r\n\r\n\tpublic addState(state: DFAState): DFAState {\r\n\t\tstate.stateNumber = this.nextStateNumber++;\r\n\t\treturn this.states.getOrAdd(state);\r\n\t}\r\n\r\n\tpublic toString(): string;\r\n\tpublic toString(/*@NotNull*/ vocabulary: Vocabulary): string;\r\n\tpublic toString(/*@NotNull*/ vocabulary: Vocabulary, ruleNames: string[] | undefined): string;\r\n\tpublic toString(vocabulary?: Vocabulary, ruleNames?: string[]): string {\r\n\t\tif (!vocabulary) {\r\n\t\t\tvocabulary = VocabularyImpl.EMPTY_VOCABULARY;\r\n\t\t}\r\n\r\n\t\tif (!this.s0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet serializer: DFASerializer;\r\n\t\tif (ruleNames) {\r\n\t\t\tserializer = new DFASerializer(this, vocabulary, ruleNames, this.atnStartState.atn);\r\n\t\t} else {\r\n\t\t\tserializer = new DFASerializer(this, vocabulary);\r\n\t\t}\r\n\r\n\t\treturn serializer.toString();\r\n\t}\r\n\r\n\tpublic toLexerString(): string {\r\n\t\tif (!this.s0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet serializer: DFASerializer = new LexerDFASerializer(this);\r\n\t\treturn serializer.toString();\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:38.5097925-07:00\r\n\r\nimport { ATN } from \"../atn/ATN\";\r\nimport { ATNSimulator } from \"../atn/ATNSimulator\";\r\nimport { ATNState } from \"../atn/ATNState\";\r\nimport { DFA } from \"./DFA\";\r\nimport { DFAState } from \"./DFAState\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { PredictionContext } from \"../atn/PredictionContext\";\r\nimport { Recognizer } from \"../Recognizer\";\r\nimport { Vocabulary } from \"../Vocabulary\";\r\nimport { VocabularyImpl } from \"../VocabularyImpl\";\r\n\r\n/** A DFA walker that knows how to dump them to serialized strings. */\r\nexport class DFASerializer {\r\n\t@NotNull\r\n\tprivate dfa: DFA;\r\n\t@NotNull\r\n\tprivate vocabulary: Vocabulary;\r\n\r\n\tpublic ruleNames?: string[];\r\n\r\n\tpublic atn?: ATN;\r\n\r\n\tconstructor(/*@NotNull*/ dfa: DFA, /*@NotNull*/ vocabulary: Vocabulary);\r\n\tconstructor(/*@NotNull*/ dfa: DFA, /*@Nullable*/ parser: Recognizer<any, any> | undefined);\r\n\tconstructor(/*@NotNull*/ dfa: DFA, /*@NotNull*/ vocabulary: Vocabulary, /*@Nullable*/ ruleNames: string[] | undefined, /*@Nullable*/ atn: ATN | undefined);\r\n\tconstructor(dfa: DFA, vocabulary: Vocabulary | Recognizer<any, any> | undefined, ruleNames?: string[], atn?: ATN) {\r\n\t\tif (vocabulary instanceof Recognizer) {\r\n\t\t\truleNames = vocabulary.ruleNames;\r\n\t\t\tatn = vocabulary.atn;\r\n\t\t\tvocabulary = vocabulary.vocabulary;\r\n\t\t} else if (!vocabulary) {\r\n\t\t\tvocabulary = VocabularyImpl.EMPTY_VOCABULARY;\r\n\t\t}\r\n\r\n\t\tthis.dfa = dfa;\r\n\t\tthis.vocabulary = vocabulary;\r\n\t\tthis.ruleNames = ruleNames;\r\n\t\tthis.atn = atn;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tif (!this.dfa.s0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet buf = \"\";\r\n\r\n\t\tif (this.dfa.states) {\r\n\t\t\tlet states: DFAState[] = new Array<DFAState>(...this.dfa.states.toArray());\r\n\t\t\tstates.sort((o1, o2) => o1.stateNumber - o2.stateNumber);\r\n\r\n\t\t\tfor (let s of states) {\r\n\t\t\t\tlet edges: Map<number, DFAState> = s.getEdgeMap();\r\n\t\t\t\tlet edgeKeys = [...edges.keys()].sort((a, b) => a - b);\r\n\t\t\t\tlet contextEdges: Map<number, DFAState> = s.getContextEdgeMap();\r\n\t\t\t\tlet contextEdgeKeys = [...contextEdges.keys()].sort((a, b) => a - b);\r\n\t\t\t\tfor (let entry of edgeKeys) {\r\n\t\t\t\t\tlet value = edges.get(entry);\r\n\t\t\t\t\tif ((value == null || value === ATNSimulator.ERROR) && !s.isContextSymbol(entry)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet contextSymbol: boolean = false;\r\n\t\t\t\t\tbuf += (this.getStateString(s)) + (\"-\") + (this.getEdgeLabel(entry)) + (\"->\");\r\n\t\t\t\t\tif (s.isContextSymbol(entry)) {\r\n\t\t\t\t\t\tbuf += (\"!\");\r\n\t\t\t\t\t\tcontextSymbol = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet t: DFAState | undefined = value;\r\n\t\t\t\t\tif (t && t.stateNumber !== ATNSimulator.ERROR.stateNumber) {\r\n\t\t\t\t\t\tbuf += (this.getStateString(t)) + (\"\\n\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (contextSymbol) {\r\n\t\t\t\t\t\tbuf += (\"ctx\\n\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (s.isContextSensitive) {\r\n\t\t\t\t\tfor (let entry of contextEdgeKeys) {\r\n\t\t\t\t\t\tbuf += (this.getStateString(s))\r\n\t\t\t\t\t\t\t+ (\"-\")\r\n\t\t\t\t\t\t\t+ (this.getContextLabel(entry))\r\n\t\t\t\t\t\t\t+ (\"->\")\r\n\t\t\t\t\t\t\t+ (this.getStateString(contextEdges.get(entry)!))\r\n\t\t\t\t\t\t\t+ (\"\\n\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet output: string = buf;\r\n\t\tif (output.length === 0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\t//return Utils.sortLinesInString(output);\r\n\t\treturn output;\r\n\t}\r\n\r\n\tprotected getContextLabel(i: number): string {\r\n\t\tif (i === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\treturn \"ctx:EMPTY_FULL\";\r\n\t\t}\r\n\t\telse if (i === PredictionContext.EMPTY_LOCAL_STATE_KEY) {\r\n\t\t\treturn \"ctx:EMPTY_LOCAL\";\r\n\t\t}\r\n\r\n\t\tif (this.atn && i > 0 && i <= this.atn.states.length) {\r\n\t\t\tlet state: ATNState = this.atn.states[i];\r\n\t\t\tlet ruleIndex: number = state.ruleIndex;\r\n\t\t\tif (this.ruleNames && ruleIndex >= 0 && ruleIndex < this.ruleNames.length) {\r\n\t\t\t\treturn \"ctx:\" + String(i) + \"(\" + this.ruleNames[ruleIndex] + \")\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn \"ctx:\" + String(i);\r\n\t}\r\n\r\n\tprotected getEdgeLabel(i: number): string {\r\n\t\treturn this.vocabulary.getDisplayName(i);\r\n\t}\r\n\r\n\tpublic getStateString(s: DFAState): string {\r\n\t\tif (s === ATNSimulator.ERROR) {\r\n\t\t\treturn \"ERROR\";\r\n\t\t}\r\n\r\n\t\tlet n: number = s.stateNumber;\r\n\t\tlet stateStr: string = \"s\" + n;\r\n\t\tif (s.isAcceptState) {\r\n\t\t\tif (s.predicates) {\r\n\t\t\t\tstateStr = \":s\" + n + \"=>\" + s.predicates;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstateStr = \":s\" + n + \"=>\" + s.prediction;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (s.isContextSensitive) {\r\n\t\t\tstateStr += \"*\";\r\n\t\t\tfor (let config of s.configs) {\r\n\t\t\t\tif (config.reachesIntoOuterContext) {\r\n\t\t\t\t\tstateStr += \"*\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn stateStr;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:38.7771056-07:00\r\n\r\nimport { AcceptStateInfo } from \"./AcceptStateInfo\";\r\nimport { ATN } from \"../atn/ATN\";\r\nimport { ATNConfigSet } from \"../atn/ATNConfigSet\";\r\nimport { BitSet } from \"../misc/BitSet\";\r\nimport { LexerActionExecutor } from \"../atn/LexerActionExecutor\";\r\nimport { MurmurHash } from \"../misc/MurmurHash\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { PredictionContext } from \"../atn/PredictionContext\";\r\nimport { SemanticContext } from \"../atn/SemanticContext\";\r\n\r\nimport * as assert from \"assert\";\r\n\r\n/** A DFA state represents a set of possible ATN configurations.\r\n *  As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\r\n *  to keep track of all possible states the ATN can be in after\r\n *  reading each input symbol.  That is to say, after reading\r\n *  input a1a2..an, the DFA is in a state that represents the\r\n *  subset T of the states of the ATN that are reachable from the\r\n *  ATN's start state along some path labeled a1a2..an.\"\r\n *  In conventional NFA&rarr;DFA conversion, therefore, the subset T\r\n *  would be a bitset representing the set of states the\r\n *  ATN could be in.  We need to track the alt predicted by each\r\n *  state as well, however.  More importantly, we need to maintain\r\n *  a stack of states, tracking the closure operations as they\r\n *  jump from rule to rule, emulating rule invocations (method calls).\r\n *  I have to add a stack to simulate the proper lookahead sequences for\r\n *  the underlying LL grammar from which the ATN was derived.\r\n *\r\n *  I use a set of ATNConfig objects not simple states.  An ATNConfig\r\n *  is both a state (ala normal conversion) and a RuleContext describing\r\n *  the chain of rules (if any) followed to arrive at that state.\r\n *\r\n *  A DFA state may have multiple references to a particular state,\r\n *  but with different ATN contexts (with same or different alts)\r\n *  meaning that state was reached via a different set of rule invocations.\r\n */\r\nexport class DFAState {\r\n\tpublic stateNumber: number = -1;\r\n\r\n\t@NotNull\r\n\tpublic configs: ATNConfigSet;\r\n\r\n\t/** `edges.get(symbol)` points to target of symbol.\r\n\t */\r\n\t@NotNull\r\n\tprivate readonly edges: Map<number, DFAState>;\r\n\r\n\tprivate _acceptStateInfo: AcceptStateInfo | undefined;\r\n\r\n\t/** These keys for these edges are the top level element of the global context. */\r\n\t@NotNull\r\n\tprivate readonly contextEdges: Map<number, DFAState>;\r\n\r\n\t/** Symbols in this set require a global context transition before matching an input symbol. */\r\n\tprivate contextSymbols: BitSet | undefined;\r\n\r\n\t/**\r\n\t * This list is computed by {@link ParserATNSimulator#predicateDFAState}.\r\n\t */\r\n\tpublic predicates: DFAState.PredPrediction[] | undefined;\r\n\r\n\t/**\r\n\t * Constructs a new `DFAState`.\r\n\t *\r\n\t * @param configs The set of ATN configurations defining this state.\r\n\t */\r\n\tconstructor(configs: ATNConfigSet) {\r\n\t\tthis.configs = configs;\r\n\t\tthis.edges = new Map<number, DFAState>();\r\n\t\tthis.contextEdges = new Map<number, DFAState>();\r\n\t}\r\n\r\n\tget isContextSensitive(): boolean {\r\n\t\treturn !!this.contextSymbols;\r\n\t}\r\n\r\n\tpublic isContextSymbol(symbol: number): boolean {\r\n\t\tif (!this.isContextSensitive) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.contextSymbols!.get(symbol);\r\n\t}\r\n\r\n\tpublic setContextSymbol(symbol: number): void {\r\n\t\tassert(this.isContextSensitive);\r\n\t\tthis.contextSymbols!.set(symbol);\r\n\t}\r\n\r\n\tpublic setContextSensitive(atn: ATN): void {\r\n\t\tassert(!this.configs.isOutermostConfigSet);\r\n\t\tif (this.isContextSensitive) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.contextSymbols) {\r\n\t\t\tthis.contextSymbols = new BitSet();\r\n\t\t}\r\n\t}\r\n\r\n\tget acceptStateInfo(): AcceptStateInfo | undefined {\r\n\t\treturn this._acceptStateInfo;\r\n\t}\r\n\r\n\tset acceptStateInfo(acceptStateInfo: AcceptStateInfo | undefined) {\r\n\t\tthis._acceptStateInfo = acceptStateInfo;\r\n\t}\r\n\r\n\tget isAcceptState(): boolean {\r\n\t\treturn !!this._acceptStateInfo;\r\n\t}\r\n\r\n\tget prediction(): number {\r\n\t\tif (!this._acceptStateInfo) {\r\n\t\t\treturn ATN.INVALID_ALT_NUMBER;\r\n\t\t}\r\n\r\n\t\treturn this._acceptStateInfo.prediction;\r\n\t}\r\n\r\n\tget lexerActionExecutor(): LexerActionExecutor | undefined {\r\n\t\tif (!this._acceptStateInfo) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn this._acceptStateInfo.lexerActionExecutor;\r\n\t}\r\n\r\n\tpublic getTarget(symbol: number): DFAState | undefined {\r\n\t\treturn this.edges.get(symbol);\r\n\t}\r\n\r\n\tpublic setTarget(symbol: number, target: DFAState): void {\r\n\t\tthis.edges.set(symbol, target);\r\n\t}\r\n\r\n\tpublic getEdgeMap(): Map<number, DFAState> {\r\n\t\treturn this.edges;\r\n\t}\r\n\r\n\tpublic getContextTarget(invokingState: number): DFAState | undefined {\r\n\t\tif (invokingState === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\tinvokingState = -1;\r\n\t\t}\r\n\r\n\t\treturn this.contextEdges.get(invokingState);\r\n\t}\r\n\r\n\tpublic setContextTarget(invokingState: number, target: DFAState): void {\r\n\t\tif (!this.isContextSensitive) {\r\n\t\t\tthrow new Error(\"The state is not context sensitive.\");\r\n\t\t}\r\n\r\n\t\tif (invokingState === PredictionContext.EMPTY_FULL_STATE_KEY) {\r\n\t\t\tinvokingState = -1;\r\n\t\t}\r\n\r\n\t\tthis.contextEdges.set(invokingState, target);\r\n\t}\r\n\r\n\tpublic getContextEdgeMap(): Map<number, DFAState> {\r\n\t\tlet map = new Map<number, DFAState>(this.contextEdges);\r\n\t\tlet existing = map.get(-1);\r\n\t\tif (existing !== undefined) {\r\n\t\t\tif (map.size === 1) {\r\n\t\t\t\tlet result = new Map<number, DFAState>();\r\n\t\t\t\tresult.set(PredictionContext.EMPTY_FULL_STATE_KEY, existing);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmap.delete(-1);\r\n\t\t\t\tmap.set(PredictionContext.EMPTY_FULL_STATE_KEY, existing);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize(7);\r\n\t\thash = MurmurHash.update(hash, this.configs.hashCode());\r\n\t\thash = MurmurHash.finish(hash, 1);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * Two {@link DFAState} instances are equal if their ATN configuration sets\r\n\t * are the same. This method is used to see if a state already exists.\r\n\t *\r\n\t * Because the number of alternatives and number of ATN configurations are\r\n\t * finite, there is a finite number of DFA states that can be processed.\r\n\t * This is necessary to show that the algorithm terminates.\r\n\t *\r\n\t * Cannot test the DFA state numbers here because in\r\n\t * {@link ParserATNSimulator#addDFAState} we need to know if any other state\r\n\t * exists that has this exact set of ATN configurations. The\r\n\t * {@link #stateNumber} is irrelevant.\r\n\t */\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\t// compare set of ATN configurations in this set with other\r\n\t\tif (this === o) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!(o instanceof DFAState)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet other: DFAState = o;\r\n\t\tlet sameSet: boolean = this.configs.equals(other.configs);\r\n//\t\tSystem.out.println(\"DFAState.equals: \"+configs+(sameSet?\"==\":\"!=\")+other.configs);\r\n\t\treturn sameSet;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tlet buf = \"\";\r\n\t\tbuf += (this.stateNumber) + (\":\") + (this.configs);\r\n\t\tif (this.isAcceptState) {\r\n\t\t\tbuf += (\"=>\");\r\n\t\t\tif (this.predicates) {\r\n\t\t\t\tbuf += this.predicates;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbuf += (this.prediction);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}\r\n}\r\n\r\nexport namespace DFAState {\r\n\t/** Map a predicate to a predicted alternative. */\r\n\texport class PredPrediction {\r\n\t\t@NotNull\r\n\t\tpublic pred: SemanticContext;  // never null; at least SemanticContext.NONE\r\n\t\tpublic alt: number;\r\n\t\tconstructor(@NotNull pred: SemanticContext, alt: number) {\r\n\t\t\tthis.alt = alt;\r\n\t\t\tthis.pred = pred;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic toString(): string {\r\n\t\t\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:39.2167238-07:00\r\n\r\nimport { DFA } from \"./DFA\";\r\nimport { DFASerializer } from \"./DFASerializer\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { VocabularyImpl } from \"../VocabularyImpl\";\r\n\r\nexport class LexerDFASerializer extends DFASerializer {\r\n\tconstructor( @NotNull dfa: DFA) {\r\n\t\tsuper(dfa, VocabularyImpl.EMPTY_VOCABULARY);\r\n\t}\r\n\r\n\t@Override\r\n\t@NotNull\r\n\tprotected getEdgeLabel(i: number): string {\r\n\t\treturn \"'\" + String.fromCodePoint(i) + \"'\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nexport * from \"./ANTLRErrorListener\";\r\nexport * from \"./ANTLRErrorStrategy\";\r\n// export * from \"./ANTLRFileStream\";\r\nexport * from \"./ANTLRInputStream\";\r\nexport * from \"./BailErrorStrategy\";\r\nexport * from \"./BufferedTokenStream\";\r\nexport * from \"./CharStream\";\r\nexport * from \"./CharStreams\";\r\nexport * from \"./CodePointBuffer\";\r\nexport * from \"./CodePointCharStream\";\r\nexport * from \"./CommonToken\";\r\nexport * from \"./CommonTokenFactory\";\r\nexport * from \"./CommonTokenStream\";\r\nexport * from \"./ConsoleErrorListener\";\r\nexport * from \"./DefaultErrorStrategy\";\r\nexport * from \"./Dependents\";\r\nexport * from \"./DiagnosticErrorListener\";\r\nexport * from \"./FailedPredicateException\";\r\nexport * from \"./InputMismatchException\";\r\nexport * from \"./InterpreterRuleContext\";\r\nexport * from \"./IntStream\";\r\nexport * from \"./Lexer\";\r\nexport * from \"./LexerInterpreter\";\r\nexport * from \"./LexerNoViableAltException\";\r\nexport * from \"./ListTokenSource\";\r\nexport * from \"./NoViableAltException\";\r\nexport * from \"./Parser\";\r\nexport * from \"./ParserErrorListener\";\r\nexport * from \"./ParserInterpreter\";\r\nexport * from \"./ParserRuleContext\";\r\nexport * from \"./ProxyErrorListener\";\r\nexport * from \"./ProxyParserErrorListener\";\r\nexport * from \"./RecognitionException\";\r\nexport * from \"./Recognizer\";\r\nexport * from \"./RuleContext\";\r\nexport * from \"./RuleContextWithAltNum\";\r\nexport * from \"./RuleDependency\";\r\nexport * from \"./RuleVersion\";\r\nexport * from \"./Token\";\r\nexport * from \"./TokenFactory\";\r\nexport * from \"./TokenSource\";\r\nexport * from \"./TokenStream\";\r\nexport * from \"./TokenStreamRewriter\";\r\n// export * from \"./UnbufferedCharStream\";\r\n// export * from \"./UnbufferedTokenStream\";\r\nexport * from \"./Vocabulary\";\r\nexport * from \"./VocabularyImpl\";\r\nexport * from \"./WritableToken\";\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport { Array2DHashSet } from \"./Array2DHashSet\";\r\nimport { DefaultEqualityComparator } from \"./DefaultEqualityComparator\";\r\nimport { EqualityComparator } from \"./EqualityComparator\";\r\nimport { Equatable, JavaCollection, JavaMap, JavaSet } from \"./Stubs\";\r\n\r\n// Since `Array2DHashMap` is implemented on top of `Array2DHashSet`, we defined a bucket type which can store a\r\n// key-value pair. The value is optional since looking up values in the map by a key only needs to include the key.\r\ninterface Bucket<K, V> { key: K; value?: V; }\r\n\r\nclass MapKeyEqualityComparator<K, V> implements EqualityComparator<Bucket<K, V>> {\r\n\tprivate readonly keyComparator: EqualityComparator<K>;\r\n\r\n\tconstructor(keyComparator: EqualityComparator<K>) {\r\n\t\tthis.keyComparator = keyComparator;\r\n\t}\r\n\r\n\tpublic hashCode(obj: Bucket<K, V>): number {\r\n\t\treturn this.keyComparator.hashCode(obj.key);\r\n\t}\r\n\r\n\tpublic equals(a: Bucket<K, V>, b: Bucket<K, V>): boolean {\r\n\t\treturn this.keyComparator.equals(a.key, b.key);\r\n\t}\r\n}\r\n\r\nexport class Array2DHashMap<K, V> implements JavaMap<K, V> {\r\n\tprivate backingStore: Array2DHashSet<Bucket<K, V>>;\r\n\r\n\tconstructor(keyComparer: EqualityComparator<K>);\r\n\tconstructor(map: Array2DHashMap<K, V>);\r\n\tconstructor(keyComparer: EqualityComparator<K> | Array2DHashMap<K, V>) {\r\n\t\tif (keyComparer instanceof Array2DHashMap) {\r\n\t\t\tthis.backingStore = new Array2DHashSet<Bucket<K, V>>(keyComparer.backingStore);\r\n\t\t} else {\r\n\t\t\tthis.backingStore = new Array2DHashSet<Bucket<K, V>>(new MapKeyEqualityComparator<K, V>(keyComparer));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clear(): void {\r\n\t\tthis.backingStore.clear();\r\n\t}\r\n\r\n\tpublic containsKey(key: K): boolean {\r\n\t\treturn this.backingStore.contains({ key });\r\n\t}\r\n\r\n\tpublic get(key: K): V | undefined {\r\n\t\tlet bucket = this.backingStore.get({ key });\r\n\t\tif (!bucket) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn bucket.value;\r\n\t}\r\n\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.backingStore.isEmpty;\r\n\t}\r\n\r\n\tpublic put(key: K, value: V): V | undefined {\r\n\t\tlet element = this.backingStore.get({ key, value });\r\n\t\tlet result: V | undefined;\r\n\t\tif (!element) {\r\n\t\t\tthis.backingStore.add({ key, value });\r\n\t\t} else {\r\n\t\t\tresult = element.value;\r\n\t\t\telement.value = value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic putIfAbsent(key: K, value: V): V | undefined {\r\n\t\tlet element = this.backingStore.get({ key, value });\r\n\t\tlet result: V | undefined;\r\n\t\tif (!element) {\r\n\t\t\tthis.backingStore.add({ key, value });\r\n\t\t} else {\r\n\t\t\tresult = element.value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tget size(): number {\r\n\t\treturn this.backingStore.size;\r\n\t}\r\n\r\n\tpublic hashCode(): number {\r\n\t\treturn this.backingStore.hashCode();\r\n\t}\r\n\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (!(o instanceof Array2DHashMap)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.backingStore.equals(o.backingStore);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-03T02:09:41.7434086-07:00\r\n\r\nimport * as assert from \"assert\";\r\nimport { DefaultEqualityComparator } from \"./DefaultEqualityComparator\";\r\nimport { EqualityComparator } from \"./EqualityComparator\";\r\nimport { NotNull, Nullable, Override, SuppressWarnings } from \"../Decorators\";\r\nimport { JavaCollection, JavaSet } from \"./Stubs\";\r\nimport { ObjectEqualityComparator } from \"./ObjectEqualityComparator\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\n\r\n/** {@link Set} implementation with closed hashing (open addressing). */\r\n\r\n// NOTE:  JavaScript's Set interface has on significant different diffrence from Java's:\r\n// \t\t  e.g. the return type of add() differs!\r\n//        For this reason I've commented tweaked the implements clause\r\n\r\nconst INITAL_CAPACITY: number = 16; // must be power of 2\r\nconst LOAD_FACTOR: number = 0.75;\r\n\r\nexport class Array2DHashSet<T extends { toString(): string; }> implements JavaSet<T> {\r\n\t@NotNull\r\n\tprotected comparator: EqualityComparator<T>;\r\n\r\n\tprotected buckets: Array<T[] | undefined>;\r\n\r\n\t/** How many elements in set */\r\n\tprotected n: number = 0;\r\n\r\n\tprotected threshold: number = Math.floor(INITAL_CAPACITY * LOAD_FACTOR); // when to expand\r\n\r\n\tconstructor(comparator?: EqualityComparator<T>, initialCapacity?: number);\r\n\tconstructor(set: Array2DHashSet<T>);\r\n\tconstructor(\r\n\t\tcomparatorOrSet?: EqualityComparator<T> | Array2DHashSet<T>,\r\n\t\tinitialCapacity: number = INITAL_CAPACITY) {\r\n\r\n\t\tif (comparatorOrSet instanceof Array2DHashSet) {\r\n\t\t\tthis.comparator = comparatorOrSet.comparator;\r\n\t\t\tthis.buckets = comparatorOrSet.buckets.slice(0);\r\n\t\t\tfor (let i = 0; i < this.buckets.length; i++) {\r\n\t\t\t\tlet bucket = this.buckets[i];\r\n\t\t\t\tif (bucket) {\r\n\t\t\t\t\tthis.buckets[i] = bucket.slice(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.n = comparatorOrSet.n;\r\n\t\t\tthis.threshold = comparatorOrSet.threshold;\r\n\t\t} else {\r\n\t\t\tthis.comparator = comparatorOrSet || DefaultEqualityComparator.INSTANCE;\r\n\t\t\tthis.buckets = this.createBuckets(initialCapacity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add `o` to set if not there; return existing value if already\r\n\t * there. This method performs the same operation as {@link #add} aside from\r\n\t * the return value.\r\n\t */\r\n\tpublic getOrAdd(o: T): T {\r\n\t\tif (this.n > this.threshold) {\r\n\t\t\tthis.expand();\r\n\t\t}\r\n\t\treturn this.getOrAddImpl(o);\r\n\t}\r\n\r\n\tprotected getOrAddImpl(o: T): T {\r\n\t\tlet b: number = this.getBucket(o);\r\n\t\tlet bucket = this.buckets[b];\r\n\r\n\t\t// NEW BUCKET\r\n\t\tif (!bucket) {\r\n\t\t\tbucket = [o];\r\n\t\t\tthis.buckets[b] = bucket;\r\n\t\t\tthis.n++;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t\t// LOOK FOR IT IN BUCKET\r\n\t\tfor (let existing of bucket) {\r\n\t\t\tif (this.comparator.equals(existing, o)) {\r\n\t\t\t\treturn existing; // found existing, quit\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// FULL BUCKET, expand and add to end\r\n\t\tbucket.push(o);\r\n\t\tthis.n++;\r\n\t\treturn o;\r\n\t}\r\n\r\n\tpublic get(o: T): T | undefined {\r\n\t\tif (o == null) {\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tlet b: number = this.getBucket(o);\r\n\t\tlet bucket = this.buckets[b];\r\n\t\tif (!bucket) {\r\n\t\t\t// no bucket\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tfor (let e of bucket) {\r\n\t\t\tif (this.comparator.equals(e, o)) {\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tprotected getBucket(o: T): number {\r\n\t\tlet hash: number = this.comparator.hashCode(o);\r\n\t\tlet b: number = hash & (this.buckets.length - 1); // assumes len is power of 2\r\n\t\treturn b;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\tfor (let bucket of this.buckets) {\r\n\t\t\tif (bucket == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let o of bucket) {\r\n\t\t\t\tif (o == null) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\thash = MurmurHash.update(hash, this.comparator.hashCode(o));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thash = MurmurHash.finish(hash, this.size);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (o === this) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!(o instanceof Array2DHashSet)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (o.size !== this.size) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet same: boolean = this.containsAll(o);\r\n\t\treturn same;\r\n\t}\r\n\r\n\tprotected expand(): void {\r\n\t\tlet old = this.buckets;\r\n\t\tlet newCapacity: number = this.buckets.length * 2;\r\n\t\tlet newTable: Array<T[] | undefined> = this.createBuckets(newCapacity);\r\n\t\tthis.buckets = newTable;\r\n\t\tthis.threshold = Math.floor(newCapacity * LOAD_FACTOR);\r\n//\t\tSystem.out.println(\"new size=\"+newCapacity+\", thres=\"+threshold);\r\n\t\t// rehash all existing entries\r\n\t\tlet oldSize: number = this.size;\r\n\t\tfor (let bucket of old) {\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let o of bucket) {\r\n\t\t\t\tlet b: number = this.getBucket(o);\r\n\t\t\t\tlet newBucket: T[] | undefined = this.buckets[b];\r\n\t\t\t\tif (!newBucket) {\r\n\t\t\t\t\tnewBucket = [];\r\n\t\t\t\t\tthis.buckets[b] = newBucket;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewBucket.push(o);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tassert(this.n === oldSize);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic add(t: T): boolean {\r\n\t\tlet existing: T = this.getOrAdd(t);\r\n\t\treturn existing === t;\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\treturn this.n;\r\n\t}\r\n\r\n\t@Override\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.n === 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic contains(o: any): boolean {\r\n\t\treturn this.containsFast(this.asElementType(o));\r\n\t}\r\n\r\n\tpublic containsFast(@Nullable obj: T): boolean {\r\n\t\tif (obj == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.get(obj) != null;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic *[Symbol.iterator](): IterableIterator<T> {\r\n\t\tyield* this.toArray();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toArray(): T[] {\r\n\t\tconst a = new Array<T>(this.size);\r\n\r\n\t\t// Copy elements from the nested arrays into the destination array\r\n\t\tlet i: number = 0; // Position within destination array\r\n\t\tfor (let bucket of this.buckets) {\r\n\t\t\tif (bucket == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let o of bucket) {\r\n\t\t\t\tif (o == null) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ta[i++] = o;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic containsAll(collection: JavaCollection<T>): boolean {\r\n\t\tif (collection instanceof Array2DHashSet) {\r\n\t\t\tlet s = collection as any as Array2DHashSet<T>;\r\n\t\t\tfor (let bucket of s.buckets) {\r\n\t\t\t\tif (bucket == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let o of bucket) {\r\n\t\t\t\t\tif (o == null) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.containsFast(this.asElementType(o))) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let o of collection) {\r\n\t\t\t\tif (!this.containsFast(this.asElementType(o))) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic addAll(c: Iterable<T>): boolean {\r\n\t\tlet changed: boolean = false;\r\n\r\n\t\tfor (let o of c) {\r\n\t\t\tlet existing: T = this.getOrAdd(o);\r\n\t\t\tif (existing !== o) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic clear(): void {\r\n\t\tthis.buckets = this.createBuckets(INITAL_CAPACITY);\r\n\t\tthis.n = 0;\r\n\t\tthis.threshold = Math.floor(INITAL_CAPACITY * LOAD_FACTOR);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tif (this.size === 0) {\r\n\t\t\treturn \"{}\";\r\n\t\t}\r\n\r\n\t\tlet buf = \"{\";\r\n\t\tlet first: boolean = true;\r\n\t\tfor (let bucket of this.buckets) {\r\n\t\t\tif (bucket == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let o of bucket) {\r\n\t\t\t\tif (o == null) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (first) {\r\n\t\t\t\t\tfirst = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += \", \";\r\n\t\t\t\t}\r\n\t\t\t\tbuf += o.toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf += \"}\";\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tpublic toTableString(): string {\r\n\t\tlet buf = \"\";\r\n\t\tfor (let bucket of this.buckets) {\r\n\t\t\tif (bucket == null) {\r\n\t\t\t\tbuf += \"null\\n\";\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tbuf += \"[\";\r\n\t\t\tlet first: boolean = true;\r\n\t\t\tfor (let o of bucket) {\r\n\t\t\t\tif (first) {\r\n\t\t\t\t\tfirst = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += \" \";\r\n\t\t\t\t}\r\n\t\t\t\tif (o == null) {\r\n\t\t\t\t\tbuf += \"_\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += o.toString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuf += \"]\\n\";\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\r\n\t/**\r\n\t * Return `o` as an instance of the element type `T`. If\r\n\t * `o` is non-undefined but known to not be an instance of `T`, this\r\n\t * method returns `undefined`. The base implementation does not perform any\r\n\t * type checks; override this method to provide strong type checks for the\r\n\t * {@link #contains} and {@link #remove} methods to ensure the arguments to\r\n\t * the {@link EqualityComparator} for the set always have the expected\r\n\t * types.\r\n\t *\r\n\t * @param o the object to try and cast to the element type of the set\r\n\t * @returns `o` if it could be an instance of `T`, otherwise\r\n\t * `undefined`.\r\n\t */\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tprotected asElementType(o: any): T {\r\n\t\treturn o as T;\r\n\t}\r\n\r\n\t/**\r\n\t * Return an array of `T[]` with length `capacity`.\r\n\t *\r\n\t * @param capacity the length of the array to return\r\n\t * @returns the newly constructed array\r\n\t */\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tprotected createBuckets(capacity: number): Array<T[] | undefined> {\r\n\t\treturn new Array<T[]>(capacity);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-03T02:09:42.2127260-07:00\r\nimport { EqualityComparator } from \"./EqualityComparator\";\r\nimport { Override } from \"../Decorators\";\r\nimport { Equatable } from \"./Stubs\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\nimport { ObjectEqualityComparator } from \"./ObjectEqualityComparator\";\r\n\r\n/**\r\n * This default implementation of {@link EqualityComparator} uses object equality\r\n * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ArrayEqualityComparator implements EqualityComparator<Equatable[]> {\r\n\tpublic static readonly INSTANCE: ArrayEqualityComparator = new ArrayEqualityComparator();\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation returns\r\n\t * `obj.`{@link Object#hashCode hashCode()}.\r\n\t */\r\n\t@Override\r\n\tpublic hashCode(obj: Equatable[]): number {\r\n\t\tif (obj == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn MurmurHash.hashCode(obj, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation relies on object equality. If both objects are\r\n\t * `undefined`, this method returns `true`. Otherwise if only\r\n\t * `a` is `undefined`, this method returns `false`. Otherwise,\r\n\t * this method returns the result of\r\n\t * `a.`{@link Object#equals equals}`(b)`.\r\n\t */\r\n\t@Override\r\n\tpublic equals(a: Equatable[], b: Equatable[]): boolean {\r\n\t\tif (a == null) {\r\n\t\t\treturn b == null;\r\n\t\t} else if (b == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (a.length !== b.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\tif (!ObjectEqualityComparator.INSTANCE.equals(a[i], b[i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nexport namespace Arrays {\r\n\t/**\r\n\t * Searches the specified array of numbers for the specified value using the binary search algorithm. The array must\r\n\t * be sorted prior to making this call. If it is not sorted, the results are unspecified. If the array contains\r\n\t * multiple elements with the specified value, there is no guarantee which one will be found.\r\n\t *\r\n\t * @returns index of the search key, if it is contained in the array; otherwise, (-(insertion point) - 1). The\r\n\t * insertion point is defined as the point at which the key would be inserted into the array: the index of the first\r\n\t * element greater than the key, or array.length if all elements in the array are less than the specified key. Note\r\n\t * that this guarantees that the return value will be >= 0 if and only if the key is found.\r\n\t */\r\n\texport function binarySearch(array: ArrayLike<number>, key: number, fromIndex?: number, toIndex?: number): number {\r\n\t\treturn binarySearch0(array, fromIndex !== undefined ? fromIndex : 0, toIndex !== undefined ? toIndex : array.length, key);\r\n\t}\r\n\r\n\tfunction binarySearch0(array: ArrayLike<number>, fromIndex: number, toIndex: number, key: number): number {\r\n\t\tlet low: number = fromIndex;\r\n\t\tlet high: number = toIndex - 1;\r\n\r\n\t\twhile (low <= high) {\r\n\t\t\tlet mid: number = (low + high) >>> 1;\r\n\t\t\tlet midVal: number = array[mid];\r\n\r\n\t\t\tif (midVal < key) {\r\n\t\t\t\tlow = mid + 1;\r\n\t\t\t} else if (midVal > key) {\r\n\t\t\t\thigh = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// key found\r\n\t\t\t\treturn mid;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// key not found.\r\n\t\treturn -(low + 1);\r\n\t}\r\n\r\n\texport function toString<T>(array: Iterable<T>) {\r\n\t\tlet result = \"[\";\r\n\r\n\t\tlet first = true;\r\n\t\tfor (let element of array) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t} else {\r\n\t\t\t\tresult += \", \";\r\n\t\t\t}\r\n\r\n\t\t\tif (element === null) {\r\n\t\t\t\tresult += \"null\";\r\n\t\t\t} else if (element === undefined) {\r\n\t\t\t\tresult += \"undefined\";\r\n\t\t\t} else {\r\n\t\t\t\tresult += element;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresult += \"]\";\r\n\t\treturn result;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport * as assert from \"assert\";\r\nimport * as util from \"util\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\n\r\n/**\r\n * Private empty array used to construct empty BitSets\r\n */\r\nconst EMPTY_DATA: Uint16Array = new Uint16Array(0);\r\n\r\n/**\r\n * Gets the word index of the `UInt16` element in `BitSet.data` containing the bit with the specified index.\r\n */\r\nfunction getIndex(bitNumber: number) {\r\n\treturn bitNumber >>> 4;\r\n}\r\n\r\n/**\r\n * Convert a word index into the bit index of the LSB of that word\r\n */\r\n\r\nfunction unIndex(n: number) {\r\n\treturn n * 16;\r\n}\r\n\r\n/**\r\n * Get's the bit number of the least signficant bit set LSB which is set in a word non-zero word;\r\n * Bit numbers run from LSB to MSB starting with 0.\r\n */\r\nfunction findLSBSet(word: number) {\r\n\tlet bit = 1;\r\n\tfor (let i = 0; i < 16; i++) {\r\n\t\tif ((word & bit) !== 0) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t\tbit = (bit << 1) >>> 0;\r\n\t}\r\n\tthrow new RangeError(\"No specified bit found\");\r\n}\r\n\r\nfunction findMSBSet(word: number) {\r\n\tlet bit = (1 << 15) >>> 0;\r\n\tfor (let i = 15; i >= 0; i--) {\r\n\t\tif ((word & bit) !== 0) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t\tbit = bit >>> 1;\r\n\t}\r\n\tthrow new RangeError(\"No specified bit found\");\r\n}\r\n\r\n/**\r\n * Gets a 16-bit mask with bit numbers fromBit to toBit (inclusive) set.\r\n * Bit numbers run from LSB to MSB starting with 0.\r\n */\r\nfunction bitsFor(fromBit: number, toBit: number): number {\r\n\tfromBit &= 0xF;\r\n\ttoBit &= 0xF;\r\n\tif (fromBit === toBit) {\r\n\t\treturn (1 << fromBit) >>> 0;\r\n\t}\r\n\treturn ((0xFFFF >>> (15 - toBit)) ^ (0xFFFF >>> (16 - fromBit)));\r\n}\r\n\r\n/**\r\n * A lookup table for number of set bits in a 16-bit integer.   This is used to quickly count the cardinality (number of unique elements) of a BitSet.\r\n */\r\nconst POP_CNT: Uint8Array = new Uint8Array(65536);\r\nfor (let i = 0; i < 16; i++) {\r\n\tconst stride = (1 << i) >>> 0;\r\n\tlet index = 0;\r\n\twhile (index < POP_CNT.length) {\r\n\t\t// skip the numbers where the bit isn't set\r\n\t\tindex += stride;\r\n\r\n\t\t// increment the ones where the bit is set\r\n\t\tfor (let j = 0; j < stride; j++) {\r\n\t\t\tPOP_CNT[index]++;\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class BitSet implements Iterable<number>{\r\n\tprivate data: Uint16Array;\r\n\r\n\t/**\r\n\t * Creates a new bit set. All bits are initially `false`.\r\n\t */\r\n\tconstructor();\r\n\r\n\t/**\r\n\t * Creates a bit set whose initial size is large enough to explicitly represent bits with indices in the range `0`\r\n\t * through `nbits-1`. All bits are initially `false`.\r\n\t */\r\n\tconstructor(nbits: number);\r\n\r\n\t/**\r\n\t * Creates a bit set from a iterable list of numbers (including another BitSet);\r\n\t */\r\n\tconstructor(numbers: Iterable<number>);\r\n\r\n\t/*\r\n\t** constructor implementation\r\n\t*/\r\n\tconstructor(arg?: number | Iterable<number>) {\r\n\t\tif (!arg) {\r\n\t\t\t// covering the case of unspecified and nbits===0\r\n\t\t\tthis.data = EMPTY_DATA;\r\n\t\t} else if (typeof arg === \"number\") {\r\n\t\t\tif (arg < 0) {\r\n\t\t\t\tthrow new RangeError(\"nbits cannot be negative\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.data = new Uint16Array(getIndex(arg - 1) + 1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arg instanceof BitSet) {\r\n\t\t\t\tthis.data = arg.data.slice(0); // Clone the data\r\n\t\t\t} else {\r\n\t\t\t\tlet max = -1;\r\n\t\t\t\tfor (let v of arg) {\r\n\t\t\t\t\tif (max < v) {\r\n\t\t\t\t\t\tmax = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.data = new Uint16Array(getIndex(max - 1) + 1);\r\n\t\t\t\tfor (let v of arg) {\r\n\t\t\t\t\tthis.set(v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a logical **AND** of this target bit set with the argument bit set. This bit set is modified so that\r\n\t * each bit in it has the value `true` if and only if it both initially had the value `true` and the corresponding\r\n\t * bit in the bit set argument also had the value `true`.\r\n\t */\r\n\tpublic and(set: BitSet): void {\r\n\t\tconst data = this.data;\r\n\t\tconst other = set.data;\r\n\t\tconst words = Math.min(data.length, other.length);\r\n\r\n\t\tlet lastWord = -1;\t// Keep track of index of last non-zero word\r\n\r\n\t\tfor (let i = 0; i < words; i++) {\r\n\t\t\tlet value = data[i] &= other[i];\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lastWord === -1) {\r\n\t\t\tthis.data = EMPTY_DATA;\r\n\t\t}\r\n\r\n\t\tif (lastWord < data.length - 1) {\r\n\t\t\tthis.data = data.slice(0, lastWord + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all of the bits in this `BitSet` whose corresponding bit is set in the specified `BitSet`.\r\n\t */\r\n\tpublic andNot(set: BitSet): void {\r\n\t\tconst data = this.data;\r\n\t\tconst other = set.data;\r\n\t\tconst words = Math.min(data.length, other.length);\r\n\r\n\t\tlet lastWord = -1;\t// Keep track of index of last non-zero word\r\n\r\n\t\tfor (let i = 0; i < words; i++) {\r\n\t\t\tlet value = data[i] &= (other[i] ^ 0xFFFF);\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lastWord === -1) {\r\n\t\t\tthis.data = EMPTY_DATA;\r\n\t\t}\r\n\r\n\t\tif (lastWord < data.length - 1) {\r\n\t\t\tthis.data = data.slice(0, lastWord + 1);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the number of bits set to `true` in this `BitSet`.\r\n\t */\r\n\tpublic cardinality(): number {\r\n\t\tif (this.isEmpty) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst data = this.data;\r\n\t\tconst length = data.length;\r\n\t\tlet result = 0;\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tresult += POP_CNT[data[i]];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all of the bits in this `BitSet` to `false`.\r\n\t */\r\n\tpublic clear(): void;\r\n\r\n\t/**\r\n\t * Sets the bit specified by the index to `false`.\r\n\t *\r\n\t * @param bitIndex the index of the bit to be cleared\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic clear(bitIndex: number): void;\r\n\r\n\t/**\r\n\t * Sets the bits from the specified `fromIndex` (inclusive) to the specified `toIndex` (exclusive) to `false`.\r\n\t *\r\n\t * @param fromIndex index of the first bit to be cleared\r\n\t * @param toIndex index after the last bit to be cleared\r\n\t *\r\n\t * @throws RangeError if `fromIndex` is negative, or `toIndex` is negative, or `fromIndex` is larger than `toIndex`\r\n\t */\r\n\tpublic clear(fromIndex: number, toIndex: number): void;\r\n\tpublic clear(fromIndex?: number, toIndex?: number): void {\r\n\t\tif (fromIndex == null) {\r\n\t\t\tthis.data.fill(0);\r\n\t\t} else if (toIndex == null) {\r\n\t\t\tthis.set(fromIndex, false);\r\n\t\t} else {\r\n\t\t\tthis.set(fromIndex, toIndex, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bit at the specified index to the complement of its current value.\r\n\t *\r\n\t * @param bitIndex the index of the bit to flip\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic flip(bitIndex: number): void;\r\n\r\n\t/**\r\n\t * Sets each bit from the specified `fromIndex` (inclusive) to the specified `toIndex` (exclusive) to the complement\r\n\t * of its current value.\r\n\t *\r\n\t * @param fromIndex index of the first bit to flip\r\n\t * @param toIndex index after the last bit to flip\r\n\t *\r\n\t * @throws RangeError if `fromIndex` is negative, or `toIndex` is negative, or `fromIndex` is larger than `toIndex`\r\n\t */\r\n\tpublic flip(fromIndex: number, toIndex: number): void;\r\n\tpublic flip(fromIndex: number, toIndex?: number): void {\r\n\t\tif (toIndex == null) {\r\n\t\t\ttoIndex = fromIndex;\r\n\t\t}\r\n\t\tif (fromIndex < 0 || toIndex < fromIndex) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tconst lastWord = getIndex(toIndex);\r\n\r\n\t\tif (word === lastWord) {\r\n\t\t\tthis.data[word] ^= bitsFor(fromIndex, toIndex);\r\n\t\t} else {\r\n\t\t\tthis.data[word++] ^= bitsFor(fromIndex, 15);\r\n\t\t\twhile (word < lastWord) {\r\n\t\t\t\tthis.data[word++] ^= 0xFFFF;\r\n\t\t\t}\r\n\t\t\tthis.data[word++] ^= bitsFor(0, toIndex);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the bit with the specified index. The value is `true` if the bit with the index `bitIndex`\r\n\t * is currently set in this `BitSet`; otherwise, the result is `false`.\r\n\t *\r\n\t * @param bitIndex the bit index\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic get(bitIndex: number): boolean;\r\n\r\n\t/**\r\n\t * Returns a new `BitSet` composed of bits from this `BitSet` from `fromIndex` (inclusive) to `toIndex` (exclusive).\r\n\t *\r\n\t * @param fromIndex index of the first bit to include\r\n\t * @param toIndex index after the last bit to include\r\n\t *\r\n\t * @throws RangeError if `fromIndex` is negative, or `toIndex` is negative, or `fromIndex` is larger than `toIndex`\r\n\t */\r\n\tpublic get(fromIndex: number, toIndex: number): BitSet;\r\n\tpublic get(fromIndex: number, toIndex?: number): boolean | BitSet {\r\n\t\tif (toIndex === undefined) {\r\n\t\t\treturn !!(this.data[getIndex(fromIndex)] & bitsFor(fromIndex, fromIndex));\r\n\t\t} else {\r\n\t\t\t// return a BitSet\r\n\t\t\tlet result = new BitSet(toIndex + 1);\r\n\t\t\tfor (let i = fromIndex; i <= toIndex; i++) {\r\n\t\t\t\tresult.set(i, this.get(i));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the specified `BitSet` has any bits set to `true` that are also set to `true` in this `BitSet`.\r\n\t *\r\n\t * @param set `BitSet` to intersect with\r\n\t */\r\n\tpublic intersects(set: BitSet): boolean {\r\n\t\tlet smallerLength = Math.min(this.length(), set.length());\r\n\t\tif (smallerLength === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet bound = getIndex(smallerLength - 1);\r\n\t\tfor (let i = 0; i <= bound; i++) {\r\n\t\t\tif ((this.data[i] & set.data[i]) !== 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if this `BitSet` contains no bits that are set to `true`.\r\n\t */\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.length() === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"logical size\" of this `BitSet`: the index of the highest set bit in the `BitSet` plus one. Returns\r\n\t * zero if the `BitSet` contains no set bits.\r\n\t */\r\n\tpublic length(): number {\r\n\t\tif (!this.data.length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.previousSetBit(unIndex(this.data.length) - 1) + 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of the first bit that is set to `false` that occurs on or after the specified starting index,\r\n\t * If no such bit exists then `-1` is returned.\r\n\t *\r\n\t * @param fromIndex the index to start checking from (inclusive)\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic nextClearBit(fromIndex: number): number {\r\n\t\tif (fromIndex < 0) {\r\n\t\t\tthrow new RangeError(\"fromIndex cannot be negative\");\r\n\t\t}\r\n\r\n\t\tconst data = this.data;\r\n\t\tconst length = data.length;\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tif (word > length) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tlet ignore = 0xFFFF ^ bitsFor(fromIndex, 15);\r\n\r\n\t\tif ((data[word] | ignore) === 0xFFFF) {\r\n\t\t\tword++;\r\n\t\t\tignore = 0;\r\n\t\t\tfor (; word < length; word++) {\r\n\t\t\t\tif (data[word] !== 0xFFFF) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (word === length) {\r\n\t\t\t\t// Hit the end\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn unIndex(word) + findLSBSet((data[word] | ignore) ^ 0xFFFF);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of the first bit that is set to `true` that occurs on or after the specified starting index.\r\n\t * If no such bit exists then `-1` is returned.\r\n\t *\r\n\t * To iterate over the `true` bits in a `BitSet`, use the following loop:\r\n\t *\r\n\t * ```\r\n\t * for (let i = bs.nextSetBit(0); i >= 0; i = bs.nextSetBit(i + 1)) {\r\n\t *   // operate on index i here\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param fromIndex the index to start checking from (inclusive)\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic nextSetBit(fromIndex: number): number {\r\n\t\tif (fromIndex < 0) {\r\n\t\t\tthrow new RangeError(\"fromIndex cannot be negative\");\r\n\t\t}\r\n\r\n\t\tconst data = this.data;\r\n\t\tconst length = data.length;\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tif (word > length) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tlet mask = bitsFor(fromIndex, 15);\r\n\r\n\t\tif ((data[word] & mask) === 0) {\r\n\t\t\tword++;\r\n\t\t\tmask = 0xFFFF;\r\n\t\t\tfor (; word < length; word++) {\r\n\t\t\t\tif (data[word] !== 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (word >= length) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn unIndex(word) + findLSBSet(data[word] & mask);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a logical **OR** of this bit set with the bit set argument. This bit set is modified so that a bit in it\r\n\t * has the value `true` if and only if it either already had the value `true` or the corresponding bit in the bit\r\n\t * set argument has the value `true`.\r\n\t */\r\n\tpublic or(set: BitSet): void {\r\n\t\tconst data = this.data;\r\n\t\tconst other = set.data;\r\n\t\tconst minWords = Math.min(data.length, other.length);\r\n\t\tconst words = Math.max(data.length, other.length);\r\n\t\tconst dest = data.length === words ? data : new Uint16Array(words);\r\n\r\n\t\tlet lastWord = -1;\r\n\r\n\t\t// Or those words both sets have in common\r\n\r\n\t\tfor (let i = 0; i < minWords; i++) {\r\n\t\t\tlet value = dest[i] = data[i] | other[i];\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy words from larger set (if there is one)\r\n\r\n\t\tconst longer = data.length > other.length ? data : other;\r\n\t\tfor (let i = minWords; i < words; i++) {\r\n\t\t\tlet value = dest[i] = longer[i];\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lastWord === -1) {\r\n\t\t\tthis.data = EMPTY_DATA;\r\n\t\t} else if (dest.length === lastWord + 1) {\r\n\t\t\tthis.data = dest;\r\n\t\t} else {\r\n\t\t\tthis.data = dest.slice(0, lastWord);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of the nearest bit that is set to `false` that occurs on or before the specified starting\r\n\t * index. If no such bit exists, or if `-1` is given as the starting index, then `-1` is returned.\r\n\t *\r\n\t * @param fromIndex the index to start checking from (inclusive)\r\n\t *\r\n\t * @throws RangeError if the specified index is less than `-1`\r\n\t */\r\n\tpublic previousClearBit(fromIndex: number): number {\r\n\t\tif (fromIndex < 0) {\r\n\t\t\tthrow new RangeError(\"fromIndex cannot be negative\");\r\n\t\t}\r\n\r\n\t\tconst data = this.data;\r\n\t\tconst length = data.length;\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tif (word >= length) {\r\n\t\t\tword = length - 1;\r\n\t\t}\r\n\r\n\t\tlet ignore = 0xFFFF ^ bitsFor(0, fromIndex);\r\n\r\n\t\tif ((data[word] | ignore) === 0xFFFF) {\r\n\t\t\tignore = 0;\r\n\t\t\tword--;\r\n\t\t\tfor (; word >= 0; word--) {\r\n\t\t\t\tif (data[word] !== 0xFFFF) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (word < 0) {\r\n\t\t\t\t// Hit the end\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn unIndex(word) + findMSBSet((data[word] | ignore) ^ 0xFFFF);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the index of the nearest bit that is set to `true` that occurs on or before the specified starting index.\r\n\t * If no such bit exists, or if `-1` is given as the starting index, then `-1` is returned.\r\n\t *\r\n\t * To iterate over the `true` bits in a `BitSet`, use the following loop:\r\n\t *\r\n\t * ```\r\n\t * for (let i = bs.length(); (i = bs.previousSetBit(i-1)) >= 0; ) {\r\n\t *   // operate on index i here\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param fromIndex the index to start checking from (inclusive)\r\n\t *\r\n\t * @throws RangeError if the specified index is less than `-1`\r\n\t */\r\n\tpublic previousSetBit(fromIndex: number): number {\r\n\t\tif (fromIndex < 0) {\r\n\t\t\tthrow new RangeError(\"fromIndex cannot be negative\");\r\n\t\t}\r\n\r\n\t\tconst data = this.data;\r\n\t\tconst length = data.length;\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tif (word >= length) {\r\n\t\t\tword = length - 1;\r\n\t\t}\r\n\r\n\t\tlet mask = bitsFor(0, fromIndex);\r\n\r\n\t\tif ((data[word] & mask) === 0) {\r\n\t\t\tword--;\r\n\t\t\tmask = 0xFFFF;\r\n\t\t\tfor (; word >= 0; word--) {\r\n\t\t\t\tif (data[word] !== 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (word < 0) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn unIndex(word) + findMSBSet(data[word] & mask);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bit at the specified index to `true`.\r\n\t *\r\n\t * @param bitIndex a bit index\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic set(bitIndex: number): void;\r\n\r\n\t/**\r\n\t * Sets the bit at the specified index to the specified value.\r\n\t *\r\n\t * @param bitIndex a bit index\r\n\t * @param value a boolean value to set\r\n\t *\r\n\t * @throws RangeError if the specified index is negative\r\n\t */\r\n\tpublic set(bitIndex: number, value: boolean): void;\r\n\r\n\t/**\r\n\t * Sets the bits from the specified `fromIndex` (inclusive) to the specified `toIndex` (exclusive) to `true`.\r\n\t *\r\n\t * @param fromIndex index of the first bit to be set\r\n\t * @param toIndex index after the last bit to be set\r\n\t *\r\n\t * @throws RangeError if `fromIndex` is negative, or `toIndex` is negative, or `fromIndex` is larger than `toIndex`\r\n\t */\r\n\tpublic set(fromIndex: number, toIndex: number): void;\r\n\r\n\t/**\r\n\t * Sets the bits from the specified `fromIndex` (inclusive) to the specified `toIndex` (exclusive) to the specified\r\n\t * value.\r\n\t *\r\n\t * @param fromIndex index of the first bit to be set\r\n\t * @param toIndex index after the last bit to be set\r\n\t * @param value value to set the selected bits to\r\n\t *\r\n\t * @throws RangeError if `fromIndex` is negative, or `toIndex` is negative, or `fromIndex` is larger than `toIndex`\r\n\t */\r\n\tpublic set(fromIndex: number, toIndex: number, value: boolean): void;\r\n\tpublic set(fromIndex: number, toIndex?: boolean | number, value?: boolean): void {\r\n\t\tif (toIndex === undefined) {\r\n\t\t\ttoIndex = fromIndex;\r\n\t\t\tvalue = true;\r\n\t\t} else if (typeof toIndex === \"boolean\") {\r\n\t\t\tvalue = toIndex;\r\n\t\t\ttoIndex = fromIndex;\r\n\t\t}\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\tvalue = true;\r\n\t\t}\r\n\r\n\t\tif (fromIndex < 0 || fromIndex > toIndex) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\tlet word = getIndex(fromIndex);\r\n\t\tlet lastWord = getIndex(toIndex);\r\n\r\n\t\tif (value && lastWord >= this.data.length) {\r\n\t\t\t// Grow array \"just enough\" for bits we need to set\r\n\t\t\tlet temp = new Uint16Array(lastWord + 1);\r\n\t\t\tthis.data.forEach((value, index) => temp[index] = value);\r\n\t\t\tthis.data = temp;\r\n\t\t} else if (!value) {\r\n\t\t\t// But there is no need to grow array to clear bits.\r\n\t\t\tif (word >= this.data.length) {\r\n\t\t\t\t// Early exit\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (lastWord >= this.data.length) {\r\n\t\t\t\t// Adjust work to fit array\r\n\t\t\t\tlastWord = this.data.length - 1;\r\n\t\t\t\ttoIndex = this.data.length * 16 - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (word === lastWord) {\r\n\t\t\tthis._setBits(word, value, bitsFor(fromIndex, toIndex));\r\n\t\t} else {\r\n\t\t\tthis._setBits(word++, value, bitsFor(fromIndex, 15));\r\n\t\t\twhile (word < lastWord) {\r\n\t\t\t\tthis.data[word++] = value ? 0xFFFF : 0;\r\n\t\t\t}\r\n\t\t\tthis._setBits(word, value, bitsFor(0, toIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setBits(word: number, value: boolean, mask: number) {\r\n\t\tif (value) {\r\n\t\t\tthis.data[word] |= mask;\r\n\t\t} else {\r\n\t\t\tthis.data[word] &= 0xFFFF ^ mask;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of bits of space actually in use by this `BitSet` to represent bit values. The maximum element\r\n\t * in the set is the size - 1st element.\r\n\t */\r\n\tget size(): number {\r\n\t\treturn this.data.byteLength * 8;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new byte array containing all the bits in this bit set.\r\n\t *\r\n\t * More precisely, if\r\n\t * `let bytes = s.toByteArray();`\r\n\t * then `bytes.length === (s.length()+7)/8` and `s.get(n) === ((bytes[n/8] & (1<<(n%8))) != 0)` for all\r\n\t * `n < 8 * bytes.length`.\r\n\t */\r\n\t// toByteArray(): Int8Array {\r\n\t// \tthrow new Error(\"NOT IMPLEMENTED\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Returns a new integer array containing all the bits in this bit set.\r\n\t *\r\n\t * More precisely, if\r\n\t * `let integers = s.toIntegerArray();`\r\n\t * then `integers.length === (s.length()+31)/32` and `s.get(n) === ((integers[n/32] & (1<<(n%32))) != 0)` for all\r\n\t * `n < 32 * integers.length`.\r\n\t */\r\n\t// toIntegerArray(): Int32Array {\r\n\t// \tthrow new Error(\"NOT IMPLEMENTED\");\r\n\t// }\r\n\r\n\tpublic hashCode(): number {\r\n\t\treturn MurmurHash.hashCode(this.data, 22);\r\n\t}\r\n\r\n\t/**\r\n\t * Compares this object against the specified object. The result is `true` if and only if the argument is not\r\n\t * `undefined` and is a `Bitset` object that has exactly the same set of bits set to `true` as this bit set. That\r\n\t * is, for every nonnegative index `k`,\r\n\t *\r\n\t * ```\r\n\t * ((BitSet)obj).get(k) == this.get(k)\r\n\t * ```\r\n\t *\r\n\t * must be true. The current sizes of the two bit sets are not compared.\r\n\t */\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof BitSet)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst len = this.length();\r\n\r\n\t\tif (len !== obj.length()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (len === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet bound = getIndex(len - 1);\r\n\t\tfor (let i = 0; i <= bound; i++) {\r\n\t\t\tif (this.data[i] !== obj.data[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of this bit set. For every index for which this `BitSet` contains a bit in the\r\n\t * set state, the decimal representation of that index is included in the result. Such indices are listed in order\r\n\t * from lowest to highest, separated by \", \" (a comma and a space) and surrounded by braces, resulting in the usual\r\n\t * mathematical notation for a set of integers.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *     BitSet drPepper = new BitSet();\r\n\t *\r\n\t * Now `drPepper.toString()` returns `\"{}\"`.\r\n\t *\r\n\t *     drPepper.set(2);\r\n\t *\r\n\t * Now `drPepper.toString()` returns `\"{2}\"`.\r\n\t *\r\n\t *     drPepper.set(4);\r\n\t *     drPepper.set(10);\r\n\t *\r\n\t * Now `drPepper.toString()` returns `\"{2, 4, 10}\"`.\r\n\t */\r\n\tpublic toString(): string {\r\n\t\tlet result = \"{\";\r\n\r\n\t\tlet first = true;\r\n\t\tfor (let i = this.nextSetBit(0); i >= 0; i = this.nextSetBit(i + 1)) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t} else {\r\n\t\t\t\tresult += \", \";\r\n\t\t\t}\r\n\r\n\t\t\tresult += i;\r\n\t\t}\r\n\r\n\t\tresult += \"}\";\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// static valueOf(bytes: Int8Array): BitSet;\r\n\t// static valueOf(buffer: ArrayBuffer): BitSet;\r\n\t// static valueOf(integers: Int32Array): BitSet;\r\n\t// static valueOf(data: Int8Array | Int32Array | ArrayBuffer): BitSet {\r\n\t// \tthrow new Error(\"NOT IMPLEMENTED\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Performs a logical **XOR** of this bit set with the bit set argument. This bit set is modified so that a bit in\r\n\t * it has the value `true` if and only if one of the following statements holds:\r\n\t *\r\n\t * * The bit initially has the value `true`, and the corresponding bit in the argument has the value `false`.\r\n\t * * The bit initially has the value `false`, and the corresponding bit in the argument has the value `true`.\r\n\t */\r\n\tpublic xor(set: BitSet): void {\r\n\t\tconst data = this.data;\r\n\t\tconst other = set.data;\r\n\t\tconst minWords = Math.min(data.length, other.length);\r\n\t\tconst words = Math.max(data.length, other.length);\r\n\t\tconst dest = data.length === words ? data : new Uint16Array(words);\r\n\r\n\t\tlet lastWord = -1;\r\n\r\n\t\t// Xor those words both sets have in common\r\n\r\n\t\tfor (let i = 0; i < minWords; i++) {\r\n\t\t\tlet value = dest[i] = data[i] ^ other[i];\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy words from larger set (if there is one)\r\n\r\n\t\tconst longer = data.length > other.length ? data : other;\r\n\t\tfor (let i = minWords; i < words; i++) {\r\n\t\t\tlet value = dest[i] = longer[i];\r\n\t\t\tif (value !== 0) {\r\n\t\t\t\tlastWord = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lastWord === -1) {\r\n\t\t\tthis.data = EMPTY_DATA;\r\n\t\t} else if (dest.length === lastWord + 1) {\r\n\t\t\tthis.data = dest;\r\n\t\t} else {\r\n\t\t\tthis.data = dest.slice(0, lastWord + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clone() {\r\n\t\treturn new BitSet(this);\r\n\t}\r\n\r\n\tpublic [Symbol.iterator](): IterableIterator<number> {\r\n\t\treturn new BitSetIterator(this.data);\r\n\t}\r\n\r\n\t// Overrides formatting for nodejs assert etc.\r\n\tpublic [(util.inspect as any).custom](): string {\r\n\t\treturn \"BitSet \" + this.toString();\r\n\t}\r\n}\r\n\r\nclass BitSetIterator implements IterableIterator<number>{\r\n\tprivate index = 0;\r\n\tprivate mask = 0xFFFF;\r\n\r\n\tconstructor(private data: Uint16Array) { }\r\n\r\n\tpublic next() {\r\n\t\twhile (this.index < this.data.length) {\r\n\t\t\tconst bits = this.data[this.index] & this.mask;\r\n\t\t\tif (bits !== 0) {\r\n\t\t\t\tconst bitNumber = unIndex(this.index) + findLSBSet(bits);\r\n\t\t\t\tthis.mask = bitsFor(bitNumber + 1, 15);\r\n\t\t\t\treturn { done: false, value: bitNumber };\r\n\t\t\t}\r\n\t\t\tthis.index++;\r\n\t\t\tthis.mask = 0xFFFF;\r\n\t\t}\r\n\t\treturn { done: true, value: -1 };\r\n\t}\r\n\r\n\tpublic [Symbol.iterator](): IterableIterator<number> { return this; }\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nexport function isHighSurrogate(ch: number): boolean {\r\n\treturn ch >= 0xD800 && ch <= 0xDBFF;\r\n}\r\n\r\nexport function isLowSurrogate(ch: number): boolean {\r\n\treturn ch >= 0xDC00 && ch <= 0xDFFF;\r\n}\r\n\r\nexport function isSupplementaryCodePoint(ch: number): boolean {\r\n\treturn ch >= 0x10000;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport { EqualityComparator } from \"./EqualityComparator\";\r\nimport { Override } from \"../Decorators\";\r\nimport { Equatable } from \"./Stubs\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\nimport { ObjectEqualityComparator } from \"./ObjectEqualityComparator\";\r\n\r\n/**\r\n * This default implementation of {@link EqualityComparator} uses object equality\r\n * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class DefaultEqualityComparator implements EqualityComparator<any> {\r\n\tpublic static readonly INSTANCE: DefaultEqualityComparator = new DefaultEqualityComparator();\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation returns\r\n\t * `obj.`{@link Object#hashCode hashCode()}.\r\n\t */\r\n\t@Override\r\n\tpublic hashCode(obj: any): number {\r\n\t\tif (obj == null) {\r\n\t\t\treturn 0;\r\n\t\t} else if (typeof obj === \"string\" || typeof obj === \"number\") {\r\n\t\t\treturn MurmurHash.hashCode([obj]);\r\n\t\t} else {\r\n\t\t\treturn ObjectEqualityComparator.INSTANCE.hashCode(obj as Equatable);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation relies on object equality. If both objects are\r\n\t * `undefined` or `null`, this method returns `true`. Otherwise if only\r\n\t * `a` is `undefined` or `null`, this method returns `false`. Otherwise,\r\n\t * this method returns the result of\r\n\t * `a.`{@link Object#equals equals}`(b)`.\r\n\t */\r\n\t@Override\r\n\tpublic equals(a: any, b: any): boolean {\r\n\t\tif (a == null) {\r\n\t\t\treturn b == null;\r\n\t\t} else if (typeof a === \"string\" || typeof a === \"number\") {\r\n\t\t\treturn a === b;\r\n\t\t} else {\r\n\t\t\treturn ObjectEqualityComparator.INSTANCE.equals(a as Equatable, b as Equatable);\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:40.5099429-07:00\r\n\r\nimport { Arrays } from \"./Arrays\";\r\nimport { NotNull, Override } from \"../Decorators\";\r\nimport { JavaCollection } from \"./Stubs\";\r\n\r\nconst EMPTY_DATA: Int32Array = new Int32Array(0);\r\n\r\nconst INITIAL_SIZE: number = 4;\r\nconst MAX_ARRAY_SIZE: number = (((1 << 31) >>> 0) - 1) - 8;\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class IntegerList {\r\n\t@NotNull\r\n\tprivate _data: Int32Array;\r\n\r\n\tprivate _size: number;\r\n\r\n\tconstructor(arg?: number | IntegerList | Iterable<number>) {\r\n\t\tif (!arg) {\r\n\t\t\tthis._data = EMPTY_DATA;\r\n\t\t\tthis._size = 0;\r\n\t\t} else if (arg instanceof IntegerList) {\r\n\t\t\tthis._data = arg._data.slice(0);\r\n\t\t\tthis._size = arg._size;\r\n\t\t} else if (typeof arg === \"number\") {\r\n\t\t\tif (arg === 0) {\r\n\t\t\t\tthis._data = EMPTY_DATA;\r\n\t\t\t\tthis._size = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis._data = new Int32Array(arg);\r\n\t\t\t\tthis._size = 0;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// arg is Iterable<number>\r\n\t\t\tthis._data = EMPTY_DATA;\r\n\t\t\tthis._size = 0;\r\n\t\t\tfor (let value of arg) {\r\n\t\t\t\tthis.add(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic add(value: number): void {\r\n\t\tif (this._data.length === this._size) {\r\n\t\t\tthis.ensureCapacity(this._size + 1);\r\n\t\t}\r\n\r\n\t\tthis._data[this._size] = value;\r\n\t\tthis._size++;\r\n\t}\r\n\r\n\tpublic addAll(list: number[] | IntegerList | JavaCollection<number>): void {\r\n\t\tif (Array.isArray(list)) {\r\n\t\t\tthis.ensureCapacity(this._size + list.length);\r\n\t\t\tthis._data.subarray(this._size, this._size + list.length).set(list);\r\n\t\t\tthis._size += list.length;\r\n\t\t} else if (list instanceof IntegerList) {\r\n\t\t\tthis.ensureCapacity(this._size + list._size);\r\n\t\t\tthis._data.subarray(this._size, this._size + list.size).set(list._data);\r\n\t\t\tthis._size += list._size;\r\n\t\t} else {\r\n\t\t\t// list is JavaCollection<number>\r\n\t\t\tthis.ensureCapacity(this._size + list.size);\r\n\t\t\tlet current: number = 0;\r\n\t\t\tfor (let xi of list) {\r\n\t\t\t\tthis._data[this._size + current] = xi;\r\n\t\t\t\tcurrent++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._size += list.size;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get(index: number): number {\r\n\t\tif (index < 0 || index >= this._size) {\r\n\t\t\tthrow RangeError();\r\n\t\t}\r\n\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tpublic contains(value: number): boolean {\r\n\t\tfor (let i = 0; i < this._size; i++) {\r\n\t\t\tif (this._data[i] === value) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic set(index: number, value: number): number {\r\n\t\tif (index < 0 || index >= this._size) {\r\n\t\t\tthrow RangeError();\r\n\t\t}\r\n\r\n\t\tlet previous: number = this._data[index];\r\n\t\tthis._data[index] = value;\r\n\t\treturn previous;\r\n\t}\r\n\r\n\tpublic removeAt(index: number): number {\r\n\t\tlet value: number = this.get(index);\r\n\t\tthis._data.copyWithin(index, index + 1, this._size);\r\n\t\tthis._data[this._size - 1] = 0;\r\n\t\tthis._size--;\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic removeRange(fromIndex: number, toIndex: number): void {\r\n\t\tif (fromIndex < 0 || toIndex < 0 || fromIndex > this._size || toIndex > this._size) {\r\n\t\t\tthrow RangeError();\r\n\t\t}\r\n\r\n\t\tif (fromIndex > toIndex) {\r\n\t\t\tthrow RangeError();\r\n\t\t}\r\n\r\n\t\tthis._data.copyWithin(toIndex, fromIndex, this._size);\r\n\t\tthis._data.fill(0, this._size - (toIndex - fromIndex), this._size);\r\n\t\tthis._size -= (toIndex - fromIndex);\r\n\t}\r\n\r\n\tget isEmpty(): boolean {\r\n\t\treturn this._size === 0;\r\n\t}\r\n\r\n\tget size(): number {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic trimToSize(): void {\r\n\t\tif (this._data.length === this._size) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._data = this._data.slice(0, this._size);\r\n\t}\r\n\r\n\tpublic clear(): void {\r\n\t\tthis._data.fill(0, 0, this._size);\r\n\t\tthis._size = 0;\r\n\t}\r\n\r\n\tpublic toArray(): number[] {\r\n\t\tif (this._size === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\treturn Array.from(this._data.subarray(0, this._size));\r\n\t}\r\n\r\n\tpublic sort(): void {\r\n\t\tthis._data.subarray(0, this._size).sort();\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the specified object with this list for equality.  Returns\r\n\t * `true` if and only if the specified object is also an {@link IntegerList},\r\n\t * both lists have the same size, and all corresponding pairs of elements in\r\n\t * the two lists are equal.  In other words, two lists are defined to be\r\n\t * equal if they contain the same elements in the same order.\r\n\t *\r\n\t * This implementation first checks if the specified object is this\r\n\t * list. If so, it returns `true`; if not, it checks if the\r\n\t * specified object is an {@link IntegerList}. If not, it returns `false`;\r\n\t * if so, it checks the size of both lists. If the lists are not the same size,\r\n\t * it returns `false`; otherwise it iterates over both lists, comparing\r\n\t * corresponding pairs of elements.  If any comparison returns `false`,\r\n\t * this method returns `false`.\r\n\t *\r\n\t * @param o the object to be compared for equality with this list\r\n\t * @returns `true` if the specified object is equal to this list\r\n\t */\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (o === this) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!(o instanceof IntegerList)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this._size !== o._size) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this._size; i++) {\r\n\t\t\tif (this._data[i] !== o._data[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the hash code value for this list.\r\n\t *\r\n\t * This implementation uses exactly the code that is used to define the\r\n\t * list hash function in the documentation for the {@link List#hashCode}\r\n\t * method.\r\n\t *\r\n\t * @returns the hash code value for this list\r\n\t */\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hashCode: number = 1;\r\n\t\tfor (let i = 0; i < this._size; i++) {\r\n\t\t\thashCode = 31 * hashCode + this._data[i];\r\n\t\t}\r\n\r\n\t\treturn hashCode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string representation of this list.\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this._data.toString();\r\n\t}\r\n\r\n\tpublic binarySearch(key: number, fromIndex?: number, toIndex?: number): number {\r\n\t\tif (fromIndex === undefined) {\r\n\t\t\tfromIndex = 0;\r\n\t\t}\r\n\r\n\t\tif (toIndex === undefined) {\r\n\t\t\ttoIndex = this._size;\r\n\t\t}\r\n\r\n\t\tif (fromIndex < 0 || toIndex < 0 || fromIndex > this._size || toIndex > this._size) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\tif (fromIndex > toIndex) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\treturn Arrays.binarySearch(this._data, key, fromIndex, toIndex);\r\n\t}\r\n\r\n\tprivate ensureCapacity(capacity: number): void {\r\n\t\tif (capacity < 0 || capacity > MAX_ARRAY_SIZE) {\r\n\t\t\tthrow new RangeError();\r\n\t\t}\r\n\r\n\t\tlet newLength: number;\r\n\t\tif (this._data.length === 0) {\r\n\t\t\tnewLength = INITIAL_SIZE;\r\n\t\t} else {\r\n\t\t\tnewLength = this._data.length;\r\n\t\t}\r\n\r\n\t\twhile (newLength < capacity) {\r\n\t\t\tnewLength = newLength * 2;\r\n\t\t\tif (newLength < 0 || newLength > MAX_ARRAY_SIZE) {\r\n\t\t\t\tnewLength = MAX_ARRAY_SIZE;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet tmp = new Int32Array(newLength);\r\n\t\ttmp.set(this._data);\r\n\t\tthis._data = tmp;\r\n\t}\r\n\r\n\t/** Convert the list to a UTF-16 encoded char array. If all values are less\r\n\t *  than the 0xFFFF 16-bit code point limit then this is just a char array\r\n\t *  of 16-bit char as usual. For values in the supplementary range, encode\r\n\t * them as two UTF-16 code units.\r\n\t */\r\n\tpublic toCharArray(): Uint16Array {\r\n\t\t// Optimize for the common case (all data values are < 0xFFFF) to avoid an extra scan\r\n\t\tlet resultArray: Uint16Array = new Uint16Array(this._size);\r\n\t\tlet resultIdx = 0;\r\n\t\tlet calculatedPreciseResultSize = false;\r\n\t\tfor (let i = 0; i < this._size; i++) {\r\n\t\t\tlet codePoint = this._data[i];\r\n\t\t\tif (codePoint >= 0 && codePoint < 0x10000) {\r\n\t\t\t\tresultArray[resultIdx] = codePoint;\r\n\t\t\t\tresultIdx++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate the precise result size if we encounter a code point > 0xFFFF\r\n\t\t\tif (!calculatedPreciseResultSize) {\r\n\t\t\t\tlet newResultArray = new Uint16Array(this.charArraySize());\r\n\t\t\t\tnewResultArray.set(resultArray, 0);\r\n\t\t\t\tresultArray = newResultArray;\r\n\t\t\t\tcalculatedPreciseResultSize = true;\r\n\t\t\t}\r\n\r\n\t\t\t// This will throw RangeError if the code point is not a valid Unicode code point\r\n\t\t\tlet pair = String.fromCodePoint(codePoint);\r\n\t\t\tresultArray[resultIdx] = pair.charCodeAt(0);\r\n\t\t\tresultArray[resultIdx + 1] = pair.charCodeAt(1);\r\n\t\t\tresultIdx += 2;\r\n\t\t}\r\n\t\treturn resultArray;\r\n\t}\r\n\r\n\tprivate charArraySize(): number {\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < this._size; i++) {\r\n\t\t\tresult += this._data[i] >= 0x10000 ? 2 : 1;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:40.6647101-07:00\r\n\r\nimport { IntegerList } from \"./IntegerList\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class IntegerStack extends IntegerList {\r\n\r\n\tconstructor(arg?: number | IntegerStack) {\r\n\t\tsuper(arg);\r\n\t}\r\n\r\n\tpublic push(value: number): void {\r\n\t\tthis.add(value);\r\n\t}\r\n\r\n\tpublic pop(): number {\r\n\t\treturn this.removeAt(this.size - 1);\r\n\t}\r\n\r\n\tpublic peek(): number {\r\n\t\treturn this.get(this.size - 1);\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:40.7402214-07:00\r\n\r\nimport { Override } from \"../Decorators\";\r\nimport { Equatable } from \"./Stubs\";\r\n\r\nconst INTERVAL_POOL_MAX_VALUE: number = 1000;\r\n\r\n/** An immutable inclusive interval a..b */\r\nexport class Interval implements Equatable {\r\n\tprivate static _INVALID: Interval = new Interval(-1, -2);\r\n\tstatic get INVALID(): Interval {\r\n\t\treturn Interval._INVALID;\r\n\t}\r\n\r\n\tprivate static readonly cache: Interval[] = new Array<Interval>(INTERVAL_POOL_MAX_VALUE + 1);\r\n\r\n\t/**\r\n\t * @param a The start of the interval\r\n\t * @param b The end of the interval (inclusive)\r\n\t */\r\n\tconstructor(public a: number, public b: number) {\r\n\t}\r\n\r\n\t/** Interval objects are used readonly so share all with the\r\n\t *  same single value a==b up to some max size.  Use an array as a perfect hash.\r\n\t *  Return shared object for 0..INTERVAL_POOL_MAX_VALUE or a new\r\n\t *  Interval object with a..a in it.  On Java.g4, 218623 IntervalSets\r\n\t *  have a..a (set with 1 element).\r\n\t */\r\n\tpublic static of(a: number, b: number): Interval {\r\n\t\t// cache just a..a\r\n\t\tif (a !== b || a < 0 || a > INTERVAL_POOL_MAX_VALUE) {\r\n\t\t\treturn new Interval(a, b);\r\n\t\t}\r\n\r\n\t\tif (Interval.cache[a] == null) {\r\n\t\t\tInterval.cache[a] = new Interval(a, a);\r\n\t\t}\r\n\r\n\t\treturn Interval.cache[a];\r\n\t}\r\n\r\n\t/** return number of elements between a and b inclusively. x..x is length 1.\r\n\t *  if b &lt; a, then length is 0.  9..10 has length 2.\r\n\t */\r\n\tget length(): number {\r\n\t\tif (this.b < this.a) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn this.b - this.a + 1;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (o === this) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (!(o instanceof Interval)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.a === o.a && this.b === o.b;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = 23;\r\n\t\thash = hash * 31 + this.a;\r\n\t\thash = hash * 31 + this.b;\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/** Does this start completely before other? Disjoint */\r\n\tpublic startsBeforeDisjoint(other: Interval): boolean {\r\n\t\treturn this.a < other.a && this.b < other.a;\r\n\t}\r\n\r\n\t/** Does this start at or before other? Nondisjoint */\r\n\tpublic startsBeforeNonDisjoint(other: Interval): boolean {\r\n\t\treturn this.a <= other.a && this.b >= other.a;\r\n\t}\r\n\r\n\t/** Does this.a start after other.b? May or may not be disjoint */\r\n\tpublic startsAfter(other: Interval): boolean {\r\n\t\treturn this.a > other.a;\r\n\t}\r\n\r\n\t/** Does this start completely after other? Disjoint */\r\n\tpublic startsAfterDisjoint(other: Interval): boolean {\r\n\t\treturn this.a > other.b;\r\n\t}\r\n\r\n\t/** Does this start after other? NonDisjoint */\r\n\tpublic startsAfterNonDisjoint(other: Interval): boolean {\r\n\t\treturn this.a > other.a && this.a <= other.b; // this.b>=other.b implied\r\n\t}\r\n\r\n\t/** Are both ranges disjoint? I.e., no overlap? */\r\n\tpublic disjoint(other: Interval): boolean {\r\n\t\treturn this.startsBeforeDisjoint(other) || this.startsAfterDisjoint(other);\r\n\t}\r\n\r\n\t/** Are two intervals adjacent such as 0..41 and 42..42? */\r\n\tpublic adjacent(other: Interval): boolean {\r\n\t\treturn this.a === other.b + 1 || this.b === other.a - 1;\r\n\t}\r\n\r\n\tpublic properlyContains(other: Interval): boolean {\r\n\t\treturn other.a >= this.a && other.b <= this.b;\r\n\t}\r\n\r\n\t/** Return the interval computed from combining this and other */\r\n\tpublic union(other: Interval): Interval {\r\n\t\treturn Interval.of(Math.min(this.a, other.a), Math.max(this.b, other.b));\r\n\t}\r\n\r\n\t/** Return the interval in common between this and o */\r\n\tpublic intersection(other: Interval): Interval {\r\n\t\treturn Interval.of(Math.max(this.a, other.a), Math.min(this.b, other.b));\r\n\t}\r\n\r\n\t/** Return the interval with elements from `this` not in `other`;\r\n\t *  `other` must not be totally enclosed (properly contained)\r\n\t *  within `this`, which would result in two disjoint intervals\r\n\t *  instead of the single one returned by this method.\r\n\t */\r\n\tpublic differenceNotProperlyContained(other: Interval): Interval | undefined {\r\n\t\tlet diff: Interval | undefined;\r\n\t\tif (other.startsBeforeNonDisjoint(this)) {\r\n\t\t\t// other.a to left of this.a (or same)\r\n\t\t\tdiff = Interval.of(Math.max(this.a, other.b + 1), this.b);\r\n\t\t} else if (other.startsAfterNonDisjoint(this)) {\r\n\t\t\t// other.a to right of this.a\r\n\t\t\tdiff = Interval.of(this.a, other.a - 1);\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this.a + \"..\" + this.b;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:40.8683480-07:00\r\n\r\nimport { ArrayEqualityComparator } from \"./ArrayEqualityComparator\";\r\nimport { IntegerList } from \"./IntegerList\";\r\nimport { Interval } from \"./Interval\";\r\nimport { IntSet } from \"./IntSet\";\r\nimport { Lexer } from \"../Lexer\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\nimport { Override, NotNull } from \"../Decorators\";\r\nimport { Token } from \"../Token\";\r\nimport { Vocabulary } from \"../Vocabulary\";\r\n\r\n/**\r\n * This class implements the {@link IntSet} backed by a sorted array of\r\n * non-overlapping intervals. It is particularly efficient for representing\r\n * large collections of numbers, where the majority of elements appear as part\r\n * of a sequential range of numbers that are all part of the set. For example,\r\n * the set { 1, 2, 3, 4, 7, 8 } may be represented as { [1, 4], [7, 8] }.\r\n *\r\n * This class is able to represent sets containing any combination of values in\r\n * the range {@link Integer#MIN_VALUE} to {@link Integer#MAX_VALUE}\r\n * (inclusive).\r\n */\r\nexport class IntervalSet implements IntSet {\r\n\tprivate static _COMPLETE_CHAR_SET: IntervalSet;\r\n\tstatic get COMPLETE_CHAR_SET(): IntervalSet {\r\n\t\tif (IntervalSet._COMPLETE_CHAR_SET === undefined) {\r\n\t\t\tIntervalSet._COMPLETE_CHAR_SET = IntervalSet.of(Lexer.MIN_CHAR_VALUE, Lexer.MAX_CHAR_VALUE);\r\n\t\t\tIntervalSet._COMPLETE_CHAR_SET.setReadonly(true);\r\n\t\t}\r\n\r\n\t\treturn IntervalSet._COMPLETE_CHAR_SET;\r\n\t}\r\n\r\n\tprivate static _EMPTY_SET: IntervalSet;\r\n\tstatic get EMPTY_SET(): IntervalSet {\r\n\t\tif (IntervalSet._EMPTY_SET == null) {\r\n\t\t\tIntervalSet._EMPTY_SET = new IntervalSet();\r\n\t\t\tIntervalSet._EMPTY_SET.setReadonly(true);\r\n\t\t}\r\n\r\n\t\treturn IntervalSet._EMPTY_SET;\r\n\t}\r\n\r\n\t/** The list of sorted, disjoint intervals. */\r\n\tprivate _intervals: Interval[];\r\n\r\n\tprivate readonly: boolean = false;\r\n\r\n\tconstructor(intervals?: Interval[]) {\r\n\t\tif (intervals != null) {\r\n\t\t\tthis._intervals = intervals.slice(0);\r\n\t\t} else {\r\n\t\t\tthis._intervals = [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create a set with all ints within range [a..b] (inclusive). If b is omitted, the set contains the single element\r\n\t * a.\r\n\t */\r\n\t@NotNull\r\n\tpublic static of(a: number, b: number = a): IntervalSet {\r\n\t\tlet s: IntervalSet = new IntervalSet();\r\n\t\ts.add(a, b);\r\n\t\treturn s;\r\n\t}\r\n\r\n\tpublic clear(): void {\r\n\t\tif (this.readonly) {\r\n\t\t\tthrow new Error(\"can't alter readonly IntervalSet\");\r\n\t\t}\r\n\r\n\t\tthis._intervals.length = 0;\r\n\t}\r\n\r\n\t/** Add interval; i.e., add all integers from a to b to set.\r\n\t *  If b&lt;a, do nothing.\r\n\t *  Keep list in sorted order (by left range value).\r\n\t *  If overlap, combine ranges.  For example,\r\n\t *  If this is {1..5, 10..20}, adding 6..7 yields\r\n\t *  {1..5, 6..7, 10..20}.  Adding 4..8 yields {1..8, 10..20}.\r\n\t */\r\n\tpublic add(a: number, b: number = a): void {\r\n\t\tthis.addRange(Interval.of(a, b));\r\n\t}\r\n\r\n\t// copy on write so we can cache a..a intervals and sets of that\r\n\tprotected addRange(addition: Interval): void {\r\n\t\tif (this.readonly) {\r\n\t\t\tthrow new Error(\"can't alter readonly IntervalSet\");\r\n\t\t}\r\n\r\n\t\t//System.out.println(\"add \"+addition+\" to \"+intervals.toString());\r\n\t\tif (addition.b < addition.a) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// find position in list\r\n\t\t// Use iterators as we modify list in place\r\n\t\tfor (let i: number = 0; i < this._intervals.length; i++) {\r\n\t\t\tlet r: Interval = this._intervals[i];\r\n\t\t\tif (addition.equals(r)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (addition.adjacent(r) || !addition.disjoint(r)) {\r\n\t\t\t\t// next to each other, make a single larger interval\r\n\t\t\t\tlet bigger: Interval = addition.union(r);\r\n\t\t\t\tthis._intervals[i] = bigger;\r\n\t\t\t\t// make sure we didn't just create an interval that\r\n\t\t\t\t// should be merged with next interval in list\r\n\t\t\t\twhile (i < this._intervals.length - 1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tlet next: Interval = this._intervals[i];\r\n\t\t\t\t\tif (!bigger.adjacent(next) && bigger.disjoint(next)) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if we bump up against or overlap next, merge\r\n\t\t\t\t\t// remove this one\r\n\t\t\t\t\tthis._intervals.splice(i, 1);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t\t// move backwards to what we just set\r\n\t\t\t\t\tthis._intervals[i] = bigger.union(next);\r\n\t\t\t\t\t// set to 3 merged ones\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// first call to next after previous duplicates the result\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (addition.startsBeforeDisjoint(r)) {\r\n\t\t\t\t// insert before r\r\n\t\t\t\tthis._intervals.splice(i, 0, addition);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if disjoint and after r, a future iteration will handle it\r\n\t\t}\r\n\r\n\t\t// ok, must be after last interval (and disjoint from last interval)\r\n\t\t// just add it\r\n\t\tthis._intervals.push(addition);\r\n\t}\r\n\r\n\t/** combine all sets in the array returned the or'd value */\r\n\tpublic static or(sets: IntervalSet[]): IntervalSet {\r\n\t\tlet r: IntervalSet = new IntervalSet();\r\n\t\tfor (let s of sets) {\r\n\t\t\tr.addAll(s);\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic addAll(set: IntSet): IntervalSet {\r\n\t\tif (set == null) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (set instanceof IntervalSet) {\r\n\t\t\tlet other: IntervalSet = set;\r\n\t\t\t// walk set and add each interval\r\n\t\t\tlet n: number = other._intervals.length;\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\tlet I: Interval = other._intervals[i];\r\n\t\t\t\tthis.add(I.a, I.b);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let value of set.toArray()) {\r\n\t\t\t\tthis.add(value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic complementRange(minElement: number, maxElement: number): IntervalSet {\r\n\t\treturn this.complement(IntervalSet.of(minElement, maxElement));\r\n\t}\r\n\r\n\t/** {@inheritDoc} */\r\n\t@Override\r\n\tpublic complement(vocabulary: IntSet): IntervalSet {\r\n\t\tif (vocabulary.isNil) {\r\n\t\t\t// nothing in common with null set\r\n\t\t\treturn IntervalSet.EMPTY_SET;\r\n\t\t}\r\n\r\n\t\tlet vocabularyIS: IntervalSet;\r\n\t\tif (vocabulary instanceof IntervalSet) {\r\n\t\t\tvocabularyIS = vocabulary;\r\n\t\t} else {\r\n\t\t\tvocabularyIS = new IntervalSet();\r\n\t\t\tvocabularyIS.addAll(vocabulary);\r\n\t\t}\r\n\r\n\t\treturn vocabularyIS.subtract(this);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic subtract(a: IntSet): IntervalSet {\r\n\t\tif (a == null || a.isNil) {\r\n\t\t\treturn new IntervalSet(this._intervals);\r\n\t\t}\r\n\r\n\t\tif (a instanceof IntervalSet) {\r\n\t\t\treturn IntervalSet.subtract(this, a);\r\n\t\t}\r\n\r\n\t\tlet other: IntervalSet = new IntervalSet();\r\n\t\tother.addAll(a);\r\n\t\treturn IntervalSet.subtract(this, other);\r\n\t}\r\n\r\n\t/**\r\n\t * Compute the set difference between two interval sets. The specific\r\n\t * operation is `left - right`.\r\n\t */\r\n\t@NotNull\r\n\tpublic static subtract(left: IntervalSet, right: IntervalSet): IntervalSet {\r\n\t\tif (left.isNil) {\r\n\t\t\treturn new IntervalSet();\r\n\t\t}\r\n\r\n\t\tlet result: IntervalSet = new IntervalSet(left._intervals);\r\n\t\tif (right.isNil) {\r\n\t\t\t// right set has no elements; just return the copy of the current set\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tlet resultI: number = 0;\r\n\t\tlet rightI: number = 0;\r\n\t\twhile (resultI < result._intervals.length && rightI < right._intervals.length) {\r\n\t\t\tlet resultInterval: Interval = result._intervals[resultI];\r\n\t\t\tlet rightInterval: Interval = right._intervals[rightI];\r\n\r\n\t\t\t// operation: (resultInterval - rightInterval) and update indexes\r\n\r\n\t\t\tif (rightInterval.b < resultInterval.a) {\r\n\t\t\t\trightI++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (rightInterval.a > resultInterval.b) {\r\n\t\t\t\tresultI++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet beforeCurrent: Interval | undefined;\r\n\t\t\tlet afterCurrent: Interval | undefined;\r\n\t\t\tif (rightInterval.a > resultInterval.a) {\r\n\t\t\t\tbeforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (rightInterval.b < resultInterval.b) {\r\n\t\t\t\tafterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);\r\n\t\t\t}\r\n\r\n\t\t\tif (beforeCurrent) {\r\n\t\t\t\tif (afterCurrent) {\r\n\t\t\t\t\t// split the current interval into two\r\n\t\t\t\t\tresult._intervals[resultI] = beforeCurrent;\r\n\t\t\t\t\tresult._intervals.splice(resultI + 1, 0, afterCurrent);\r\n\t\t\t\t\tresultI++;\r\n\t\t\t\t\trightI++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// replace the current interval\r\n\t\t\t\t\tresult._intervals[resultI] = beforeCurrent;\r\n\t\t\t\t\tresultI++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (afterCurrent) {\r\n\t\t\t\t\t// replace the current interval\r\n\t\t\t\t\tresult._intervals[resultI] = afterCurrent;\r\n\t\t\t\t\trightI++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// remove the current interval (thus no need to increment resultI)\r\n\t\t\t\t\tresult._intervals.splice(resultI, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If rightI reached right.intervals.size, no more intervals to subtract from result.\r\n\t\t// If resultI reached result.intervals.size, we would be subtracting from an empty set.\r\n\t\t// Either way, we are done.\r\n\t\treturn result;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic or(a: IntSet): IntervalSet {\r\n\t\tlet o: IntervalSet = new IntervalSet();\r\n\t\to.addAll(this);\r\n\t\to.addAll(a);\r\n\t\treturn o;\r\n\t}\r\n\r\n\t/** {@inheritDoc} */\r\n\t@Override\r\n\tpublic and(other: IntSet): IntervalSet {\r\n\t\tif (other.isNil) { //|| !(other instanceof IntervalSet) ) {\r\n\t\t\t// nothing in common with null set\r\n\t\t\treturn new IntervalSet();\r\n\t\t}\r\n\r\n\t\tlet myIntervals: Interval[] = this._intervals;\r\n\t\tlet theirIntervals: Interval[] = (other as IntervalSet)._intervals;\r\n\t\tlet intersection: IntervalSet | undefined;\r\n\t\tlet mySize: number = myIntervals.length;\r\n\t\tlet theirSize: number = theirIntervals.length;\r\n\t\tlet i: number = 0;\r\n\t\tlet j: number = 0;\r\n\t\t// iterate down both interval lists looking for nondisjoint intervals\r\n\t\twhile (i < mySize && j < theirSize) {\r\n\t\t\tlet mine: Interval = myIntervals[i];\r\n\t\t\tlet theirs: Interval = theirIntervals[j];\r\n\t\t\t//System.out.println(\"mine=\"+mine+\" and theirs=\"+theirs);\r\n\t\t\tif (mine.startsBeforeDisjoint(theirs)) {\r\n\t\t\t\t// move this iterator looking for interval that might overlap\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if (theirs.startsBeforeDisjoint(mine)) {\r\n\t\t\t\t// move other iterator looking for interval that might overlap\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\telse if (mine.properlyContains(theirs)) {\r\n\t\t\t\t// overlap, add intersection, get next theirs\r\n\t\t\t\tif (!intersection) {\r\n\t\t\t\t\tintersection = new IntervalSet();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection.addRange(mine.intersection(theirs));\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\telse if (theirs.properlyContains(mine)) {\r\n\t\t\t\t// overlap, add intersection, get next mine\r\n\t\t\t\tif (!intersection) {\r\n\t\t\t\t\tintersection = new IntervalSet();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection.addRange(mine.intersection(theirs));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if (!mine.disjoint(theirs)) {\r\n\t\t\t\t// overlap, add intersection\r\n\t\t\t\tif (!intersection) {\r\n\t\t\t\t\tintersection = new IntervalSet();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection.addRange(mine.intersection(theirs));\r\n\t\t\t\t// Move the iterator of lower range [a..b], but not\r\n\t\t\t\t// the upper range as it may contain elements that will collide\r\n\t\t\t\t// with the next iterator. So, if mine=[0..115] and\r\n\t\t\t\t// theirs=[115..200], then intersection is 115 and move mine\r\n\t\t\t\t// but not theirs as theirs may collide with the next range\r\n\t\t\t\t// in thisIter.\r\n\t\t\t\t// move both iterators to next ranges\r\n\t\t\t\tif (mine.startsAfterNonDisjoint(theirs)) {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\telse if (theirs.startsAfterNonDisjoint(mine)) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!intersection) {\r\n\t\t\treturn new IntervalSet();\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\t}\r\n\r\n\t/** {@inheritDoc} */\r\n\t@Override\r\n\tpublic contains(el: number): boolean {\r\n\t\tlet n: number = this._intervals.length;\r\n\t\tlet l: number = 0;\r\n\t\tlet r: number = n - 1;\r\n\t\t// Binary search for the element in the (sorted, disjoint) array of intervals.\r\n\t\twhile (l <= r) {\r\n\t\t\tlet m: number = (l + r) >> 1;\r\n\t\t\tlet I: Interval = this._intervals[m];\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tif (b < el) {\r\n\t\t\t\tl = m + 1;\r\n\t\t\t} else if (a > el) {\r\n\t\t\t\tr = m - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// el >= a && el <= b\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/** {@inheritDoc} */\r\n\t@Override\r\n\tget isNil(): boolean {\r\n\t\treturn this._intervals == null || this._intervals.length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the maximum value contained in the set if not isNil.\r\n\t *\r\n\t * @return the maximum value contained in the set.\r\n\t * @throws RangeError if set is empty\r\n\t */\r\n\tget maxElement(): number {\r\n\t\tif (this.isNil) {\r\n\t\t\tthrow new RangeError(\"set is empty\");\r\n\t\t}\r\n\r\n\t\tlet last: Interval = this._intervals[this._intervals.length - 1];\r\n\t\treturn last.b;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the minimum value contained in the set if not isNil.\r\n\t *\r\n\t * @return the minimum value contained in the set.\r\n\t * @throws RangeError if set is empty\r\n\t */\r\n\tget minElement(): number {\r\n\t\tif (this.isNil) {\r\n\t\t\tthrow new RangeError(\"set is empty\");\r\n\t\t}\r\n\r\n\t\treturn this._intervals[0].a;\r\n\t}\r\n\r\n\t/** Return a list of Interval objects. */\r\n\tget intervals(): Interval[] {\r\n\t\treturn this._intervals;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic hashCode(): number {\r\n\t\tlet hash: number = MurmurHash.initialize();\r\n\t\tfor (let I of this._intervals) {\r\n\t\t\thash = MurmurHash.update(hash, I.a);\r\n\t\t\thash = MurmurHash.update(hash, I.b);\r\n\t\t}\r\n\r\n\t\thash = MurmurHash.finish(hash, this._intervals.length * 2);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/** Are two IntervalSets equal?  Because all intervals are sorted\r\n\t *  and disjoint, equals is a simple linear walk over both lists\r\n\t *  to make sure they are the same.  Interval.equals() is used\r\n\t *  by the List.equals() method to check the ranges.\r\n\t */\r\n\t@Override\r\n\tpublic equals(o: any): boolean {\r\n\t\tif (o == null || !(o instanceof IntervalSet)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn ArrayEqualityComparator.INSTANCE.equals(this._intervals, o._intervals);\r\n\t}\r\n\r\n\tpublic toString(elemAreChar: boolean = false): string {\r\n\t\tlet buf: string = \"\";\r\n\t\tif (this._intervals == null || this._intervals.length === 0) {\r\n\t\t\treturn \"{}\";\r\n\t\t}\r\n\r\n\t\tif (this.size > 1) {\r\n\t\t\tbuf += \"{\";\r\n\t\t}\r\n\r\n\t\tlet first: boolean = true;\r\n\t\tfor (let I of this._intervals) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t} else {\r\n\t\t\t\tbuf += \", \";\r\n\t\t\t}\r\n\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tif (a === b) {\r\n\t\t\t\tif (a === Token.EOF) {\r\n\t\t\t\t\tbuf += \"<EOF>\";\r\n\t\t\t\t} else if (elemAreChar) {\r\n\t\t\t\t\tbuf += \"'\" + String.fromCodePoint(a) + \"'\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += a;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (elemAreChar) {\r\n\t\t\t\t\tbuf += \"'\" + String.fromCodePoint(a) + \"'..'\" + String.fromCodePoint(b) + \"'\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += a + \"..\" + b;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.size > 1) {\r\n\t\t\tbuf += \"}\";\r\n\t\t}\r\n\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tpublic toStringVocabulary( @NotNull vocabulary: Vocabulary): string {\r\n\t\tif (this._intervals == null || this._intervals.length === 0) {\r\n\t\t\treturn \"{}\";\r\n\t\t}\r\n\r\n\t\tlet buf: string = \"\";\r\n\t\tif (this.size > 1) {\r\n\t\t\tbuf += \"{\";\r\n\t\t}\r\n\r\n\t\tlet first: boolean = true;\r\n\t\tfor (let I of this._intervals) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst = false;\r\n\t\t\t} else {\r\n\t\t\t\tbuf += \", \";\r\n\t\t\t}\r\n\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tif (a === b) {\r\n\t\t\t\tbuf += this.elementName(vocabulary, a);\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = a; i <= b; i++) {\r\n\t\t\t\t\tif (i > a) {\r\n\t\t\t\t\t\tbuf += \", \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuf += this.elementName(vocabulary, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.size > 1) {\r\n\t\t\tbuf += \"}\";\r\n\t\t}\r\n\r\n\t\treturn buf;\r\n\t}\r\n\r\n\t@NotNull\r\n\tprotected elementName( @NotNull vocabulary: Vocabulary, a: number): string {\r\n\t\tif (a === Token.EOF) {\r\n\t\t\treturn \"<EOF>\";\r\n\t\t} else if (a === Token.EPSILON) {\r\n\t\t\treturn \"<EPSILON>\";\r\n\t\t} else {\r\n\t\t\treturn vocabulary.getDisplayName(a);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tget size(): number {\r\n\t\tlet n: number = 0;\r\n\t\tlet numIntervals: number = this._intervals.length;\r\n\t\tif (numIntervals === 1) {\r\n\t\t\tlet firstInterval: Interval = this._intervals[0];\r\n\t\t\treturn firstInterval.b - firstInterval.a + 1;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < numIntervals; i++) {\r\n\t\t\tlet I: Interval = this._intervals[i];\r\n\t\t\tn += (I.b - I.a + 1);\r\n\t\t}\r\n\r\n\t\treturn n;\r\n\t}\r\n\r\n\tpublic toIntegerList(): IntegerList {\r\n\t\tlet values: IntegerList = new IntegerList(this.size);\r\n\t\tlet n: number = this._intervals.length;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet I: Interval = this._intervals[i];\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tfor (let v = a; v <= b; v++) {\r\n\t\t\t\tvalues.add(v);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn values;\r\n\t}\r\n\r\n\tpublic toSet(): Set<number> {\r\n\t\tlet s: Set<number> = new Set<number>();\r\n\t\tfor (let I of this._intervals) {\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tfor (let v = a; v <= b; v++) {\r\n\t\t\t\ts.add(v);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn s;\r\n\t}\r\n\r\n\tpublic toArray(): number[] {\r\n\t\tlet values: number[] = new Array<number>();\r\n\t\tlet n: number = this._intervals.length;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet I: Interval = this._intervals[i];\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tfor (let v = a; v <= b; v++) {\r\n\t\t\t\tvalues.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn values;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic remove(el: number): void {\r\n\t\tif (this.readonly) {\r\n\t\t\tthrow new Error(\"can't alter readonly IntervalSet\");\r\n\t\t}\r\n\r\n\t\tlet n: number = this._intervals.length;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet I: Interval = this._intervals[i];\r\n\t\t\tlet a: number = I.a;\r\n\t\t\tlet b: number = I.b;\r\n\t\t\tif (el < a) {\r\n\t\t\t\tbreak; // list is sorted and el is before this interval; not here\r\n\t\t\t}\r\n\t\t\t// if whole interval x..x, rm\r\n\t\t\tif (el === a && el === b) {\r\n\t\t\t\tthis._intervals.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// if on left edge x..b, adjust left\r\n\t\t\tif (el === a) {\r\n\t\t\t\tthis._intervals[i] = Interval.of(I.a + 1, I.b);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// if on right edge a..x, adjust right\r\n\t\t\tif (el === b) {\r\n\t\t\t\tthis._intervals[i] = Interval.of(I.a, I.b - 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// if in middle a..x..b, split interval\r\n\t\t\tif (el > a && el < b) { // found in this interval\r\n\t\t\t\tlet oldb: number = I.b;\r\n\t\t\t\tthis._intervals[i] = Interval.of(I.a, el - 1); // [a..x-1]\r\n\t\t\t\tthis.add(el + 1, oldb); // add [x+1..b]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget isReadonly(): boolean {\r\n\t\treturn this.readonly;\r\n\t}\r\n\r\n\tpublic setReadonly(readonly: boolean): void {\r\n\t\tif (this.readonly && !readonly) {\r\n\t\t\tthrow new Error(\"can't alter readonly IntervalSet\");\r\n\t\t}\r\n\r\n\t\tthis.readonly = readonly;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:42.1346951-07:00\r\n\r\nexport class MultiMap<K, V> extends Map<K, V[]> {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic map(key: K, value: V): void {\r\n\t\tlet elementsForKey = super.get(key);\r\n\t\tif (!elementsForKey) {\r\n\t\t\telementsForKey = [] as V[];\r\n\t\t\tsuper.set(key, elementsForKey);\r\n\t\t}\r\n\t\telementsForKey.push(value);\r\n\t}\r\n\r\n\tpublic getPairs(): Array<[K, V]> {\r\n\t\tlet pairs: Array<[K, V]> = [];\r\n\t\tthis.forEach((values: V[], key: K) => {\r\n\t\t\tvalues.forEach((v) => {\r\n\t\t\t\tpairs.push([key, v]);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn pairs;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-03T02:09:42.1239660-07:00\r\nimport { Equatable } from \"./Stubs\";\r\n\r\n/**\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport namespace MurmurHash {\r\n\r\n\tconst DEFAULT_SEED: number = 0;\r\n\r\n\t/**\r\n\t * Initialize the hash using the specified `seed`.\r\n\t *\r\n\t * @param seed the seed (optional)\r\n\t * @returns the intermediate hash value\r\n\t */\r\n\texport function initialize(seed: number = DEFAULT_SEED): number {\r\n\t\treturn seed;\r\n\t}\r\n\r\n\t/**\r\n\t * Update the intermediate hash value for the next input `value`.\r\n\t *\r\n\t * @param hash the intermediate hash value\r\n\t * @param value the value to add to the current hash\r\n\t * @returns the updated intermediate hash value\r\n\t */\r\n\texport function update(hash: number, value: number | string | Equatable | null | undefined): number {\r\n\t\tconst c1: number = 0xCC9E2D51;\r\n\t\tconst c2: number = 0x1B873593;\r\n\t\tconst r1: number = 15;\r\n\t\tconst r2: number = 13;\r\n\t\tconst m: number = 5;\r\n\t\tconst n: number = 0xE6546B64;\r\n\r\n\t\tif (value == null) {\r\n\t\t\tvalue = 0;\r\n\t\t} else if (typeof value === \"string\") {\r\n\t\t\tvalue = hashString(value);\r\n\t\t} else if (typeof value === \"object\") {\r\n\t\t\tvalue = value.hashCode();\r\n\t\t}\r\n\r\n\t\tlet k: number = value;\r\n\t\tk = Math.imul(k, c1);\r\n\t\tk = (k << r1) | (k >>> (32 - r1));\r\n\t\tk = Math.imul(k, c2);\r\n\r\n\t\thash = hash ^ k;\r\n\t\thash = (hash << r2) | (hash >>> (32 - r2));\r\n\t\thash = Math.imul(hash, m) + n;\r\n\r\n\t\treturn hash & 0xFFFFFFFF;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Apply the final computation steps to the intermediate value `hash`\r\n\t * to form the final result of the MurmurHash 3 hash function.\r\n\t *\r\n\t * @param hash the intermediate hash value\r\n\t * @param numberOfWords the number of integer values added to the hash\r\n\t * @returns the final hash result\r\n\t */\r\n\texport function finish(hash: number, numberOfWords: number): number {\r\n\t\thash = hash ^ (numberOfWords * 4);\r\n\t\thash = hash ^ (hash >>> 16);\r\n\t\thash = Math.imul(hash, 0x85EBCA6B);\r\n\t\thash = hash ^ (hash >>> 13);\r\n\t\thash = Math.imul(hash, 0xC2B2AE35);\r\n\t\thash = hash ^ (hash >>> 16);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to compute the hash code of an array using the\r\n\t * MurmurHash algorithm.\r\n\t *\r\n\t * @param <T> the array element type\r\n\t * @param data the array data\r\n\t * @param seed the seed for the MurmurHash algorithm\r\n\t * @returns the hash code of the data\r\n\t */\r\n\texport function hashCode<T extends number | string | Equatable>(data: Iterable<T>, seed: number = DEFAULT_SEED): number {\r\n\t\tlet hash: number = initialize(seed);\r\n\t\tlet length = 0;\r\n\t\tfor (let value of data) {\r\n\t\t\thash = update(hash, value);\r\n\t\t\tlength++;\r\n\t\t}\r\n\r\n\t\thash = finish(hash, length);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * Function to hash a string. Based on the implementation found here:\r\n\t * http://stackoverflow.com/a/7616484\r\n\t */\r\n\tfunction hashString(str: string): number {\r\n\t\tlet len = str.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet hash = 0;\r\n\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\tlet c = str.charCodeAt(i);\r\n\t\t\thash = (((hash << 5) >>> 0) - hash) + c;\r\n\t\t\thash |= 0;\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-03T02:09:42.2127260-07:00\r\nimport { EqualityComparator } from \"./EqualityComparator\";\r\nimport { Override } from \"../Decorators\";\r\nimport { Equatable } from \"./Stubs\";\r\n\r\n/**\r\n * This default implementation of {@link EqualityComparator} uses object equality\r\n * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ObjectEqualityComparator implements EqualityComparator<Equatable | null | undefined> {\r\n\tpublic static readonly INSTANCE: ObjectEqualityComparator = new ObjectEqualityComparator();\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation returns\r\n\t * `obj.`{@link Object#hashCode hashCode()}.\r\n\t */\r\n\t@Override\r\n\tpublic hashCode(obj: Equatable | null | undefined): number {\r\n\t\tif (obj == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn obj.hashCode();\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This implementation relies on object equality. If both objects are\r\n\t * `undefined` or `null`, this method returns `true`. Otherwise if only\r\n\t * `a` is `undefined` or `null`, this method returns `false`. Otherwise,\r\n\t * this method returns the result of\r\n\t * `a.`{@link Object#equals equals}`(b)`.\r\n\t */\r\n\t@Override\r\n\tpublic equals(a: Equatable | null | undefined, b: Equatable | null | undefined): boolean {\r\n\t\tif (a == null) {\r\n\t\t\treturn b == null;\r\n\t\t}\r\n\r\n\t\treturn a.equals(b);\r\n\t}\r\n\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:42.5447085-07:00\r\n\r\n/**\r\n * This exception is thrown to cancel a parsing operation. This exception does\r\n * not extend {@link RecognitionException}, allowing it to bypass the standard\r\n * error recovery mechanisms. {@link BailErrorStrategy} throws this exception in\r\n * response to a parse error.\r\n *\r\n * @author Sam Harwell\r\n */\r\nexport class ParseCancellationException extends Error {\r\n\t// private static serialVersionUID: number =  -3529552099366979683L;\r\n\tpublic readonly stack?: string;\r\n\r\n\tconstructor(public cause: Error) {\r\n\t\tsuper(cause.message);\r\n\t\tthis.stack = cause.stack;\r\n\t}\r\n\r\n\tpublic getCause(): Error {\r\n\t\treturn this.cause;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\nimport { Equatable } from \"./Stubs\";\r\nimport { MurmurHash } from \"./MurmurHash\";\r\n\r\nexport class UUID implements Equatable {\r\n\tprivate readonly data: Uint32Array;\r\n\r\n\tconstructor(mostSigBits: number, moreSigBits: number, lessSigBits: number, leastSigBits: number) {\r\n\t\tthis.data = new Uint32Array(4);\r\n\t\tthis.data[0] = mostSigBits;\r\n\t\tthis.data[1] = moreSigBits;\r\n\t\tthis.data[2] = lessSigBits;\r\n\t\tthis.data[3] = leastSigBits;\r\n\t}\r\n\r\n\tpublic static fromString(data: string): UUID {\r\n\t\tif (!/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/.test(data)) {\r\n\t\t\tthrow new Error(\"Incorrectly formatted UUID\");\r\n\t\t}\r\n\r\n\t\tlet segments = data.split(\"-\");\r\n\t\tlet mostSigBits = parseInt(segments[0], 16);\r\n\t\tlet moreSigBits = ((parseInt(segments[1], 16) << 16) >>> 0) + parseInt(segments[2], 16);\r\n\t\tlet lessSigBits = ((parseInt(segments[3], 16) << 16) >>> 0) + parseInt(segments[4].substr(0, 4), 16);\r\n\t\tlet leastSigBits = parseInt(segments[4].substr(-8), 16);\r\n\t\treturn new UUID(mostSigBits, moreSigBits, lessSigBits, leastSigBits);\r\n\t}\r\n\r\n\tpublic hashCode(): number {\r\n\t\treturn MurmurHash.hashCode([this.data[0], this.data[1], this.data[2], this.data[3]]);\r\n\t}\r\n\r\n\tpublic equals(obj: any): boolean {\r\n\t\tif (obj === this) {\r\n\t\t\treturn true;\r\n\t\t} else if (!(obj instanceof UUID)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.data[0] === obj.data[0]\r\n\t\t\t&& this.data[1] === obj.data[1]\r\n\t\t\t&& this.data[2] === obj.data[2]\r\n\t\t\t&& this.data[3] === obj.data[3];\r\n\t}\r\n\r\n\tpublic toString(): string {\r\n\t\treturn (\"00000000\" + this.data[0].toString(16)).substr(-8)\r\n\t\t\t+ \"-\" + (\"0000\" + (this.data[1] >>> 16).toString(16)).substr(-4)\r\n\t\t\t+ \"-\" + (\"0000\" + this.data[1].toString(16)).substr(-4)\r\n\t\t\t+ \"-\" + (\"0000\" + (this.data[2] >>> 16).toString(16)).substr(-4)\r\n\t\t\t+ \"-\" + (\"0000\" + this.data[2].toString(16)).substr(-4)\r\n\t\t\t+ (\"00000000\" + this.data[3].toString(16)).substr(-8);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:45.0833752-07:00\r\n\r\n// Taking a case-by-case approach to pporting this functionaltiy\r\n// as much of it may be supported natively by JavaScript. Or otherwise need\r\n// substantial rethink\r\n\r\nimport { NotNull } from \"../Decorators\";\r\nimport { Equatable } from \"./Stubs\";\r\nimport { IntegerList } from \"./IntegerList\";\r\n\r\nexport function escapeWhitespace(s: string, escapeSpaces: boolean): string {\r\n\treturn escapeSpaces ? s.replace(/ /, \"\\u00B7\") : s\r\n\t\t.replace(/\\t/, \"\\\\t\")\r\n\t\t.replace(/\\n/, \"\\\\n\")\r\n\t\t.replace(/\\r/, \"\\\\r\");\r\n}\r\n\r\n// Seriously: why isn't this built in to java? ugh!\r\nexport function join(collection: Iterable<any>, separator: string): string {\r\n\tlet buf = \"\";\r\n\tlet first = true;\r\n\tfor (let current of collection) {\r\n\t\tif (first) {\r\n\t\t\tfirst = false;\r\n\t\t} else {\r\n\t\t\tbuf += separator;\r\n\t\t}\r\n\r\n\t\tbuf += current;\r\n\t}\r\n\r\n\treturn buf;\r\n}\r\n\r\nexport function equals(x: Equatable | undefined, y: Equatable | undefined): boolean {\r\n\tif (x === y) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (x === undefined || y === undefined) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn x.equals(y);\r\n}\r\n\r\n// export function numNonnull(data: any[]): number {\r\n// \tlet n: number =  0;\r\n// \tif ( data == null ) return n;\r\n// \tfor (let o of data) {\r\n// \t\tif ( o!=null ) n++;\r\n// \t}\r\n// \treturn n;\r\n// }\r\n\r\n// export function removeAllElements<T>(data: Collection<T>, value: T): void {\r\n// \tif ( data==null ) return;\r\n// \twhile ( data.contains(value) ) data.remove(value);\r\n// }\r\n\r\n// export function writeFile(@NotNull file: File, @NotNull content: Uint8Array): void {\r\n// \tlet fos: FileOutputStream = new FileOutputStream(file);\r\n// \ttry {\r\n// \t\tfos.write(content);\r\n// \t} finally {\r\n// \t\tfos.close();\r\n// \t}\r\n// }\r\n\r\n// export function writeFile(@NotNull fileName: string, @NotNull content: string): void {\r\n// \twriteFile(fileName, content, null);\r\n// }\r\n\r\n// export function writeFile(@NotNull fileName: string, @NotNull content: string, @Nullable encoding: string): void {\r\n// \tlet f: File =  new File(fileName);\r\n// \tlet fos: FileOutputStream =  new FileOutputStream(f);\r\n// \tlet osw: OutputStreamWriter;\r\n// \tif (encoding != null) {\r\n// \t\tosw = new OutputStreamWriter(fos, encoding);\r\n// \t}\r\n// \telse {\r\n// \t\tosw = new OutputStreamWriter(fos);\r\n// \t}\r\n\r\n// \ttry {\r\n// \t\tosw.write(content);\r\n// \t}\r\n// \tfinally {\r\n// \t\tosw.close();\r\n// \t}\r\n// }\r\n\r\n// @NotNull\r\n// export function readFile(@NotNull fileName: string): char[] {\r\n// \treturn readFile(fileName, null);\r\n// }\r\n\r\n// @NotNull\r\n// export function readFile(@NotNull fileName: string, @Nullable encoding: string): char[] {\r\n// \tlet f: File =  new File(fileName);\r\n// \tlet size: number =  (int)f.length();\r\n// \tlet isr: InputStreamReader;\r\n// \tlet fis: FileInputStream =  new FileInputStream(fileName);\r\n// \tif ( encoding!=null ) {\r\n// \t\tisr = new InputStreamReader(fis, encoding);\r\n// \t}\r\n// \telse {\r\n// \t\tisr = new InputStreamReader(fis);\r\n// \t}\r\n// \tlet data: char[] =  null;\r\n// \ttry {\r\n// \t\tdata = new char[size];\r\n// \t\tlet n: number =  isr.read(data);\r\n// \t\tif (n < data.length) {\r\n// \t\t\tdata = Arrays.copyOf(data, n);\r\n// \t\t}\r\n// \t}\r\n// \tfinally {\r\n// \t\tisr.close();\r\n// \t}\r\n// \treturn data;\r\n// }\r\n\r\n// export function removeAll<T>(@NotNull predicate: List<T> list,@NotNull Predicate<? super T>): void {\r\n// \tlet j: number =  0;\r\n// \tfor (let i = 0; i < list.size; i++) {\r\n// \t\tlet item: T =  list.get(i);\r\n// \t\tif (!predicate.eval(item)) {\r\n// \t\t\tif (j != i) {\r\n// \t\t\t\tlist.set(j, item);\r\n// \t\t\t}\r\n\r\n// \t\t\tj++;\r\n// \t\t}\r\n// \t}\r\n\r\n// \tif (j < list.size) {\r\n// \t\tlist.subList(j, list.size).clear();\r\n// \t}\r\n// }\r\n\r\n// export function removeAll<T>(@NotNull predicate: Iterable<T> iterable,@NotNull Predicate<? super T>): void {\r\n// \tif (iterable instanceof List<?>) {\r\n// \t\tremoveAll((List<T>)iterable, predicate);\r\n// \t\treturn;\r\n// \t}\r\n\r\n// \tfor (Iterator<T> iterator = iterable.iterator(); iterator.hasNext(); ) {\r\n// \t\tlet item: T =  iterator.next();\r\n// \t\tif (predicate.eval(item)) {\r\n// \t\t\titerator.remove();\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n/** Convert array of strings to string&rarr;index map. Useful for\r\n *  converting rulenames to name&rarr;ruleindex map.\r\n */\r\nexport function toMap(keys: string[]): Map<string, number> {\r\n\tlet m: Map<string, number> = new Map<string, number>();\r\n\tfor (let i = 0; i < keys.length; i++) {\r\n\t\tm.set(keys[i], i);\r\n\t}\r\n\r\n\treturn m;\r\n}\r\n\r\nexport function toCharArray(str: string): Uint16Array;\r\nexport function toCharArray(data: IntegerList): Uint16Array;\r\nexport function toCharArray(str: string | IntegerList): Uint16Array {\r\n\tif (typeof str === \"string\") {\r\n\t\tlet result = new Uint16Array(str.length);\r\n\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\tresult[i] = str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t} else {\r\n\t\treturn str.toCharArray();\r\n\t}\r\n}\r\n\r\n// /**\r\n// \t* @since 4.5\r\n// \t*/\r\n// @NotNull\r\n// export function toSet(@NotNull bits: BitSet): IntervalSet {\r\n// \tlet s: IntervalSet =  new IntervalSet();\r\n// \tlet i: number =  bits.nextSetBit(0);\r\n// \twhile ( i >= 0 ) {\r\n// \t\ts.add(i);\r\n// \t\ti = bits.nextSetBit(i+1);\r\n// \t}\r\n// \treturn s;\r\n// }\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:47.4646355-07:00\r\n\r\nimport { Override } from \"../Decorators\";\r\nimport { ParseTreeVisitor } from \"./ParseTreeVisitor\";\r\nimport { TerminalNode } from \"./TerminalNode\";\r\nimport { Token } from \"../Token\";\r\n\r\n/** Represents a token that was consumed during resynchronization\r\n *  rather than during a valid match operation. For example,\r\n *  we will create this kind of a node during single token insertion\r\n *  and deletion as well as during \"consume until error recovery set\"\r\n *  upon no viable alternative exceptions.\r\n */\r\nexport class ErrorNode extends TerminalNode {\r\n\tconstructor(token: Token) {\r\n\t\tsuper(token);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic accept<T>(visitor: ParseTreeVisitor<T>): T {\r\n\t\treturn visitor.visitErrorNode(this);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:47.9232756-07:00\r\n\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { ParseTree } from \"./ParseTree\";\r\nimport { ParseTreeVisitor } from \"./ParseTreeVisitor\";\r\nimport { Parser } from \"../Parser\";\r\nimport { Interval } from \"../misc/Interval\";\r\n\r\nexport abstract class RuleNode implements ParseTree {\r\n\tpublic abstract readonly ruleContext: RuleContext;\r\n\r\n\t//@Override\r\n\tpublic abstract readonly parent: RuleNode | undefined;\r\n\r\n\tpublic abstract setParent(parent: RuleContext): void;\r\n\r\n\tpublic abstract getChild(i: number): ParseTree;\r\n\r\n\tpublic abstract accept<T>(visitor: ParseTreeVisitor<T>): T;\r\n\r\n\tpublic abstract readonly text: string;\r\n\r\n\tpublic abstract toStringTree(parser?: Parser | undefined): string;\r\n\r\n\tpublic abstract readonly sourceInterval: Interval;\r\n\r\n\tpublic abstract readonly payload: any;\r\n\r\n\tpublic abstract readonly childCount: number;\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:48.1433686-07:00\r\n\r\nimport { Interval } from \"../misc/Interval\";\r\nimport { Override } from \"../Decorators\";\r\nimport { Parser } from \"../Parser\";\r\nimport { ParseTree } from \"./ParseTree\";\r\nimport { ParseTreeVisitor } from \"./ParseTreeVisitor\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { RuleNode } from \"./RuleNode\";\r\nimport { Token } from \"../Token\";\r\n\r\nexport class TerminalNode implements ParseTree {\r\n\tpublic _symbol: Token;\r\n\tpublic _parent: RuleNode | undefined;\r\n\r\n\tconstructor(symbol: Token) {\r\n\t\tthis._symbol = symbol;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic getChild(i: number): never {\r\n\t\tthrow new RangeError(\"Terminal Node has no children.\");\r\n\t}\r\n\r\n\tget symbol(): Token {\r\n\t\treturn this._symbol;\r\n\t}\r\n\r\n\t@Override\r\n\tget parent(): RuleNode | undefined {\r\n\t\treturn this._parent;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic setParent(parent: RuleContext): void {\r\n\t\tthis._parent = parent;\r\n\t}\r\n\r\n\t@Override\r\n\tget payload(): Token {\r\n\t\treturn this._symbol;\r\n\t}\r\n\r\n\t@Override\r\n\tget sourceInterval(): Interval {\r\n\t\tlet tokenIndex: number = this._symbol.tokenIndex;\r\n\t\treturn new Interval(tokenIndex, tokenIndex);\r\n\t}\r\n\r\n\t@Override\r\n\tget childCount(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic accept<T>(visitor: ParseTreeVisitor<T>): T {\r\n\t\treturn visitor.visitTerminal(this);\r\n\t}\r\n\r\n\t@Override\r\n\tget text(): string {\r\n\t\treturn this._symbol.text || \"\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toStringTree(parser?: Parser): string {\r\n\t\treturn this.toString();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tif (this._symbol.type === Token.EOF) {\r\n\t\t\treturn \"<EOF>\";\r\n\t\t}\r\n\r\n\t\treturn this._symbol.text || \"\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:48.3187865-07:00\r\n\r\nimport { Arrays } from \"../misc/Arrays\";\r\nimport { ATN } from \"../atn/ATN\";\r\nimport { CommonToken } from \"../CommonToken\";\r\nimport { ErrorNode } from \"./ErrorNode\";\r\nimport { Interval } from \"../misc/Interval\";\r\nimport { NotNull } from \"../Decorators\";\r\nimport { Parser } from \"../Parser\";\r\nimport { ParserRuleContext } from \"../ParserRuleContext\";\r\nimport { ParseTree } from \"./ParseTree\";\r\nimport { RuleContext } from \"../RuleContext\";\r\nimport { RuleNode } from \"./RuleNode\";\r\nimport { TerminalNode } from \"./TerminalNode\";\r\nimport { Token } from \"../Token\";\r\nimport { Tree } from \"./Tree\";\r\nimport * as Utils from \"../misc/Utils\";\r\n\r\n/** A set of utility routines useful for all kinds of ANTLR trees. */\r\nexport class Trees {\r\n\t/** Print out a whole tree in LISP form. {@link #getNodeText} is used on the\r\n\t *  node payloads to get the text for the nodes.  Detect\r\n\t *  parse trees and extract data appropriately.\r\n\t */\r\n\tpublic static toStringTree(/*@NotNull*/ t: Tree): string;\r\n\r\n\t/** Print out a whole tree in LISP form. {@link #getNodeText} is used on the\r\n\t *  node payloads to get the text for the nodes.  Detect\r\n\t *  parse trees and extract data appropriately.\r\n\t */\r\n\tpublic static toStringTree(/*@NotNull*/ t: Tree, recog: Parser | undefined): string;\r\n\r\n\t/** Print out a whole tree in LISP form. {@link #getNodeText} is used on the\r\n\t *  node payloads to get the text for the nodes.\r\n\t */\r\n\tpublic static toStringTree(/*@NotNull*/ t: Tree, /*@Nullable*/ ruleNames: string[] | undefined): string;\r\n\r\n\tpublic static toStringTree(/*@NotNull*/ t: Tree, arg2?: Parser | string[]): string;\r\n\tpublic static toStringTree(@NotNull t: Tree, arg2?: Parser | string[]): string {\r\n\t\tlet ruleNames: string[] | undefined;\r\n\t\tif (arg2 instanceof Parser) {\r\n\t\t\truleNames = arg2.ruleNames;\r\n\t\t} else {\r\n\t\t\truleNames = arg2;\r\n\t\t}\r\n\r\n\t\tlet s: string = Utils.escapeWhitespace(this.getNodeText(t, ruleNames), false);\r\n\t\tif (t.childCount === 0) {\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\tlet buf = \"\";\r\n\t\tbuf += (\"(\");\r\n\t\ts = Utils.escapeWhitespace(this.getNodeText(t, ruleNames), false);\r\n\t\tbuf += (s);\r\n\t\tbuf += (\" \");\r\n\t\tfor (let i = 0; i < t.childCount; i++) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tbuf += (\" \");\r\n\t\t\t}\r\n\t\t\tbuf += (this.toStringTree(t.getChild(i), ruleNames));\r\n\t\t}\r\n\t\tbuf += (\")\");\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tpublic static getNodeText(/*@NotNull*/ t: Tree, recog: Parser | undefined): string;\r\n\tpublic static getNodeText(/*@NotNull*/ t: Tree, ruleNames: string[] | undefined): string;\r\n\tpublic static getNodeText(t: Tree, arg2: Parser | string[] | undefined): string {\r\n\t\tlet ruleNames: string[] | undefined;\r\n\t\tif (arg2 instanceof Parser) {\r\n\t\t\truleNames = arg2.ruleNames;\r\n\t\t} else if (arg2) {\r\n\t\t\truleNames = arg2;\r\n\t\t} else {\r\n\t\t\t// no recog or rule names\r\n\t\t\tlet payload = t.payload;\r\n\t\t\tif (typeof payload.text === \"string\") {\r\n\t\t\t\treturn payload.text;\r\n\t\t\t}\r\n\t\t\treturn t.payload.toString();\r\n\t\t}\r\n\r\n\t\tif (t instanceof RuleNode) {\r\n\t\t\tlet ruleContext: RuleContext = t.ruleContext;\r\n\t\t\tlet ruleIndex: number = ruleContext.ruleIndex;\r\n\t\t\tlet ruleName: string = ruleNames[ruleIndex];\r\n\t\t\tlet altNumber: number = ruleContext.altNumber;\r\n\t\t\tif (altNumber !== ATN.INVALID_ALT_NUMBER) {\r\n\t\t\t\treturn ruleName + \":\" + altNumber;\r\n\t\t\t}\r\n\t\t\treturn ruleName;\r\n\t\t}\r\n\t\telse if (t instanceof ErrorNode) {\r\n\t\t\treturn t.toString();\r\n\t\t}\r\n\t\telse if (t instanceof TerminalNode) {\r\n\t\t\tlet symbol = t.symbol;\r\n\t\t\treturn symbol.text || \"\";\r\n\t\t}\r\n\t\tthrow new TypeError(\"Unexpected node type\");\r\n\t}\r\n\r\n\t/** Return ordered list of all children of this node */\r\n\tpublic static getChildren(t: ParseTree): ParseTree[];\r\n\tpublic static getChildren(t: Tree): Tree[];\r\n\tpublic static getChildren(t: Tree): Tree[] {\r\n\t\tlet kids: Tree[] = [];\r\n\t\tfor (let i = 0; i < t.childCount; i++) {\r\n\t\t\tkids.push(t.getChild(i));\r\n\t\t}\r\n\t\treturn kids;\r\n\t}\r\n\r\n\t/** Return a list of all ancestors of this node.  The first node of\r\n\t *  list is the root and the last is the parent of this node.\r\n\t *\r\n\t *  @since 4.5.1\r\n\t */\r\n\tpublic static getAncestors(t: ParseTree): ParseTree[];\r\n\tpublic static getAncestors(t: Tree): Tree[];\r\n\t@NotNull\r\n\tpublic static getAncestors(@NotNull t: Tree): Tree[] {\r\n\t\tlet ancestors: Tree[] = [];\r\n\t\tlet p = t.parent;\r\n\t\twhile (p) {\r\n\t\t\tancestors.unshift(p); // insert at start\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn ancestors;\r\n\t}\r\n\r\n\t/** Return true if t is u's parent or a node on path to root from u.\r\n\t *  Use === not equals().\r\n\t *\r\n\t *  @since 4.5.1\r\n\t */\r\n\tpublic static isAncestorOf(t: Tree, u: Tree): boolean {\r\n\t\tif (!t || !u || !t.parent) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet p = u.parent;\r\n\t\twhile (p) {\r\n\t\t\tif (t === p) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic static findAllTokenNodes(t: ParseTree, ttype: number): ParseTree[] {\r\n\t\treturn Trees.findAllNodes(t, ttype, true);\r\n\t}\r\n\r\n\tpublic static findAllRuleNodes(t: ParseTree, ruleIndex: number): ParseTree[] {\r\n\t\treturn Trees.findAllNodes(t, ruleIndex, false);\r\n\t}\r\n\r\n\tpublic static findAllNodes(t: ParseTree, index: number, findTokens: boolean): ParseTree[] {\r\n\t\tlet nodes: ParseTree[] = [];\r\n\t\tTrees._findAllNodes(t, index, findTokens, nodes);\r\n\t\treturn nodes;\r\n\t}\r\n\r\n\tpublic static _findAllNodes(t: ParseTree, index: number, findTokens: boolean, nodes: ParseTree[]): void {\r\n\t\t// check this node (the root) first\r\n\t\tif (findTokens && t instanceof TerminalNode) {\r\n\t\t\tif (t.symbol.type === index) {\r\n\t\t\t\tnodes.push(t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (!findTokens && t instanceof ParserRuleContext) {\r\n\t\t\tif (t.ruleIndex === index) {\r\n\t\t\t\tnodes.push(t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// check children\r\n\t\tfor (let i = 0; i < t.childCount; i++) {\r\n\t\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Get all descendents; includes t itself.\r\n\t *\r\n\t * @since 4.5.1\r\n\t */\r\n\tpublic static getDescendants(t: ParseTree): ParseTree[] {\r\n\t\tlet nodes: ParseTree[] = [];\r\n\r\n\t\tfunction recurse(e: ParseTree): void {\r\n\t\t\tnodes.push(e);\r\n\t\t\tconst n = e.childCount;\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\trecurse(e.getChild(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trecurse(t);\r\n\t\treturn nodes;\r\n\t}\r\n\r\n\t/** Find smallest subtree of t enclosing range startTokenIndex..stopTokenIndex\r\n\t *  inclusively using postorder traversal.  Recursive depth-first-search.\r\n\t *\r\n\t *  @since 4.5\r\n\t */\r\n\tpublic static getRootOfSubtreeEnclosingRegion(\r\n\t\t@NotNull t: ParseTree,\r\n\t\tstartTokenIndex: number, // inclusive\r\n\t\tstopTokenIndex: number, // inclusive\r\n\t): ParserRuleContext | undefined {\r\n\t\tlet n: number = t.childCount;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tlet child: ParseTree = t.getChild(i);\r\n\t\t\tlet r = Trees.getRootOfSubtreeEnclosingRegion(child, startTokenIndex, stopTokenIndex);\r\n\t\t\tif (r) {\r\n\t\t\t\treturn r;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (t instanceof ParserRuleContext) {\r\n\t\t\tlet stopToken = t.stop;\r\n\t\t\tif (startTokenIndex >= t.start.tokenIndex && // is range fully contained in t?\r\n\t\t\t\t(stopToken == null || stopTokenIndex <= stopToken.tokenIndex)) {\r\n\t\t\t\t// note: r.stop==null likely implies that we bailed out of parser and there's nothing to the right\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/** Replace any subtree siblings of root that are completely to left\r\n\t *  or right of lookahead range with a CommonToken(Token.INVALID_TYPE,\"...\")\r\n\t *  node. The source interval for t is not altered to suit smaller range!\r\n\t *\r\n\t *  WARNING: destructive to t.\r\n\t *\r\n\t *  @since 4.5.1\r\n\t */\r\n\tpublic static stripChildrenOutOfRange(\r\n\t\tt: ParserRuleContext,\r\n\t\troot: ParserRuleContext,\r\n\t\tstartIndex: number,\r\n\t\tstopIndex: number): void {\r\n\t\tif (!t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet count = t.childCount;\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\tlet child = t.getChild(i);\r\n\t\t\tlet range: Interval = child.sourceInterval;\r\n\t\t\tif (child instanceof ParserRuleContext && (range.b < startIndex || range.a > stopIndex)) {\r\n\t\t\t\tif (Trees.isAncestorOf(child, root)) { // replace only if subtree doesn't have displayed root\r\n\t\t\t\t\tlet abbrev: CommonToken = new CommonToken(Token.INVALID_TYPE, \"...\");\r\n\t\t\t\t\tt.children![i] = new TerminalNode(abbrev); // HACK access to private\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Return first node satisfying the pred\r\n\t *\r\n\t *  @since 4.5.1\r\n\t */\r\n\tpublic static findNodeSuchThat(t: ParseTree, pred: (tree: ParseTree) => boolean): ParseTree | undefined;\r\n\tpublic static findNodeSuchThat(t: Tree, pred: (tree: Tree) => boolean): Tree | undefined;\r\n\tpublic static findNodeSuchThat(t: Tree, pred: (tree: ParseTree) => boolean): Tree | undefined {\r\n\t\t// No type check needed as long as users only use one of the available overloads\r\n\t\tif (pred(t as ParseTree)) {\r\n\t\t\treturn t;\r\n\t\t}\r\n\r\n\t\tlet n: number =  t.childCount;\r\n\t\tfor (let i = 0 ; i < n ; i++){\r\n\t\t\tlet u = Trees.findNodeSuchThat(t.getChild(i), pred as (tree: Tree) => boolean);\r\n\t\t\tif (u !== undefined) {\r\n\t\t\t\treturn u;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:45.2799060-07:00\r\n\r\n/**\r\n * A chunk is either a token tag, a rule tag, or a span of literal text within a\r\n * tree pattern.\r\n *\r\n * The method {@link ParseTreePatternMatcher#split(String)} returns a list of\r\n * chunks in preparation for creating a token stream by\r\n * {@link ParseTreePatternMatcher#tokenize(String)}. From there, we get a parse\r\n * tree from with {@link ParseTreePatternMatcher#compile(String, int)}. These\r\n * chunks are converted to {@link RuleTagToken}, {@link TokenTagToken}, or the\r\n * regular tokens of the text surrounding the tags.\r\n */\r\nexport abstract class Chunk {\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { MultiMap } from \"../../misc/MultiMap\";\r\nimport { NotNull, Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { ParseTreePattern } from \"./ParseTreePattern\";\r\n\r\n/**\r\n * Represents the result of matching a {@link ParseTree} against a tree pattern.\r\n */\r\nexport class ParseTreeMatch {\r\n\t/**\r\n\t * This is the backing field for `tree`.\r\n\t */\r\n\tprivate _tree: ParseTree;\r\n\r\n\t/**\r\n\t * This is the backing field for `pattern`.\r\n\t */\r\n\tprivate _pattern: ParseTreePattern;\r\n\r\n\t/**\r\n\t * This is the backing field for `labels`.\r\n\t */\r\n\tprivate _labels: MultiMap<string, ParseTree>;\r\n\r\n\t/**\r\n\t * This is the backing field for `mismatchedNode`.\r\n\t */\r\n\tprivate _mismatchedNode?: ParseTree;\r\n\r\n\t/**\r\n\t * Constructs a new instance of {@link ParseTreeMatch} from the specified\r\n\t * parse tree and pattern.\r\n\t *\r\n\t * @param tree The parse tree to match against the pattern.\r\n\t * @param pattern The parse tree pattern.\r\n\t * @param labels A mapping from label names to collections of\r\n\t * {@link ParseTree} objects located by the tree pattern matching process.\r\n\t * @param mismatchedNode The first node which failed to match the tree\r\n\t * pattern during the matching process.\r\n\t *\r\n\t * @throws {@link Error} if `tree` is not defined\r\n\t * @throws {@link Error} if `pattern` is not defined\r\n\t * @throws {@link Error} if `labels` is not defined\r\n\t */\r\n\tconstructor(\r\n\t\t@NotNull tree: ParseTree,\r\n\t\t@NotNull pattern: ParseTreePattern,\r\n\t\t@NotNull labels: MultiMap<string, ParseTree>,\r\n\t\tmismatchedNode: ParseTree | undefined) {\r\n\t\tif (!tree) {\r\n\t\t\tthrow new Error(\"tree cannot be null\");\r\n\t\t}\r\n\r\n\t\tif (!pattern) {\r\n\t\t\tthrow new Error(\"pattern cannot be null\");\r\n\t\t}\r\n\r\n\t\tif (!labels) {\r\n\t\t\tthrow new Error(\"labels cannot be null\");\r\n\t\t}\r\n\r\n\t\tthis._tree = tree;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._labels = labels;\r\n\t\tthis._mismatchedNode = mismatchedNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the last node associated with a specific `label`.\r\n\t *\r\n\t * For example, for pattern `<id:ID>`, `get(\"id\")` returns the\r\n\t * node matched for that `ID`. If more than one node\r\n\t * matched the specified label, only the last is returned. If there is\r\n\t * no node associated with the label, this returns `undefined`.\r\n\t *\r\n\t * Pattern tags like `<ID>` and `<expr>` without labels are\r\n\t * considered to be labeled with `ID` and `expr`, respectively.\r\n\t *\r\n\t * @param label The label to check.\r\n\t *\r\n\t * @returns The last {@link ParseTree} to match a tag with the specified\r\n\t * label, or `undefined` if no parse tree matched a tag with the label.\r\n\t */\r\n\tpublic get(label: string): ParseTree | undefined {\r\n\t\tlet parseTrees = this._labels.get(label);\r\n\t\tif (!parseTrees || parseTrees.length === 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn parseTrees[parseTrees.length - 1]; // return last if multiple\r\n\t}\r\n\r\n\t/**\r\n\t * Return all nodes matching a rule or token tag with the specified label.\r\n\t *\r\n\t * If the `label` is the name of a parser rule or token in the\r\n\t * grammar, the resulting list will contain both the parse trees matching\r\n\t * rule or tags explicitly labeled with the label and the complete set of\r\n\t * parse trees matching the labeled and unlabeled tags in the pattern for\r\n\t * the parser rule or token. For example, if `label` is `\"foo\"`,\r\n\t * the result will contain *all* of the following.\r\n\t *\r\n\t * * Parse tree nodes matching tags of the form `<foo:anyRuleName>` and\r\n\t *   `<foo:AnyTokenName>`.\r\n\t * * Parse tree nodes matching tags of the form `<anyLabel:foo>`.\r\n\t * * Parse tree nodes matching tags of the form `<foo>`.\r\n\t *\r\n\t * @param label The label.\r\n\t *\r\n\t * @returns A collection of all {@link ParseTree} nodes matching tags with\r\n\t * the specified `label`. If no nodes matched the label, an empty list\r\n\t * is returned.\r\n\t */\r\n\t@NotNull\r\n\tpublic getAll(@NotNull label: string): ParseTree[] {\r\n\t\tconst nodes = this._labels.get(label);\r\n\t\tif (!nodes) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * Return a mapping from label &rarr; [list of nodes].\r\n\t *\r\n\t * The map includes special entries corresponding to the names of rules and\r\n\t * tokens referenced in tags in the original pattern. For additional\r\n\t * information, see the description of {@link #getAll(String)}.\r\n\t *\r\n\t * @returns A mapping from labels to parse tree nodes. If the parse tree\r\n\t * pattern did not contain any rule or token tags, this map will be empty.\r\n\t */\r\n\t@NotNull\r\n\tget labels(): MultiMap<string, ParseTree> {\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the node at which we first detected a mismatch.\r\n\t *\r\n\t * @returns the node at which we first detected a mismatch, or `undefined`\r\n\t * if the match was successful.\r\n\t */\r\n\tget mismatchedNode(): ParseTree | undefined {\r\n\t\treturn this._mismatchedNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a value indicating whether the match operation succeeded.\r\n\t *\r\n\t * @returns `true` if the match operation succeeded; otherwise,\r\n\t * `false`.\r\n\t */\r\n\tget succeeded(): boolean {\r\n\t\treturn !this._mismatchedNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tree pattern we are matching against.\r\n\t *\r\n\t * @returns The tree pattern we are matching against.\r\n\t */\r\n\t@NotNull\r\n\tget pattern(): ParseTreePattern {\r\n\t\treturn this._pattern;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the parse tree we are trying to match to a pattern.\r\n\t *\r\n\t * @returns The {@link ParseTree} we are trying to match to a pattern.\r\n\t */\r\n\t@NotNull\r\n\tget tree(): ParseTree {\r\n\t\treturn this._tree;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn `Match ${\r\n\t\t\tthis.succeeded ? \"succeeded\" : \"failed\"}; found ${\r\n\t\t\tthis.labels.size} labels`;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { NotNull } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { ParseTreeMatch } from \"./ParseTreeMatch\";\r\nimport { ParseTreePatternMatcher } from \"./ParseTreePatternMatcher\";\r\nimport { XPath } from \"../xpath/XPath\";\r\n\r\n/**\r\n * A pattern like `<ID> = <expr>;` converted to a {@link ParseTree} by\r\n * {@link ParseTreePatternMatcher#compile(String, int)}.\r\n */\r\nexport class ParseTreePattern {\r\n\t/**\r\n\t * This is the backing field for `patternRuleIndex`.\r\n\t */\r\n\tprivate _patternRuleIndex: number;\r\n\r\n\t/**\r\n\t * This is the backing field for `pattern`.\r\n\t */\r\n\t@NotNull\r\n\tprivate _pattern: string;\r\n\r\n\t/**\r\n\t * This is the backing field for `patternTree`.\r\n\t */\r\n\t@NotNull\r\n\tprivate _patternTree: ParseTree;\r\n\r\n\t/**\r\n\t * This is the backing field for `matcher`.\r\n\t */\r\n\t@NotNull\r\n\tprivate _matcher: ParseTreePatternMatcher;\r\n\r\n\t/**\r\n\t * Construct a new instance of the {@link ParseTreePattern} class.\r\n\t *\r\n\t * @param matcher The {@link ParseTreePatternMatcher} which created this\r\n\t * tree pattern.\r\n\t * @param pattern The tree pattern in concrete syntax form.\r\n\t * @param patternRuleIndex The parser rule which serves as the root of the\r\n\t * tree pattern.\r\n\t * @param patternTree The tree pattern in {@link ParseTree} form.\r\n\t */\r\n\tconstructor(\r\n\t\t@NotNull matcher: ParseTreePatternMatcher,\r\n\t\t@NotNull pattern: string,\r\n\t\tpatternRuleIndex: number,\r\n\t\t@NotNull patternTree: ParseTree) {\r\n\t\tthis._matcher = matcher;\r\n\t\tthis._patternRuleIndex = patternRuleIndex;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._patternTree = patternTree;\r\n\t}\r\n\r\n\t/**\r\n\t * Match a specific parse tree against this tree pattern.\r\n\t *\r\n\t * @param tree The parse tree to match against this tree pattern.\r\n\t * @returns A {@link ParseTreeMatch} object describing the result of the\r\n\t * match operation. The `ParseTreeMatch.succeeded` method can be\r\n\t * used to determine whether or not the match was successful.\r\n\t */\r\n\t@NotNull\r\n\tpublic match(@NotNull tree: ParseTree): ParseTreeMatch {\r\n\t\treturn this._matcher.match(tree, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not a parse tree matches this tree pattern.\r\n\t *\r\n\t * @param tree The parse tree to match against this tree pattern.\r\n\t * @returns `true` if `tree` is a match for the current tree\r\n\t * pattern; otherwise, `false`.\r\n\t */\r\n\tpublic matches(@NotNull tree: ParseTree): boolean {\r\n\t\treturn this._matcher.match(tree, this).succeeded;\r\n\t}\r\n\r\n\t/**\r\n\t * Find all nodes using XPath and then try to match those subtrees against\r\n\t * this tree pattern.\r\n\t *\r\n\t * @param tree The {@link ParseTree} to match against this pattern.\r\n\t * @param xpath An expression matching the nodes\r\n\t *\r\n\t * @returns A collection of {@link ParseTreeMatch} objects describing the\r\n\t * successful matches. Unsuccessful matches are omitted from the result,\r\n\t * regardless of the reason for the failure.\r\n\t */\r\n\t@NotNull\r\n\tpublic findAll(@NotNull tree: ParseTree, @NotNull xpath: string): ParseTreeMatch[] {\r\n\t\tlet subtrees: Set<ParseTree> = XPath.findAll(tree, xpath, this._matcher.parser);\r\n\t\tlet matches: ParseTreeMatch[] = [];\r\n\t\tfor (let t of subtrees) {\r\n\t\t\tlet match: ParseTreeMatch = this.match(t);\r\n\t\t\tif (match.succeeded) {\r\n\t\t\t\tmatches.push(match);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the {@link ParseTreePatternMatcher} which created this tree pattern.\r\n\t *\r\n\t * @returns The {@link ParseTreePatternMatcher} which created this tree\r\n\t * pattern.\r\n\t */\r\n\t@NotNull\r\n\tget matcher(): ParseTreePatternMatcher {\r\n\t\treturn this._matcher;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tree pattern in concrete syntax form.\r\n\t *\r\n\t * @returns The tree pattern in concrete syntax form.\r\n\t */\r\n\t@NotNull\r\n\tget pattern(): string {\r\n\t\treturn this._pattern;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the parser rule which serves as the outermost rule for the tree\r\n\t * pattern.\r\n\t *\r\n\t * @returns The parser rule which serves as the outermost rule for the tree\r\n\t * pattern.\r\n\t */\r\n\tget patternRuleIndex(): number {\r\n\t\treturn this._patternRuleIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tree pattern as a {@link ParseTree}. The rule and token tags from\r\n\t * the pattern are present in the parse tree as terminal nodes with a symbol\r\n\t * of type {@link RuleTagToken} or {@link TokenTagToken}.\r\n\t *\r\n\t * @returns The tree pattern as a {@link ParseTree}.\r\n\t */\r\n\t@NotNull\r\n\tget patternTree(): ParseTree {\r\n\t\treturn this._patternTree;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\n\r\nimport { BailErrorStrategy } from \"../../BailErrorStrategy\";\r\nimport { CharStreams } from \"../../CharStreams\";\r\nimport { Chunk } from \"./Chunk\";\r\nimport { CommonTokenStream } from \"../../CommonTokenStream\";\r\nimport { Lexer } from \"../../Lexer\";\r\nimport { ListTokenSource } from \"../../ListTokenSource\";\r\nimport { MultiMap } from \"../../misc/MultiMap\";\r\nimport { NotNull } from \"../../Decorators\";\r\nimport { ParseCancellationException } from \"../../misc/ParseCancellationException\";\r\nimport { Parser } from \"../../Parser\";\r\nimport { ParserInterpreter } from \"../../ParserInterpreter\";\r\nimport { ParserRuleContext } from \"../../ParserRuleContext\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { ParseTreeMatch } from \"./ParseTreeMatch\";\r\nimport { ParseTreePattern } from \"./ParseTreePattern\";\r\nimport { RecognitionException } from \"../../RecognitionException\";\r\nimport { RuleNode } from \"../RuleNode\";\r\nimport { RuleTagToken } from \"./RuleTagToken\";\r\nimport { TagChunk } from \"./TagChunk\";\r\nimport { TerminalNode } from \"../TerminalNode\";\r\nimport { TextChunk } from \"./TextChunk\";\r\nimport { Token } from \"../../Token\";\r\nimport { TokenTagToken } from \"./TokenTagToken\";\r\n\r\n/**\r\n * A tree pattern matching mechanism for ANTLR {@link ParseTree}s.\r\n *\r\n * Patterns are strings of source input text with special tags representing\r\n * token or rule references such as:\r\n *\r\n * ```\r\n * <ID> = <expr>;\r\n * ```\r\n *\r\n * Given a pattern start rule such as `statement`, this object constructs\r\n * a {@link ParseTree} with placeholders for the `ID` and `expr`\r\n * subtree. Then the {@link #match} routines can compare an actual\r\n * {@link ParseTree} from a parse with this pattern. Tag `<ID>` matches\r\n * any `ID` token and tag `<expr>` references the result of the\r\n * `expr` rule (generally an instance of `ExprContext`.\r\n *\r\n * Pattern `x = 0;` is a similar pattern that matches the same pattern\r\n * except that it requires the identifier to be `x` and the expression to\r\n * be `0`.\r\n *\r\n * The {@link #matches} routines return `true` or `false` based\r\n * upon a match for the tree rooted at the parameter sent in. The\r\n * {@link #match} routines return a {@link ParseTreeMatch} object that\r\n * contains the parse tree, the parse tree pattern, and a map from tag name to\r\n * matched nodes (more below). A subtree that fails to match, returns with\r\n * {@link ParseTreeMatch#mismatchedNode} set to the first tree node that did not\r\n * match.\r\n *\r\n * For efficiency, you can compile a tree pattern in string form to a\r\n * {@link ParseTreePattern} object.\r\n *\r\n * See `TestParseTreeMatcher` for lots of examples.\r\n * {@link ParseTreePattern} has two static helper methods:\r\n * {@link ParseTreePattern#findAll} and {@link ParseTreePattern#match} that\r\n * are easy to use but not super efficient because they create new\r\n * {@link ParseTreePatternMatcher} objects each time and have to compile the\r\n * pattern in string form before using it.\r\n *\r\n * The lexer and parser that you pass into the {@link ParseTreePatternMatcher}\r\n * constructor are used to parse the pattern in string form. The lexer converts\r\n * the `<ID> = <expr>;` into a sequence of four tokens (assuming lexer\r\n * throws out whitespace or puts it on a hidden channel). Be aware that the\r\n * input stream is reset for the lexer (but not the parser; a\r\n * {@link ParserInterpreter} is created to parse the input.). Any user-defined\r\n * fields you have put into the lexer might get changed when this mechanism asks\r\n * it to scan the pattern string.\r\n *\r\n * Normally a parser does not accept token `<expr>` as a valid\r\n * `expr` but, from the parser passed in, we create a special version of\r\n * the underlying grammar representation (an {@link ATN}) that allows imaginary\r\n * tokens representing rules (`<expr>`) to match entire rules. We call\r\n * these *bypass alternatives*.\r\n *\r\n * Delimiters are `<`} and `>`}, with `\\` as the escape string\r\n * by default, but you can set them to whatever you want using\r\n * {@link #setDelimiters}. You must escape both start and stop strings\r\n * `\\<` and `\\>`.\r\n */\r\nexport class ParseTreePatternMatcher {\r\n\t/**\r\n\t * This is the backing field for `lexer`.\r\n\t */\r\n\tprivate _lexer: Lexer;\r\n\r\n\t/**\r\n\t * This is the backing field for `parser`.\r\n\t */\r\n\tprivate _parser: Parser;\r\n\r\n\tprotected start = \"<\";\r\n\tprotected stop = \">\";\r\n\tprotected escape = \"\\\\\"; // e.g., \\< and \\> must escape BOTH!\r\n\r\n\t/**\r\n\t * Regular expression corresponding to escape, for global replace\r\n\t */\r\n\tprotected escapeRE = /\\\\/g;\r\n\r\n\t/**\r\n\t * Constructs a {@link ParseTreePatternMatcher} or from a {@link Lexer} and\r\n\t * {@link Parser} object. The lexer input stream is altered for tokenizing\r\n\t * the tree patterns. The parser is used as a convenient mechanism to get\r\n\t * the grammar name, plus token, rule names.\r\n\t */\r\n\tconstructor(lexer: Lexer, parser: Parser) {\r\n\t\tthis._lexer = lexer;\r\n\t\tthis._parser = parser;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the delimiters used for marking rule and token tags within concrete\r\n\t * syntax used by the tree pattern parser.\r\n\t *\r\n\t * @param start The start delimiter.\r\n\t * @param stop The stop delimiter.\r\n\t * @param escapeLeft The escape sequence to use for escaping a start or stop delimiter.\r\n\t *\r\n\t * @throws {@link Error} if `start` is not defined or empty.\r\n\t * @throws {@link Error} if `stop` is not defined or empty.\r\n\t */\r\n\tpublic setDelimiters(start: string, stop: string, escapeLeft: string): void {\r\n\t\tif (!start) {\r\n\t\t\tthrow new Error(\"start cannot be null or empty\");\r\n\t\t}\r\n\r\n\t\tif (!stop) {\r\n\t\t\tthrow new Error(\"stop cannot be null or empty\");\r\n\t\t}\r\n\r\n\t\tthis.start = start;\r\n\t\tthis.stop = stop;\r\n\t\tthis.escape = escapeLeft;\r\n\t\tthis.escapeRE = new RegExp(escapeLeft.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"), \"g\");\r\n\t}\r\n\r\n\t/** Does `pattern` matched as rule `patternRuleIndex` match `tree`? */\r\n\tpublic matches(tree: ParseTree, pattern: string, patternRuleIndex: number): boolean;\r\n\r\n\t/** Does `pattern` matched as rule patternRuleIndex match tree? Pass in a\r\n\t *  compiled pattern instead of a string representation of a tree pattern.\r\n\t */\r\n\tpublic matches(tree: ParseTree, pattern: ParseTreePattern): boolean;\r\n\r\n\tpublic matches(tree: ParseTree, pattern: string | ParseTreePattern, patternRuleIndex: number = 0): boolean {\r\n\t\tif (typeof pattern === \"string\") {\r\n\t\t\tlet p: ParseTreePattern = this.compile(pattern, patternRuleIndex);\r\n\t\t\treturn this.matches(tree, p);\r\n\t\t} else {\r\n\t\t\tlet labels = new MultiMap<string, ParseTree>();\r\n\t\t\tlet mismatchedNode = this.matchImpl(tree, pattern.patternTree, labels);\r\n\t\t\treturn !mismatchedNode;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compare `pattern` matched as rule `patternRuleIndex` against\r\n\t * `tree` and return a {@link ParseTreeMatch} object that contains the\r\n\t * matched elements, or the node at which the match failed.\r\n\t */\r\n\tpublic match(tree: ParseTree, pattern: string, patternRuleIndex: number): ParseTreeMatch;\r\n\r\n\t/**\r\n\t * Compare `pattern` matched against `tree` and return a\r\n\t * {@link ParseTreeMatch} object that contains the matched elements, or the\r\n\t * node at which the match failed. Pass in a compiled pattern instead of a\r\n\t * string representation of a tree pattern.\r\n\t */\r\n\tpublic match(tree: ParseTree, pattern: ParseTreePattern): ParseTreeMatch;\r\n\r\n\t// Implementation of match\r\n\t@NotNull\r\n\tpublic match(tree: ParseTree, @NotNull pattern: string | ParseTreePattern, patternRuleIndex: number = 0): ParseTreeMatch {\r\n\t\tif (typeof pattern === \"string\") {\r\n\t\t\tlet p: ParseTreePattern = this.compile(pattern, patternRuleIndex);\r\n\t\t\treturn this.match(tree, p);\r\n\t\t} else {\r\n\t\t\tlet labels = new MultiMap<string, ParseTree>();\r\n\t\t\tlet mismatchedNode = this.matchImpl(tree, pattern.patternTree, labels);\r\n\t\t\treturn new ParseTreeMatch(tree, pattern, labels, mismatchedNode);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * For repeated use of a tree pattern, compile it to a\r\n\t * {@link ParseTreePattern} using this method.\r\n\t */\r\n\tpublic compile(pattern: string, patternRuleIndex: number): ParseTreePattern {\r\n\t\tlet tokenList = this.tokenize(pattern);\r\n\t\tlet tokenSrc = new ListTokenSource(tokenList);\r\n\t\tlet tokens = new CommonTokenStream(tokenSrc);\r\n\t\tconst parser = this._parser;\r\n\r\n\t\tlet parserInterp = new ParserInterpreter(\r\n\t\t\tparser.grammarFileName,\r\n\t\t\tparser.vocabulary,\r\n\t\t\tparser.ruleNames,\r\n\t\t\tparser.getATNWithBypassAlts(),\r\n\t\t\ttokens);\r\n\r\n\t\tlet tree: ParseTree;\r\n\t\ttry {\r\n\t\t\tparserInterp.errorHandler = new BailErrorStrategy();\r\n\t\t\ttree = parserInterp.parse(patternRuleIndex);\r\n//\t\t\tSystem.out.println(\"pattern tree = \"+tree.toStringTree(parserInterp));\r\n\t\t} catch (e) {\r\n\t\t\tif (e instanceof ParseCancellationException) {\r\n\t\t\t\tthrow e.getCause();\r\n\t\t\t} else if (e instanceof RecognitionException) {\r\n\t\t\t\tthrow e;\r\n\t\t\t} else if (e instanceof Error) {\r\n\t\t\t\tthrow new ParseTreePatternMatcher.CannotInvokeStartRule(e);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure tree pattern compilation checks for a complete parse\r\n\t\tif (tokens.LA(1) !== Token.EOF) {\r\n\t\t\tthrow new ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern();\r\n\t\t}\r\n\r\n\t\treturn new ParseTreePattern(this, pattern, patternRuleIndex, tree);\r\n\t}\r\n\r\n\t/**\r\n\t * Used to convert the tree pattern string into a series of tokens. The\r\n\t * input stream is reset.\r\n\t */\r\n\t@NotNull\r\n\tget lexer(): Lexer {\r\n\t\treturn this._lexer;\r\n\t}\r\n\r\n\t/**\r\n\t * Used to collect to the grammar file name, token names, rule names for\r\n\t * used to parse the pattern into a parse tree.\r\n\t */\r\n\t@NotNull\r\n\tget parser(): Parser {\r\n\t\treturn this._parser;\r\n\t}\r\n\r\n\t// ---- SUPPORT CODE ----\r\n\r\n\t/**\r\n\t * Recursively walk `tree` against `patternTree`, filling\r\n\t * `match.`{@link ParseTreeMatch#labels labels}.\r\n\t *\r\n\t * @returns the first node encountered in `tree` which does not match\r\n\t * a corresponding node in `patternTree`, or `undefined` if the match\r\n\t * was successful. The specific node returned depends on the matching\r\n\t * algorithm used by the implementation, and may be overridden.\r\n\t */\r\n\tprotected matchImpl(\r\n\t\t@NotNull tree: ParseTree,\r\n\t\t@NotNull patternTree: ParseTree,\r\n\t\t@NotNull labels: MultiMap<string, ParseTree>): ParseTree | undefined {\r\n\t\tif (!tree) {\r\n\t\t\tthrow new TypeError(\"tree cannot be null\");\r\n\t\t}\r\n\r\n\t\tif (!patternTree) {\r\n\t\t\tthrow new TypeError(\"patternTree cannot be null\");\r\n\t\t}\r\n\r\n\t\t// x and <ID>, x and y, or x and x; or could be mismatched types\r\n\t\tif (tree instanceof TerminalNode && patternTree instanceof TerminalNode) {\r\n\t\t\tlet mismatchedNode: ParseTree | undefined;\r\n\t\t\t// both are tokens and they have same type\r\n\t\t\tif (tree.symbol.type === patternTree.symbol.type) {\r\n\t\t\t\tif (patternTree.symbol instanceof TokenTagToken) { // x and <ID>\r\n\t\t\t\t\tlet tokenTagToken = patternTree.symbol;\r\n\t\t\t\t\t// track label->list-of-nodes for both token name and label (if any)\r\n\t\t\t\t\tlabels.map(tokenTagToken.tokenName, tree);\r\n\t\t\t\t\tconst l = tokenTagToken.label;\r\n\t\t\t\t\tif (l) {\r\n\t\t\t\t\t\tlabels.map(l, tree);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (tree.text === patternTree.text) {\r\n\t\t\t\t\t// x and x\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// x and y\r\n\t\t\t\t\tif (!mismatchedNode) {\r\n\t\t\t\t\t\tmismatchedNode = tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!mismatchedNode) {\r\n\t\t\t\t\tmismatchedNode = tree;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn mismatchedNode;\r\n\t\t}\r\n\r\n\t\tif (tree instanceof ParserRuleContext\r\n\t\t\t&& patternTree instanceof ParserRuleContext) {\r\n\t\t\tlet mismatchedNode: ParseTree | undefined;\r\n\t\t\t// (expr ...) and <expr>\r\n\t\t\tlet ruleTagToken = this.getRuleTagToken(patternTree);\r\n\t\t\tif (ruleTagToken) {\r\n\t\t\t\tlet m: ParseTreeMatch;\r\n\t\t\t\tif (tree.ruleContext.ruleIndex === patternTree.ruleContext.ruleIndex) {\r\n\t\t\t\t\t// track label->list-of-nodes for both rule name and label (if any)\r\n\t\t\t\t\tlabels.map(ruleTagToken.ruleName, tree);\r\n\t\t\t\t\tconst l = ruleTagToken.label;\r\n\t\t\t\t\tif (l) {\r\n\t\t\t\t\t\tlabels.map(l, tree);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!mismatchedNode) {\r\n\t\t\t\t\t\tmismatchedNode = tree;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn mismatchedNode;\r\n\t\t\t}\r\n\r\n\t\t\t// (expr ...) and (expr ...)\r\n\t\t\tif (tree.childCount !== patternTree.childCount) {\r\n\t\t\t\tif (!mismatchedNode) {\r\n\t\t\t\t\tmismatchedNode = tree;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn mismatchedNode;\r\n\t\t\t}\r\n\r\n\t\t\tlet n: number = tree.childCount;\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\tlet childMatch = this.matchImpl(tree.getChild(i), patternTree.getChild(i), labels);\r\n\t\t\t\tif (childMatch) {\r\n\t\t\t\t\treturn childMatch;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn mismatchedNode;\r\n\t\t}\r\n\r\n\t\t// if nodes aren't both tokens or both rule nodes, can't match\r\n\t\treturn tree;\r\n\t}\r\n\r\n\t/** Is `t` `(expr <expr>)` subtree? */\r\n\tprotected getRuleTagToken(t: ParseTree): RuleTagToken | undefined {\r\n\t\tif (t instanceof RuleNode) {\r\n\t\t\tif (t.childCount === 1 && t.getChild(0) instanceof TerminalNode) {\r\n\t\t\t\tlet c = t.getChild(0) as TerminalNode;\r\n\t\t\t\tif (c.symbol instanceof RuleTagToken) {\r\n//\t\t\t\t\tSystem.out.println(\"rule tag subtree \"+t.toStringTree(parser));\r\n\t\t\t\t\treturn c.symbol;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic tokenize(pattern: string): Token[] {\r\n\t\t// split pattern into chunks: sea (raw input) and islands (<ID>, <expr>)\r\n\t\tlet chunks = this.split(pattern);\r\n\r\n\t\t// create token stream from text and tags\r\n\t\tlet tokens: Token[] = [];\r\n\r\n\t\tfor (let chunk of chunks) {\r\n\t\t\tif (chunk instanceof TagChunk) {\r\n\t\t\t\tlet tagChunk = chunk;\r\n\t\t\t\tconst firstChar = tagChunk.tag.substr(0, 1);\r\n\t\t\t\t// add special rule token or conjure up new token from name\r\n\t\t\t\tif (firstChar === firstChar.toUpperCase()) {\r\n\t\t\t\t\tlet ttype: number = this._parser.getTokenType(tagChunk.tag);\r\n\t\t\t\t\tif (ttype === Token.INVALID_TYPE) {\r\n\t\t\t\t\t\tthrow new Error(\"Unknown token \" + tagChunk.tag + \" in pattern: \" + pattern);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet t: TokenTagToken = new TokenTagToken(tagChunk.tag, ttype, tagChunk.label);\r\n\t\t\t\t\ttokens.push(t);\r\n\t\t\t\t}\r\n\t\t\t\telse if (firstChar === firstChar.toLowerCase()) {\r\n\t\t\t\t\tlet ruleIndex: number = this._parser.getRuleIndex(tagChunk.tag);\r\n\t\t\t\t\tif (ruleIndex === -1) {\r\n\t\t\t\t\t\tthrow new Error(\"Unknown rule \" + tagChunk.tag + \" in pattern: \" + pattern);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet ruleImaginaryTokenType: number = this._parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];\r\n\t\t\t\t\ttokens.push(new RuleTagToken(tagChunk.tag, ruleImaginaryTokenType, tagChunk.label));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"invalid tag: \" + tagChunk.tag + \" in pattern: \" + pattern);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet textChunk = chunk as TextChunk;\r\n\t\t\t\tthis._lexer.inputStream = CharStreams.fromString(textChunk.text);\r\n\t\t\t\tlet t: Token = this._lexer.nextToken();\r\n\t\t\t\twhile (t.type !== Token.EOF) {\r\n\t\t\t\t\ttokens.push(t);\r\n\t\t\t\t\tt = this._lexer.nextToken();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n//\t\tSystem.out.println(\"tokens=\"+tokens);\r\n\t\treturn tokens;\r\n\t}\r\n\r\n\t/** Split `<ID> = <e:expr> ;` into 4 chunks for tokenizing by {@link #tokenize}. */\r\n\tpublic split(pattern: string): Chunk[] {\r\n\t\tlet p: number = 0;\r\n\t\tlet n: number = pattern.length;\r\n\t\tlet chunks: Chunk[] = [];\r\n\t\tlet buf: \"\";\r\n\t\t// find all start and stop indexes first, then collect\r\n\t\tlet starts: number[] = [];\r\n\t\tlet stops: number[] = [];\r\n\t\twhile (p < n) {\r\n\t\t\tif (p === pattern.indexOf(this.escape + this.start, p)) {\r\n\t\t\t\tp += this.escape.length + this.start.length;\r\n\t\t\t}\r\n\t\t\telse if (p === pattern.indexOf(this.escape + this.stop, p)) {\r\n\t\t\t\tp += this.escape.length + this.stop.length;\r\n\t\t\t}\r\n\t\t\telse if (p === pattern.indexOf(this.start, p)) {\r\n\t\t\t\tstarts.push(p);\r\n\t\t\t\tp += this.start.length;\r\n\t\t\t}\r\n\t\t\telse if (p === pattern.indexOf(this.stop, p)) {\r\n\t\t\t\tstops.push(p);\r\n\t\t\t\tp += this.stop.length;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tp++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n//\t\tSystem.out.println(\"\");\r\n//\t\tSystem.out.println(starts);\r\n//\t\tSystem.out.println(stops);\r\n\t\tif (starts.length > stops.length) {\r\n\t\t\tthrow new Error(\"unterminated tag in pattern: \" + pattern);\r\n\t\t}\r\n\r\n\t\tif (starts.length < stops.length) {\r\n\t\t\tthrow new Error(\"missing start tag in pattern: \" + pattern);\r\n\t\t}\r\n\r\n\t\tlet ntags: number = starts.length;\r\n\t\tfor (let i = 0; i < ntags; i++) {\r\n\t\t\tif (starts[i] >= stops[i]) {\r\n\t\t\t\tthrow new Error(\"tag delimiters out of order in pattern: \" + pattern);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// collect into chunks now\r\n\t\tif (ntags === 0) {\r\n\t\t\tlet text: string = pattern.substring(0, n);\r\n\t\t\tchunks.push(new TextChunk(text));\r\n\t\t}\r\n\r\n\t\tif (ntags > 0 && starts[0] > 0) { // copy text up to first tag into chunks\r\n\t\t\tlet text: string = pattern.substring(0, starts[0]);\r\n\t\t\tchunks.push(new TextChunk(text));\r\n\t\t}\r\n\t\tfor (let i = 0; i < ntags; i++) {\r\n\t\t\t// copy inside of <tag>\r\n\t\t\tlet tag: string = pattern.substring(starts[i] + this.start.length, stops[i]);\r\n\t\t\tlet ruleOrToken: string = tag;\r\n\t\t\tlet label: string | undefined;\r\n\t\t\tlet colon: number = tag.indexOf(\":\");\r\n\t\t\tif (colon >= 0) {\r\n\t\t\t\tlabel = tag.substring(0, colon);\r\n\t\t\t\truleOrToken = tag.substring(colon + 1, tag.length);\r\n\t\t\t}\r\n\t\t\tchunks.push(new TagChunk(ruleOrToken, label));\r\n\t\t\tif (i + 1 < ntags) {\r\n\t\t\t\t// copy from end of <tag> to start of next\r\n\t\t\t\tlet text: string = pattern.substring(stops[i] + this.stop.length, starts[i + 1]);\r\n\t\t\t\tchunks.push(new TextChunk(text));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ntags > 0) {\r\n\t\t\tlet afterLastTag: number = stops[ntags - 1] + this.stop.length;\r\n\t\t\tif (afterLastTag < n) { // copy text from end of last tag to end\r\n\t\t\t\tlet text: string = pattern.substring(afterLastTag, n);\r\n\t\t\t\tchunks.push(new TextChunk(text));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// strip out the escape sequences from text chunks but not tags\r\n\t\tfor (let i = 0; i < chunks.length; i++) {\r\n\t\t\tlet c: Chunk = chunks[i];\r\n\t\t\tif (c instanceof TextChunk) {\r\n\t\t\t\tlet unescaped: string = c.text.replace(this.escapeRE, \"\");\r\n\t\t\t\tif (unescaped.length < c.text.length) {\r\n\t\t\t\t\tchunks[i] = new TextChunk(unescaped);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn chunks;\r\n\t}\r\n}\r\n\r\nexport namespace ParseTreePatternMatcher {\r\n\texport class CannotInvokeStartRule extends Error {\r\n\t\tpublic constructor(public error: Error) {\r\n\t\t\tsuper(`CannotInvokeStartRule: ${error}`);\r\n\t\t}\r\n\t}\r\n\r\n\t// Fixes https://github.com/antlr/antlr4/issues/413\r\n\t// \"Tree pattern compilation doesn't check for a complete parse\"\r\n\texport class StartRuleDoesNotConsumeFullPattern extends Error {\r\n\t\tconstructor() {\r\n\t\t\tsuper(\"StartRuleDoesNotConsumeFullPattern\");\r\n\t\t}\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:46.0343500-07:00\r\n\r\nimport { CharStream } from \"../../CharStream\";\r\nimport { NotNull, Override } from \"../../Decorators\";\r\nimport { Token } from \"../../Token\";\r\nimport { TokenSource } from \"../../TokenSource\";\r\n\r\n/**\r\n * A {@link Token} object representing an entire subtree matched by a parser\r\n * rule; e.g., `<expr>`. These tokens are created for {@link TagChunk}\r\n * chunks where the tag corresponds to a parser rule.\r\n */\r\nexport class RuleTagToken implements Token {\r\n\t/**\r\n\t * This is the backing field for `ruleName`.\r\n\t */\r\n\tprivate _ruleName: string;\r\n\t/**\r\n\t * The token type for the current token. This is the token type assigned to\r\n\t * the bypass alternative for the rule during ATN deserialization.\r\n\t */\r\n\tprivate bypassTokenType: number;\r\n\t/**\r\n\t * This is the backing field for `label`.\r\n\t */\r\n\tprivate _label?: string;\r\n\r\n\t/**\r\n\t * Constructs a new instance of {@link RuleTagToken} with the specified rule\r\n\t * name, bypass token type, and label.\r\n\t *\r\n\t * @param ruleName The name of the parser rule this rule tag matches.\r\n\t * @param bypassTokenType The bypass token type assigned to the parser rule.\r\n\t * @param label The label associated with the rule tag, or `undefined` if\r\n\t * the rule tag is unlabeled.\r\n\t *\r\n\t * @exception IllegalArgumentException if `ruleName` is not defined\r\n\t * or empty.\r\n\t */\r\n\tconstructor(@NotNull ruleName: string, bypassTokenType: number, label?: string) {\r\n\t\tif (ruleName == null || ruleName.length === 0) {\r\n\t\t\tthrow new Error(\"ruleName cannot be null or empty.\");\r\n\t\t}\r\n\r\n\t\tthis._ruleName = ruleName;\r\n\t\tthis.bypassTokenType = bypassTokenType;\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the name of the rule associated with this rule tag.\r\n\t *\r\n\t * @returns The name of the parser rule associated with this rule tag.\r\n\t */\r\n\t@NotNull\r\n\tget ruleName(): string {\r\n\t\treturn this._ruleName;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the label associated with the rule tag.\r\n\t *\r\n\t * @returns The name of the label associated with the rule tag, or\r\n\t * `undefined` if this is an unlabeled rule tag.\r\n\t */\r\n\tget label(): string | undefined {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * Rule tag tokens are always placed on the {@link #DEFAULT_CHANNEL}.\r\n\t */\r\n\t@Override\r\n\tget channel(): number {\r\n\t\treturn Token.DEFAULT_CHANNEL;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * This method returns the rule tag formatted with `<` and `>`\r\n\t * delimiters.\r\n\t */\r\n\t@Override\r\n\tget text(): string {\r\n\t\tif (this._label != null) {\r\n\t\t\treturn \"<\" + this._label + \":\" + this._ruleName + \">\";\r\n\t\t}\r\n\r\n\t\treturn \"<\" + this._ruleName + \">\";\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * Rule tag tokens have types assigned according to the rule bypass\r\n\t * transitions created during ATN deserialization.\r\n\t */\r\n\t@Override\r\n\tget type(): number {\r\n\t\treturn this.bypassTokenType;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns 0.\r\n\t */\r\n\t@Override\r\n\tget line(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns -1.\r\n\t */\r\n\t@Override\r\n\tget charPositionInLine(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns -1.\r\n\t */\r\n\t@Override\r\n\tget tokenIndex(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns -1.\r\n\t */\r\n\t@Override\r\n\tget startIndex(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns -1.\r\n\t */\r\n\t@Override\r\n\tget stopIndex(): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns `undefined`.\r\n\t */\r\n\t@Override\r\n\tget tokenSource(): TokenSource | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} always returns `undefined`.\r\n\t */\r\n\t@Override\r\n\tget inputStream(): CharStream | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link RuleTagToken} returns a string of the form\r\n\t * `ruleName:bypassTokenType`.\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this._ruleName + \":\" + this.bypassTokenType;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:46.1670669-07:00\r\n\r\nimport { Chunk } from \"./Chunk\";\r\nimport { NotNull, Override } from \"../../Decorators\";\r\n\r\n/**\r\n * Represents a placeholder tag in a tree pattern. A tag can have any of the\r\n * following forms.\r\n *\r\n * * `expr`: An unlabeled placeholder for a parser rule `expr`.\r\n * * `ID`: An unlabeled placeholder for a token of type `ID`.\r\n * * `e:expr`: A labeled placeholder for a parser rule `expr`.\r\n * * `id:ID`: A labeled placeholder for a token of type `ID`.\r\n *\r\n * This class does not perform any validation on the tag or label names aside\r\n * from ensuring that the tag is a defined, non-empty string.\r\n */\r\nexport class TagChunk extends Chunk {\r\n\t/**\r\n\t * This is the backing field for `tag`.\r\n\t */\r\n\tprivate _tag: string;\r\n\t/**\r\n\t * This is the backing field for `label`.\r\n\t */\r\n\tprivate _label?: string;\r\n\r\n\t/**\r\n\t * Construct a new instance of {@link TagChunk} using the specified label\r\n\t * and tag.\r\n\t *\r\n\t * @param label The label for the tag. If this is `undefined`, the\r\n\t * {@link TagChunk} represents an unlabeled tag.\r\n\t * @param tag The tag, which should be the name of a parser rule or token\r\n\t * type.\r\n\t *\r\n\t * @exception IllegalArgumentException if `tag` is not defined or\r\n\t * empty.\r\n\t */\r\n\tconstructor(tag: string, label?: string) {\r\n\t\tsuper();\r\n\r\n\t\tif (tag == null || tag.length === 0) {\r\n\t\t\tthrow new Error(\"tag cannot be null or empty\");\r\n\t\t}\r\n\r\n\t\tthis._tag = tag;\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tag for this chunk.\r\n\t *\r\n\t * @returns The tag for the chunk.\r\n\t */\r\n\t@NotNull\r\n\tget tag(): string {\r\n\t\treturn this._tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the label, if any, assigned to this chunk.\r\n\t *\r\n\t * @returns The label assigned to this chunk, or `undefined` if no label is\r\n\t * assigned to the chunk.\r\n\t */\r\n\tget label(): string | undefined {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * This method returns a text representation of the tag chunk. Labeled tags\r\n\t * are returned in the form `label:tag`, and unlabeled tags are\r\n\t * returned as just the tag name.\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tif (this._label != null) {\r\n\t\t\treturn this._label + \":\" + this._tag;\r\n\t\t}\r\n\r\n\t\treturn this._tag;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:46.2521448-07:00\r\n\r\nimport { Chunk } from \"./Chunk\";\r\nimport { NotNull, Override } from \"../../Decorators\";\r\n\r\n/**\r\n * Represents a span of raw text (concrete syntax) between tags in a tree\r\n * pattern string.\r\n */\r\nexport class TextChunk extends Chunk {\r\n\t/**\r\n\t * This is the backing field for {@link #getText}.\r\n\t */\r\n\t@NotNull\r\n\tprivate _text: string;\r\n\r\n\t/**\r\n\t * Constructs a new instance of {@link TextChunk} with the specified text.\r\n\t *\r\n\t * @param text The text of this chunk.\r\n\t * @exception IllegalArgumentException if `text` is not defined.\r\n\t */\r\n\tconstructor(@NotNull text: string) {\r\n\t\tsuper();\r\n\r\n\t\tif (text == null) {\r\n\t\t\tthrow new Error(\"text cannot be null\");\r\n\t\t}\r\n\r\n\t\tthis._text = text;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the raw text of this chunk.\r\n\t *\r\n\t * @returns The text of the chunk.\r\n\t */\r\n\t@NotNull\r\n\tget text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link TextChunk} returns the result of\r\n\t * `text` in single quotes.\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn \"'\" + this._text + \"'\";\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:46.3281988-07:00\r\n\r\nimport { CommonToken } from \"../../CommonToken\";\r\nimport { NotNull, Override } from \"../../Decorators\";\r\n\r\n/**\r\n * A {@link Token} object representing a token of a particular type; e.g.,\r\n * `<ID>`. These tokens are created for {@link TagChunk} chunks where the\r\n * tag corresponds to a lexer rule or token type.\r\n */\r\nexport class TokenTagToken extends CommonToken {\r\n\t/**\r\n\t * This is the backing field for `tokenName`.\r\n\t */\r\n\t@NotNull\r\n\tprivate _tokenName: string;\r\n\t/**\r\n\t * This is the backing field for `label`.\r\n\t */\r\n\tprivate _label: string | undefined;\r\n\r\n\t/**\r\n\t * Constructs a new instance of {@link TokenTagToken} with the specified\r\n\t * token name, type, and label.\r\n\t *\r\n\t * @param tokenName The token name.\r\n\t * @param type The token type.\r\n\t * @param label The label associated with the token tag, or `undefined` if\r\n\t * the token tag is unlabeled.\r\n\t */\r\n\tconstructor(@NotNull tokenName: string, type: number, label?: string) {\r\n\t\tsuper(type);\r\n\t\tthis._tokenName = tokenName;\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the token name.\r\n\t * @returns The token name.\r\n\t */\r\n\t@NotNull\r\n\tget tokenName(): string {\r\n\t\treturn this._tokenName;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the label associated with the rule tag.\r\n\t *\r\n\t * @returns The name of the label associated with the rule tag, or\r\n\t * `undefined` if this is an unlabeled rule tag.\r\n\t */\r\n\tget label(): string | undefined {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link TokenTagToken} returns the token tag\r\n\t * formatted with `<` and `>` delimiters.\r\n\t */\r\n\t@Override\r\n\tget text(): string {\r\n\t\tif (this._label != null) {\r\n\t\t\treturn \"<\" + this._label + \":\" + this._tokenName + \">\";\r\n\t\t}\r\n\r\n\t\treturn \"<\" + this._tokenName + \">\";\r\n\t}\r\n\r\n\t/**\r\n\t * {@inheritDoc}\r\n\t *\r\n\t * The implementation for {@link TokenTagToken} returns a string of the form\r\n\t * `tokenName:type`.\r\n\t */\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\treturn this._tokenName + \":\" + this.type;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// ConvertTo-TS run at 2016-10-04T11:26:46.4373888-07:00\r\n\r\nimport { CharStreams } from \"../../CharStreams\";\r\nimport { CommonTokenStream } from \"../../CommonTokenStream\";\r\nimport { LexerNoViableAltException } from \"../../LexerNoViableAltException\";\r\nimport { Parser } from \"../../Parser\";\r\nimport { ParserRuleContext } from \"../../ParserRuleContext\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { Token } from \"../../Token\";\r\nimport { XPathElement } from \"./XPathElement\";\r\nimport { XPathLexer } from \"./XPathLexer\";\r\nimport { XPathLexerErrorListener } from \"./XPathLexerErrorListener\";\r\nimport { XPathRuleAnywhereElement } from \"./XPathRuleAnywhereElement\";\r\nimport { XPathRuleElement } from \"./XPathRuleElement\";\r\nimport { XPathTokenAnywhereElement } from \"./XPathTokenAnywhereElement\";\r\nimport { XPathTokenElement } from \"./XPathTokenElement\";\r\nimport { XPathWildcardAnywhereElement } from \"./XPathWildcardAnywhereElement\";\r\nimport { XPathWildcardElement } from \"./XPathWildcardElement\";\r\n\r\n/**\r\n * Represent a subset of XPath XML path syntax for use in identifying nodes in\r\n * parse trees.\r\n *\r\n * Split path into words and separators `/` and `//` via ANTLR\r\n * itself then walk path elements from left to right. At each separator-word\r\n * pair, find set of nodes. Next stage uses those as work list.\r\n *\r\n * The basic interface is\r\n * {@link XPath#findAll ParseTree.findAll}`(tree, pathString, parser)`.\r\n * But that is just shorthand for:\r\n *\r\n * ```\r\n * let p = new XPath(parser, pathString);\r\n * return p.evaluate(tree);\r\n * ```\r\n *\r\n * See `TestXPath` for descriptions. In short, this\r\n * allows operators:\r\n *\r\n * | | |\r\n * | --- | --- |\r\n * | `/` | root |\r\n * | `//` | anywhere |\r\n * | `!` | invert; this much appear directly after root or anywhere operator |\r\n *\r\n * and path elements:\r\n *\r\n * | | |\r\n * | --- | --- |\r\n * | `ID` | token name |\r\n * | `'string'` | any string literal token from the grammar |\r\n * | `expr` | rule name |\r\n * | `*` | wildcard matching any node |\r\n *\r\n * Whitespace is not allowed.\r\n */\r\nexport class XPath {\r\n\tpublic static readonly WILDCARD: string = \"*\"; // word not operator/separator\r\n\tpublic static readonly NOT: string = \"!\"; \t   // word for invert operator\r\n\r\n\tprotected path: string;\r\n\tprotected elements: XPathElement[];\r\n\tprotected parser: Parser;\r\n\r\n\tconstructor(parser: Parser, path: string) {\r\n\t\tthis.parser = parser;\r\n\t\tthis.path = path;\r\n\t\tthis.elements = this.split(path);\r\n\t\t// console.log(this.elements.toString());\r\n\t}\r\n\r\n\t// TODO: check for invalid token/rule names, bad syntax\r\n\r\n\tpublic split(path: string): XPathElement[] {\r\n\t\tlet lexer = new XPathLexer(CharStreams.fromString(path));\r\n\t\tlexer.recover = (e: LexerNoViableAltException) => { throw e; };\r\n\r\n\t\tlexer.removeErrorListeners();\r\n\t\tlexer.addErrorListener(new XPathLexerErrorListener());\r\n\t\tlet tokenStream = new CommonTokenStream(lexer);\r\n\t\ttry {\r\n\t\t\ttokenStream.fill();\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (e instanceof LexerNoViableAltException) {\r\n\t\t\t\tlet pos: number = lexer.charPositionInLine;\r\n\t\t\t\tlet msg: string = \"Invalid tokens or characters at index \" + pos + \" in path '\" + path + \"' -- \" + e.message;\r\n\t\t\t\tthrow new RangeError(msg);\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t\tlet tokens: Token[] = tokenStream.getTokens();\r\n\t\t// console.log(\"path=\" + path + \"=>\" + tokens);\r\n\t\tlet elements: XPathElement[] = [];\r\n\t\tlet n: number = tokens.length;\r\n\t\tlet i: number = 0;\r\n\t\tloop:\r\n\t\twhile (i < n) {\r\n\t\t\tlet el: Token = tokens[i];\r\n\t\t\tlet next: Token | undefined;\r\n\t\t\tswitch (el.type) {\r\n\t\t\t\tcase XPathLexer.ROOT:\r\n\t\t\t\tcase XPathLexer.ANYWHERE:\r\n\t\t\t\t\tlet anywhere: boolean = el.type === XPathLexer.ANYWHERE;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tnext = tokens[i];\r\n\t\t\t\t\tlet invert: boolean = next.type === XPathLexer.BANG;\r\n\t\t\t\t\tif (invert) {\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tnext = tokens[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet pathElement: XPathElement = this.getXPathElement(next, anywhere);\r\n\t\t\t\t\tpathElement.invert = invert;\r\n\t\t\t\t\telements.push(pathElement);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase XPathLexer.TOKEN_REF:\r\n\t\t\t\tcase XPathLexer.RULE_REF:\r\n\t\t\t\tcase XPathLexer.WILDCARD:\r\n\t\t\t\t\telements.push(this.getXPathElement(el, false));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Token.EOF:\r\n\t\t\t\t\tbreak loop;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unknowth path element \" + el);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert word like `*` or `ID` or `expr` to a path\r\n\t * element. `anywhere` is `true` if `//` precedes the\r\n\t * word.\r\n\t */\r\n\tprotected getXPathElement(wordToken: Token, anywhere: boolean): XPathElement {\r\n\t\tif (wordToken.type === Token.EOF) {\r\n\t\t\tthrow new Error(\"Missing path element at end of path\");\r\n\t\t}\r\n\r\n\t\tlet word = wordToken.text;\r\n\t\tif (word == null) {\r\n\t\t\tthrow new Error(\"Expected wordToken to have text content.\");\r\n\t\t}\r\n\r\n\t\tlet ttype: number = this.parser.getTokenType(word);\r\n\t\tlet ruleIndex: number = this.parser.getRuleIndex(word);\r\n\t\tswitch (wordToken.type) {\r\n\t\t\tcase XPathLexer.WILDCARD:\r\n\t\t\t\treturn anywhere ?\r\n\t\t\t\t\tnew XPathWildcardAnywhereElement() :\r\n\t\t\t\t\tnew XPathWildcardElement();\r\n\t\t\tcase XPathLexer.TOKEN_REF:\r\n\t\t\tcase XPathLexer.STRING:\r\n\t\t\t\tif (ttype === Token.INVALID_TYPE) {\r\n\t\t\t\t\tthrow new Error(word + \" at index \" +\r\n\t\t\t\t\t\twordToken.startIndex +\r\n\t\t\t\t\t\t\" isn't a valid token name\");\r\n\t\t\t\t}\r\n\t\t\t\treturn anywhere ?\r\n\t\t\t\t\tnew XPathTokenAnywhereElement(word, ttype) :\r\n\t\t\t\t\tnew XPathTokenElement(word, ttype);\r\n\t\t\tdefault:\r\n\t\t\t\tif (ruleIndex === -1) {\r\n\t\t\t\t\tthrow new Error(word + \" at index \" +\r\n\t\t\t\t\t\twordToken.startIndex +\r\n\t\t\t\t\t\t\" isn't a valid rule name\");\r\n\t\t\t\t}\r\n\t\t\t\treturn anywhere ?\r\n\t\t\t\t\tnew XPathRuleAnywhereElement(word, ruleIndex) :\r\n\t\t\t\t\tnew XPathRuleElement(word, ruleIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static findAll(tree: ParseTree, xpath: string, parser: Parser): Set<ParseTree> {\r\n\t\tlet p: XPath = new XPath(parser, xpath);\r\n\t\treturn p.evaluate(tree);\r\n\t}\r\n\r\n\t/**\r\n\t * Return a list of all nodes starting at `t` as root that satisfy the\r\n\t * path. The root `/` is relative to the node passed to {@link evaluate}.\r\n\t */\r\n\tpublic evaluate(t: ParseTree): Set<ParseTree> {\r\n\t\tlet dummyRoot = new ParserRuleContext();\r\n\t\tdummyRoot.addChild(t as ParserRuleContext);\r\n\r\n\t\tlet work = new Set<ParseTree>([dummyRoot]);\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < this.elements.length) {\r\n\t\t\tlet next = new Set<ParseTree>();\r\n\t\t\tfor (let node of work) {\r\n\t\t\t\tif (node.childCount > 0) {\r\n\t\t\t\t\t// only try to match next element if it has children\r\n\t\t\t\t\t// e.g., //func/*/stat might have a token node for which\r\n\t\t\t\t\t// we can't go looking for stat nodes.\r\n\t\t\t\t\tlet matching = this.elements[i].evaluate(node);\r\n\t\t\t\t\tmatching.forEach(next.add, next);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\twork = next;\r\n\t\t}\r\n\r\n\t\treturn work;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\n\r\nexport abstract class XPathElement {\r\n\tprotected nodeName: string;\r\n\tpublic invert: boolean;\r\n\r\n\t/** Construct element like `/ID` or `ID` or `/*` etc...\r\n\t *  op is null if just node\r\n\t */\r\n\tconstructor(nodeName: string) {\r\n\t\tthis.nodeName = nodeName;\r\n\t\tthis.invert = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Given tree rooted at `t` return all nodes matched by this path\r\n\t * element.\r\n\t */\r\n\tpublic abstract evaluate(t: ParseTree): ParseTree[];\r\n\r\n\t@Override\r\n\tpublic toString(): string {\r\n\t\tlet inv: string = this.invert ? \"!\" : \"\";\r\n\t\tlet className: string = Object.constructor.name;\r\n\t\treturn className + \"[\" + inv + this.nodeName + \"]\";\r\n\t}\r\n}\r\n","// Generated from XPathLexer.g4 by ANTLR 4.9.0-SNAPSHOT\r\n\r\n\r\nimport { ATN } from \"../../atn/ATN\";\r\nimport { ATNDeserializer } from \"../../atn/ATNDeserializer\";\r\nimport { CharStream } from \"../../CharStream\";\r\nimport { Lexer } from \"../../Lexer\";\r\nimport { LexerATNSimulator } from \"../../atn/LexerATNSimulator\";\r\nimport { NotNull } from \"../../Decorators\";\r\nimport { Override } from \"../../Decorators\";\r\nimport { RuleContext } from \"../../RuleContext\";\r\nimport { Vocabulary } from \"../../Vocabulary\";\r\nimport { VocabularyImpl } from \"../../VocabularyImpl\";\r\n\r\nimport * as Utils from \"../../misc/Utils\";\r\n\r\n\r\nexport class XPathLexer extends Lexer {\r\n\tpublic static readonly TOKEN_REF = 1;\r\n\tpublic static readonly RULE_REF = 2;\r\n\tpublic static readonly ANYWHERE = 3;\r\n\tpublic static readonly ROOT = 4;\r\n\tpublic static readonly WILDCARD = 5;\r\n\tpublic static readonly BANG = 6;\r\n\tpublic static readonly ID = 7;\r\n\tpublic static readonly STRING = 8;\r\n\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly channelNames: string[] = [\r\n\t\t\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\r\n\t];\r\n\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly modeNames: string[] = [\r\n\t\t\"DEFAULT_MODE\",\r\n\t];\r\n\r\n\tpublic static readonly ruleNames: string[] = [\r\n\t\t\"ANYWHERE\", \"ROOT\", \"WILDCARD\", \"BANG\", \"ID\", \"NameChar\", \"NameStartChar\", \r\n\t\t\"STRING\",\r\n\t];\r\n\r\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\r\n\t\tundefined, undefined, undefined, \"'//'\", \"'/'\", \"'*'\", \"'!'\",\r\n\t];\r\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\r\n\t\tundefined, \"TOKEN_REF\", \"RULE_REF\", \"ANYWHERE\", \"ROOT\", \"WILDCARD\", \"BANG\", \r\n\t\t\"ID\", \"STRING\",\r\n\t];\r\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XPathLexer._LITERAL_NAMES, XPathLexer._SYMBOLIC_NAMES, []);\r\n\r\n\t// @Override\r\n\t// @NotNull\r\n\tpublic get vocabulary(): Vocabulary {\r\n\t\treturn XPathLexer.VOCABULARY;\r\n\t}\r\n\t// tslint:enable:no-trailing-whitespace\r\n\r\n\r\n\tconstructor(input: CharStream) {\r\n\t\tsuper(input);\r\n\t\tthis._interp = new LexerATNSimulator(XPathLexer._ATN, this);\r\n\t}\r\n\r\n\t// @Override\r\n\tpublic get grammarFileName(): string { return \"XPathLexer.g4\"; }\r\n\r\n\t// @Override\r\n\tpublic get ruleNames(): string[] { return XPathLexer.ruleNames; }\r\n\r\n\t// @Override\r\n\tpublic get serializedATN(): string { return XPathLexer._serializedATN; }\r\n\r\n\t// @Override\r\n\tpublic get channelNames(): string[] { return XPathLexer.channelNames; }\r\n\r\n\t// @Override\r\n\tpublic get modeNames(): string[] { return XPathLexer.modeNames; }\r\n\r\n\t// @Override\r\n\tpublic action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {\r\n\t\tswitch (ruleIndex) {\r\n\t\tcase 4:\r\n\t\t\tthis.ID_action(_localctx, actionIndex);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tprivate ID_action(_localctx: RuleContext, actionIndex: number): void {\r\n\t\tswitch (actionIndex) {\r\n\t\tcase 0:\r\n\r\n\t\t\tlet text = this.text;\r\n\t\t\tif (text.charAt(0) === text.charAt(0).toUpperCase()) {\r\n\t\t\t\tthis.type = XPathLexer.TOKEN_REF;\r\n\t\t\t} else {\r\n\t\t\t\tthis.type = XPathLexer.RULE_REF;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _serializedATNSegments: number = 2;\r\n\tprivate static readonly _serializedATNSegment0: string =\r\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02\\n2\\b\\x01\\x04\" +\r\n\t\t\"\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\" +\r\n\t\t\"\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\" +\r\n\t\t\"\\x03\\x04\\x03\\x04\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x07\\x06\\x1F\\n\\x06\\f\\x06\" +\r\n\t\t\"\\x0E\\x06\\\"\\v\\x06\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\t\\x03\" +\r\n\t\t\"\\t\\x07\\t,\\n\\t\\f\\t\\x0E\\t/\\v\\t\\x03\\t\\x03\\t\\x03-\\x02\\x02\\n\\x03\\x02\\x05\\x05\" +\r\n\t\t\"\\x02\\x06\\x07\\x02\\x07\\t\\x02\\b\\v\\x02\\t\\r\\x02\\x02\\x0F\\x02\\x02\\x11\\x02\\n\\x03\" +\r\n\t\t\"\\x02\\x02\\x04\\u02B6\\x02\\x02\\x02\\n\\x02\\x10\\x02\\x1D\\x022\\x02;\\x02C\\x02\\\\\" +\r\n\t\t\"\\x02a\\x02a\\x02c\\x02|\\x02\\x81\\x02\\xA1\\x02\\xAC\\x02\\xAC\\x02\\xAF\\x02\\xAF\\x02\" +\r\n\t\t\"\\xB7\\x02\\xB7\\x02\\xBC\\x02\\xBC\\x02\\xC2\\x02\\xD8\\x02\\xDA\\x02\\xF8\\x02\\xFA\\x02\" +\r\n\t\t\"\\u02C3\\x02\\u02C8\\x02\\u02D3\\x02\\u02E2\\x02\\u02E6\\x02\\u02EE\\x02\\u02EE\\x02\" +\r\n\t\t\"\\u02F0\\x02\\u02F0\\x02\\u0302\\x02\\u0376\\x02\\u0378\\x02\\u0379\\x02\\u037C\\x02\" +\r\n\t\t\"\\u037F\\x02\\u0381\\x02\\u0381\\x02\\u0388\\x02\\u0388\\x02\\u038A\\x02\\u038C\\x02\" +\r\n\t\t\"\\u038E\\x02\\u038E\\x02\\u0390\\x02\\u03A3\\x02\\u03A5\\x02\\u03F7\\x02\\u03F9\\x02\" +\r\n\t\t\"\\u0483\\x02\\u0485\\x02\\u0489\\x02\\u048C\\x02\\u0531\\x02\\u0533\\x02\\u0558\\x02\" +\r\n\t\t\"\\u055B\\x02\\u055B\\x02\\u0563\\x02\\u0589\\x02\\u0593\\x02\\u05BF\\x02\\u05C1\\x02\" +\r\n\t\t\"\\u05C1\\x02\\u05C3\\x02\\u05C4\\x02\\u05C6\\x02\\u05C7\\x02\\u05C9\\x02\\u05C9\\x02\" +\r\n\t\t\"\\u05D2\\x02\\u05EC\\x02\\u05F2\\x02\\u05F4\\x02\\u0602\\x02\\u0607\\x02\\u0612\\x02\" +\r\n\t\t\"\\u061C\\x02\\u061E\\x02\\u061E\\x02\\u0622\\x02\\u066B\\x02\\u0670\\x02\\u06D5\\x02\" +\r\n\t\t\"\\u06D7\\x02\\u06DF\\x02\\u06E1\\x02\\u06EA\\x02\\u06EC\\x02\\u06FE\\x02\\u0701\\x02\" +\r\n\t\t\"\\u0701\\x02\\u0711\\x02\\u074C\\x02\\u074F\\x02\\u07B3\\x02\\u07C2\\x02\\u07F7\\x02\" +\r\n\t\t\"\\u07FC\\x02\\u07FC\\x02\\u0802\\x02\\u082F\\x02\\u0842\\x02\\u085D\\x02\\u08A2\\x02\" +\r\n\t\t\"\\u08B6\\x02\\u08B8\\x02\\u08BF\\x02\\u08D6\\x02\\u0965\\x02\\u0968\\x02\\u0971\\x02\" +\r\n\t\t\"\\u0973\\x02\\u0985\\x02\\u0987\\x02\\u098E\\x02\\u0991\\x02\\u0992\\x02\\u0995\\x02\" +\r\n\t\t\"\\u09AA\\x02\\u09AC\\x02\\u09B2\\x02\\u09B4\\x02\\u09B4\\x02\\u09B8\\x02\\u09BB\\x02\" +\r\n\t\t\"\\u09BE\\x02\\u09C6\\x02\\u09C9\\x02\\u09CA\\x02\\u09CD\\x02\\u09D0\\x02\\u09D9\\x02\" +\r\n\t\t\"\\u09D9\\x02\\u09DE\\x02\\u09DF\\x02\\u09E1\\x02\\u09E5\\x02\\u09E8\\x02\\u09F3\\x02\" +\r\n\t\t\"\\u0A03\\x02\\u0A05\\x02\\u0A07\\x02\\u0A0C\\x02\\u0A11\\x02\\u0A12\\x02\\u0A15\\x02\" +\r\n\t\t\"\\u0A2A\\x02\\u0A2C\\x02\\u0A32\\x02\\u0A34\\x02\\u0A35\\x02\\u0A37\\x02\\u0A38\\x02\" +\r\n\t\t\"\\u0A3A\\x02\\u0A3B\\x02\\u0A3E\\x02\\u0A3E\\x02\\u0A40\\x02\\u0A44\\x02\\u0A49\\x02\" +\r\n\t\t\"\\u0A4A\\x02\\u0A4D\\x02\\u0A4F\\x02\\u0A53\\x02\\u0A53\\x02\\u0A5B\\x02\\u0A5E\\x02\" +\r\n\t\t\"\\u0A60\\x02\\u0A60\\x02\\u0A68\\x02\\u0A77\\x02\\u0A83\\x02\\u0A85\\x02\\u0A87\\x02\" +\r\n\t\t\"\\u0A8F\\x02\\u0A91\\x02\\u0A93\\x02\\u0A95\\x02\\u0AAA\\x02\\u0AAC\\x02\\u0AB2\\x02\" +\r\n\t\t\"\\u0AB4\\x02\\u0AB5\\x02\\u0AB7\\x02\\u0ABB\\x02\\u0ABE\\x02\\u0AC7\\x02\\u0AC9\\x02\" +\r\n\t\t\"\\u0ACB\\x02\\u0ACD\\x02\\u0ACF\\x02\\u0AD2\\x02\\u0AD2\\x02\\u0AE2\\x02\\u0AE5\\x02\" +\r\n\t\t\"\\u0AE8\\x02\\u0AF1\\x02\\u0AFB\\x02\\u0AFB\\x02\\u0B03\\x02\\u0B05\\x02\\u0B07\\x02\" +\r\n\t\t\"\\u0B0E\\x02\\u0B11\\x02\\u0B12\\x02\\u0B15\\x02\\u0B2A\\x02\\u0B2C\\x02\\u0B32\\x02\" +\r\n\t\t\"\\u0B34\\x02\\u0B35\\x02\\u0B37\\x02\\u0B3B\\x02\\u0B3E\\x02\\u0B46\\x02\\u0B49\\x02\" +\r\n\t\t\"\\u0B4A\\x02\\u0B4D\\x02\\u0B4F\\x02\\u0B58\\x02\\u0B59\\x02\\u0B5E\\x02\\u0B5F\\x02\" +\r\n\t\t\"\\u0B61\\x02\\u0B65\\x02\\u0B68\\x02\\u0B71\\x02\\u0B73\\x02\\u0B73\\x02\\u0B84\\x02\" +\r\n\t\t\"\\u0B85\\x02\\u0B87\\x02\\u0B8C\\x02\\u0B90\\x02\\u0B92\\x02\\u0B94\\x02\\u0B97\\x02\" +\r\n\t\t\"\\u0B9B\\x02\\u0B9C\\x02\\u0B9E\\x02\\u0B9E\\x02\\u0BA0\\x02\\u0BA1\\x02\\u0BA5\\x02\" +\r\n\t\t\"\\u0BA6\\x02\\u0BAA\\x02\\u0BAC\\x02\\u0BB0\\x02\\u0BBB\\x02\\u0BC0\\x02\\u0BC4\\x02\" +\r\n\t\t\"\\u0BC8\\x02\\u0BCA\\x02\\u0BCC\\x02\\u0BCF\\x02\\u0BD2\\x02\\u0BD2\\x02\\u0BD9\\x02\" +\r\n\t\t\"\\u0BD9\\x02\\u0BE8\\x02\\u0BF1\\x02\\u0C02\\x02\\u0C05\\x02\\u0C07\\x02\\u0C0E\\x02\" +\r\n\t\t\"\\u0C10\\x02\\u0C12\\x02\\u0C14\\x02\\u0C2A\\x02\\u0C2C\\x02\\u0C3B\\x02\\u0C3F\\x02\" +\r\n\t\t\"\\u0C46\\x02\\u0C48\\x02\\u0C4A\\x02\\u0C4C\\x02\\u0C4F\\x02\\u0C57\\x02\\u0C58\\x02\" +\r\n\t\t\"\\u0C5A\\x02\\u0C5C\\x02\\u0C62\\x02\\u0C65\\x02\\u0C68\\x02\\u0C71\\x02\\u0C82\\x02\" +\r\n\t\t\"\\u0C85\\x02\\u0C87\\x02\\u0C8E\\x02\\u0C90\\x02\\u0C92\\x02\\u0C94\\x02\\u0CAA\\x02\" +\r\n\t\t\"\\u0CAC\\x02\\u0CB5\\x02\\u0CB7\\x02\\u0CBB\\x02\\u0CBE\\x02\\u0CC6\\x02\\u0CC8\\x02\" +\r\n\t\t\"\\u0CCA\\x02\\u0CCC\\x02\\u0CCF\\x02\\u0CD7\\x02\\u0CD8\\x02\\u0CE0\\x02\\u0CE0\\x02\" +\r\n\t\t\"\\u0CE2\\x02\\u0CE5\\x02\\u0CE8\\x02\\u0CF1\\x02\\u0CF3\\x02\\u0CF4\\x02\\u0D03\\x02\" +\r\n\t\t\"\\u0D05\\x02\\u0D07\\x02\\u0D0E\\x02\\u0D10\\x02\\u0D12\\x02\\u0D14\\x02\\u0D3C\\x02\" +\r\n\t\t\"\\u0D3F\\x02\\u0D46\\x02\\u0D48\\x02\\u0D4A\\x02\\u0D4C\\x02\\u0D50\\x02\\u0D56\\x02\" +\r\n\t\t\"\\u0D59\\x02\\u0D61\\x02\\u0D65\\x02\\u0D68\\x02\\u0D71\\x02\\u0D7C\\x02\\u0D81\\x02\" +\r\n\t\t\"\\u0D84\\x02\\u0D85\\x02\\u0D87\\x02\\u0D98\\x02\\u0D9C\\x02\\u0DB3\\x02\\u0DB5\\x02\" +\r\n\t\t\"\\u0DBD\\x02\\u0DBF\\x02\\u0DBF\\x02\\u0DC2\\x02\\u0DC8\\x02\\u0DCC\\x02\\u0DCC\\x02\" +\r\n\t\t\"\\u0DD1\\x02\\u0DD6\\x02\\u0DD8\\x02\\u0DD8\\x02\\u0DDA\\x02\\u0DE1\\x02\\u0DE8\\x02\" +\r\n\t\t\"\\u0DF1\\x02\\u0DF4\\x02\\u0DF5\\x02\\u0E03\\x02\\u0E3C\\x02\\u0E42\\x02\\u0E50\\x02\" +\r\n\t\t\"\\u0E52\\x02\\u0E5B\\x02\\u0E83\\x02\\u0E84\\x02\\u0E86\\x02\\u0E86\\x02\\u0E89\\x02\" +\r\n\t\t\"\\u0E8A\\x02\\u0E8C\\x02\\u0E8C\\x02\\u0E8F\\x02\\u0E8F\\x02\\u0E96\\x02\\u0E99\\x02\" +\r\n\t\t\"\\u0E9B\\x02\\u0EA1\\x02\\u0EA3\\x02\\u0EA5\\x02\\u0EA7\\x02\\u0EA7\\x02\\u0EA9\\x02\" +\r\n\t\t\"\\u0EA9\\x02\\u0EAC\\x02\\u0EAD\\x02\\u0EAF\\x02\\u0EBB\\x02\\u0EBD\\x02\\u0EBF\\x02\" +\r\n\t\t\"\\u0EC2\\x02\\u0EC6\\x02\\u0EC8\\x02\\u0EC8\\x02\\u0ECA\\x02\\u0ECF\\x02\\u0ED2\\x02\" +\r\n\t\t\"\\u0EDB\\x02\\u0EDE\\x02\\u0EE1\\x02\\u0F02\\x02\\u0F02\\x02\\u0F1A\\x02\\u0F1B\\x02\" +\r\n\t\t\"\\u0F22\\x02\\u0F2B\\x02\\u0F37\\x02\\u0F37\\x02\\u0F39\\x02\\u0F39\\x02\\u0F3B\\x02\" +\r\n\t\t\"\\u0F3B\\x02\\u0F40\\x02\\u0F49\\x02\\u0F4B\\x02\\u0F6E\\x02\\u0F73\\x02\\u0F86\\x02\" +\r\n\t\t\"\\u0F88\\x02\\u0F99\\x02\\u0F9B\\x02\\u0FBE\\x02\\u0FC8\\x02\\u0FC8\\x02\\u1002\\x02\" +\r\n\t\t\"\\u104B\\x02\\u1052\\x02\\u109F\\x02\\u10A2\\x02\\u10C7\\x02\\u10C9\\x02\\u10C9\\x02\" +\r\n\t\t\"\\u10CF\\x02\\u10CF\\x02\\u10D2\\x02\\u10FC\\x02\\u10FE\\x02\\u124A\\x02\\u124C\\x02\" +\r\n\t\t\"\\u124F\\x02\\u1252\\x02\\u1258\\x02\\u125A\\x02\\u125A\\x02\\u125C\\x02\\u125F\\x02\" +\r\n\t\t\"\\u1262\\x02\\u128A\\x02\\u128C\\x02\\u128F\\x02\\u1292\\x02\\u12B2\\x02\\u12B4\\x02\" +\r\n\t\t\"\\u12B7\\x02\\u12BA\\x02\\u12C0\\x02\\u12C2\\x02\\u12C2\\x02\\u12C4\\x02\\u12C7\\x02\" +\r\n\t\t\"\\u12CA\\x02\\u12D8\\x02\\u12DA\\x02\\u1312\\x02\\u1314\\x02\\u1317\\x02\\u131A\\x02\" +\r\n\t\t\"\\u135C\\x02\\u135F\\x02\\u1361\\x02\\u1382\\x02\\u1391\\x02\\u13A2\\x02\\u13F7\\x02\" +\r\n\t\t\"\\u13FA\\x02\\u13FF\\x02\\u1403\\x02\\u166E\\x02\\u1671\\x02\\u1681\\x02\\u1683\\x02\" +\r\n\t\t\"\\u169C\\x02\\u16A2\\x02\\u16EC\\x02\\u16F0\\x02\\u16FA\\x02\\u1702\\x02\\u170E\\x02\" +\r\n\t\t\"\\u1710\\x02\\u1716\\x02\\u1722\\x02\\u1736\\x02\\u1742\\x02\\u1755\\x02\\u1762\\x02\" +\r\n\t\t\"\\u176E\\x02\\u1770\\x02\\u1772\\x02\\u1774\\x02\\u1775\\x02\\u1782\\x02\\u17D5\\x02\" +\r\n\t\t\"\\u17D9\\x02\\u17D9\\x02\\u17DE\\x02\\u17DF\\x02\\u17E2\\x02\\u17EB\\x02\\u180D\\x02\" +\r\n\t\t\"\\u1810\\x02\\u1812\\x02\\u181B\\x02\\u1822\\x02\\u1879\\x02\\u1882\\x02\\u18AC\\x02\" +\r\n\t\t\"\\u18B2\\x02\\u18F7\\x02\\u1902\\x02\\u1920\\x02\\u1922\\x02\\u192D\\x02\\u1932\\x02\" +\r\n\t\t\"\\u193D\\x02\\u1948\\x02\\u196F\\x02\\u1972\\x02\\u1976\\x02\\u1982\\x02\\u19AD\\x02\" +\r\n\t\t\"\\u19B2\\x02\\u19CB\\x02\\u19D2\\x02\\u19DB\\x02\\u1A02\\x02\\u1A1D\\x02\\u1A22\\x02\" +\r\n\t\t\"\\u1A60\\x02\\u1A62\\x02\\u1A7E\\x02\\u1A81\\x02\\u1A8B\\x02\\u1A92\\x02\\u1A9B\\x02\" +\r\n\t\t\"\\u1AA9\\x02\\u1AA9\\x02\\u1AB2\\x02\\u1ABF\\x02\\u1B02\\x02\\u1B4D\\x02\\u1B52\\x02\" +\r\n\t\t\"\\u1B5B\\x02\\u1B6D\\x02\\u1B75\\x02\\u1B82\\x02\\u1BF5\\x02\\u1C02\\x02\\u1C39\\x02\" +\r\n\t\t\"\\u1C42\\x02\\u1C4B\\x02\\u1C4F\\x02\\u1C7F\\x02\\u1C82\\x02\\u1C8A\\x02\\u1CD2\\x02\" +\r\n\t\t\"\\u1CD4\\x02\\u1CD6\\x02\\u1CF8\\x02\\u1CFA\\x02\\u1CFB\\x02\\u1D02\\x02\\u1DF7\\x02\" +\r\n\t\t\"\\u1DFD\\x02\\u1F17\\x02\\u1F1A\\x02\\u1F1F\\x02\\u1F22\\x02\\u1F47\\x02\\u1F4A\\x02\" +\r\n\t\t\"\\u1F4F\\x02\\u1F52\\x02\\u1F59\\x02\\u1F5B\\x02\\u1F5B\\x02\\u1F5D\\x02\\u1F5D\\x02\" +\r\n\t\t\"\\u1F5F\\x02\\u1F5F\\x02\\u1F61\\x02\\u1F7F\\x02\\u1F82\\x02\\u1FB6\\x02\\u1FB8\\x02\" +\r\n\t\t\"\\u1FBE\\x02\\u1FC0\\x02\\u1FC0\\x02\\u1FC4\\x02\\u1FC6\\x02\\u1FC8\\x02\\u1FCE\\x02\" +\r\n\t\t\"\\u1FD2\\x02\\u1FD5\\x02\\u1FD8\\x02\\u1FDD\\x02\\u1FE2\\x02\\u1FEE\\x02\\u1FF4\\x02\" +\r\n\t\t\"\\u1FF6\\x02\\u1FF8\\x02\\u1FFE\\x02\\u200D\\x02\\u2011\\x02\\u202C\\x02\\u2030\\x02\" +\r\n\t\t\"\\u2041\\x02\\u2042\\x02\\u2056\\x02\\u2056\\x02\\u2062\\x02\\u2066\\x02\\u2068\\x02\" +\r\n\t\t\"\\u2071\\x02\\u2073\\x02\\u2073\\x02\\u2081\\x02\\u2081\\x02\\u2092\\x02\\u209E\\x02\" +\r\n\t\t\"\\u20D2\\x02\\u20DE\\x02\\u20E3\\x02\\u20E3\\x02\\u20E7\\x02\\u20F2\\x02\\u2104\\x02\" +\r\n\t\t\"\\u2104\\x02\\u2109\\x02\\u2109\\x02\\u210C\\x02\\u2115\\x02\\u2117\\x02\\u2117\\x02\" +\r\n\t\t\"\\u211B\\x02\\u211F\\x02\\u2126\\x02\\u2126\\x02\\u2128\\x02\\u2128\\x02\\u212A\\x02\" +\r\n\t\t\"\\u212A\\x02\\u212C\\x02\\u212F\\x02\\u2131\\x02\\u213B\\x02\\u213E\\x02\\u2141\\x02\" +\r\n\t\t\"\\u2147\\x02\\u214B\\x02\\u2150\\x02\\u2150\\x02\\u2162\\x02\\u218A\\x02\\u2C02\\x02\" +\r\n\t\t\"\\u2C30\\x02\\u2C32\\x02\\u2C60\\x02\\u2C62\\x02\\u2CE6\\x02\\u2CED\\x02\\u2CF5\\x02\" +\r\n\t\t\"\\u2D02\\x02\\u2D27\\x02\\u2D29\\x02\\u2D29\\x02\\u2D2F\\x02\\u2D2F\\x02\\u2D32\\x02\" +\r\n\t\t\"\\u2D69\\x02\\u2D71\\x02\\u2D71\\x02\\u2D81\\x02\\u2D98\\x02\\u2DA2\\x02\\u2DA8\\x02\" +\r\n\t\t\"\\u2DAA\\x02\\u2DB0\\x02\\u2DB2\\x02\\u2DB8\\x02\\u2DBA\\x02\\u2DC0\\x02\\u2DC2\\x02\" +\r\n\t\t\"\\u2DC8\\x02\\u2DCA\\x02\\u2DD0\\x02\\u2DD2\\x02\\u2DD8\\x02\\u2DDA\\x02\\u2DE0\\x02\" +\r\n\t\t\"\\u2DE2\\x02\\u2E01\\x02\\u2E31\\x02\\u2E31\\x02\\u3007\\x02\\u3009\\x02\\u3023\\x02\" +\r\n\t\t\"\\u3031\\x02\\u3033\\x02\\u3037\\x02\\u303A\\x02\\u303E\\x02\\u3043\\x02\\u3098\\x02\" +\r\n\t\t\"\\u309B\\x02\\u309C\\x02\\u309F\\x02\\u30A1\\x02\\u30A3\\x02\\u30FC\\x02\\u30FE\\x02\" +\r\n\t\t\"\\u3101\\x02\\u3107\\x02\\u312F\\x02\\u3133\\x02\\u3190\\x02\\u31A2\\x02\\u31BC\\x02\" +\r\n\t\t\"\\u31F2\\x02\\u3201\\x02\\u3402\\x02\\u4DB7\\x02\\u4E02\\x02\\u9FD7\\x02\\uA002\\x02\" +\r\n\t\t\"\\uA48E\\x02\\uA4D2\\x02\\uA4FF\\x02\\uA502\\x02\\uA60E\\x02\\uA612\\x02\\uA62D\\x02\" +\r\n\t\t\"\\uA642\\x02\\uA671\\x02\\uA676\\x02\\uA67F\\x02\\uA681\\x02\\uA6F3\\x02\\uA719\\x02\" +\r\n\t\t\"\\uA721\\x02\\uA724\\x02\\uA78A\\x02\\uA78D\\x02\\uA7B0\\x02\\uA7B2\\x02\\uA7B9\\x02\" +\r\n\t\t\"\\uA7F9\\x02\\uA829\\x02\\uA842\\x02\\uA875\\x02\\uA882\\x02\\uA8C7\\x02\\uA8D2\\x02\" +\r\n\t\t\"\\uA8DB\\x02\\uA8E2\\x02\\uA8F9\\x02\\uA8FD\\x02\\uA8FD\\x02\\uA8FF\\x02\\uA8FF\\x02\" +\r\n\t\t\"\\uA902\\x02\\uA92F\\x02\\uA932\\x02\\uA955\\x02\\uA962\\x02\\uA97E\\x02\\uA982\\x02\" +\r\n\t\t\"\\uA9C2\\x02\\uA9D1\\x02\\uA9DB\\x02\\uA9E2\\x02\\uAA00\\x02\\uAA02\\x02\\uAA38\\x02\" +\r\n\t\t\"\\uAA42\\x02\\uAA4F\\x02\\uAA52\\x02\\uAA5B\\x02\\uAA62\\x02\\uAA78\\x02\\uAA7C\\x02\" +\r\n\t\t\"\\uAAC4\\x02\\uAADD\\x02\\uAADF\\x02\\uAAE2\\x02\\uAAF1\\x02\\uAAF4\\x02\\uAAF8\\x02\" +\r\n\t\t\"\\uAB03\\x02\\uAB08\\x02\\uAB0B\\x02\\uAB10\\x02\\uAB13\\x02\\uAB18\\x02\\uAB22\\x02\" +\r\n\t\t\"\\uAB28\\x02\\uAB2A\\x02\\uAB30\\x02\\uAB32\\x02\\uAB5C\\x02\\uAB5E\\x02\\uAB67\\x02\" +\r\n\t\t\"\\uAB72\\x02\\uABEC\\x02\\uABEE\\x02\\uABEF\\x02\\uABF2\\x02\\uABFB\\x02\\uAC02\\x02\" +\r\n\t\t\"\\uD7A5\\x02\\uD7B2\\x02\\uD7C8\\x02\\uD7CD\\x02\\uD7FD\\x02\\uF902\\x02\\uFA6F\\x02\" +\r\n\t\t\"\\uFA72\\x02\\uFADB\\x02\\uFB02\\x02\\uFB08\\x02\\uFB15\\x02\\uFB19\\x02\\uFB1F\\x02\" +\r\n\t\t\"\\uFB2A\\x02\\uFB2C\\x02\\uFB38\\x02\\uFB3A\\x02\\uFB3E\\x02\\uFB40\\x02\\uFB40\\x02\" +\r\n\t\t\"\\uFB42\\x02\\uFB43\\x02\\uFB45\\x02\\uFB46\\x02\\uFB48\\x02\\uFBB3\\x02\\uFBD5\\x02\" +\r\n\t\t\"\\uFD3F\\x02\\uFD52\\x02\\uFD91\\x02\\uFD94\\x02\\uFDC9\\x02\\uFDF2\\x02\\uFDFD\\x02\" +\r\n\t\t\"\\uFE02\\x02\\uFE11\\x02\\uFE22\\x02\\uFE31\\x02\\uFE35\\x02\\uFE36\\x02\\uFE4F\\x02\" +\r\n\t\t\"\\uFE51\\x02\\uFE72\\x02\\uFE76\\x02\\uFE78\\x02\\uFEFE\\x02\\uFF01\\x02\\uFF01\\x02\" +\r\n\t\t\"\\uFF12\\x02\\uFF1B\\x02\\uFF23\\x02\\uFF3C\\x02\\uFF41\\x02\\uFF41\\x02\\uFF43\\x02\" +\r\n\t\t\"\\uFF5C\\x02\\uFF68\\x02\\uFFC0\\x02\\uFFC4\\x02\\uFFC9\\x02\\uFFCC\\x02\\uFFD1\\x02\" +\r\n\t\t\"\\uFFD4\\x02\\uFFD9\\x02\\uFFDC\\x02\\uFFDE\\x02\\uFFFB\\x02\\uFFFD\\x02\\x02\\x03\\r\" +\r\n\t\t\"\\x03\\x0F\\x03(\\x03*\\x03<\\x03>\\x03?\\x03A\\x03O\\x03R\\x03_\\x03\\x82\\x03\\xFC\" +\r\n\t\t\"\\x03\\u0142\\x03\\u0176\\x03\\u01FF\\x03\\u01FF\\x03\\u0282\\x03\\u029E\\x03\\u02A2\" +\r\n\t\t\"\\x03\\u02D2\\x03\\u02E2\\x03\\u02E2\\x03\\u0302\\x03\\u0321\\x03\\u0332\\x03\\u034C\" +\r\n\t\t\"\\x03\\u0352\\x03\\u037C\\x03\\u0382\\x03\\u039F\\x03\\u03A2\\x03\\u03C5\\x03\\u03CA\" +\r\n\t\t\"\\x03\\u03D1\\x03\\u03D3\\x03\\u03D7\\x03\\u0402\\x03\\u049F\\x03\\u04A2\\x03\\u04AB\" +\r\n\t\t\"\\x03\\u04B2\\x03\\u04D5\\x03\\u04DA\\x03\\u04FD\\x03\\u0502\\x03\\u0529\\x03\\u0532\" +\r\n\t\t\"\\x03\\u0565\\x03\\u0602\\x03\\u0738\\x03\\u0742\\x03\\u0757\\x03\\u0762\\x03\\u0769\" +\r\n\t\t\"\\x03\\u0802\\x03\\u0807\\x03\\u080A\\x03\\u080A\\x03\\u080C\\x03\\u0837\\x03\\u0839\" +\r\n\t\t\"\\x03\\u083A\\x03\\u083E\\x03\\u083E\\x03\\u0841\\x03\\u0857\\x03\\u0862\\x03\\u0878\" +\r\n\t\t\"\\x03\\u0882\\x03\\u08A0\\x03\\u08E2\\x03\\u08F4\\x03\\u08F6\\x03\\u08F7\\x03\\u0902\" +\r\n\t\t\"\\x03\\u0917\\x03\\u0922\\x03\\u093B\\x03\\u0982\\x03\\u09B9\\x03\\u09C0\\x03\\u09C1\" +\r\n\t\t\"\\x03\\u0A02\\x03\\u0A05\\x03\\u0A07\\x03\\u0A08\\x03\\u0A0E\\x03\\u0A15\\x03\\u0A17\" +\r\n\t\t\"\\x03\\u0A19\\x03\\u0A1B\\x03\\u0A35\\x03\\u0A3A\\x03\\u0A3C\\x03\\u0A41\\x03\\u0A41\" +\r\n\t\t\"\\x03\\u0A62\\x03\\u0A7E\\x03\\u0A82\\x03\\u0A9E\\x03\\u0AC2\\x03\\u0AC9\\x03\\u0ACB\" +\r\n\t\t\"\\x03\\u0AE8\\x03\\u0B02\\x03\\u0B37\\x03\\u0B42\\x03\\u0B57\\x03\\u0B62\\x03\\u0B74\" +\r\n\t\t\"\\x03\\u0B82\\x03\\u0B93\\x03\\u0C02\\x03\\u0C4A\\x03\\u0C82\\x03\\u0CB4\\x03\\u0CC2\" +\r\n\t\t\"\\x03\\u0CF4\\x03\\u1002\\x03\\u1048\\x03\\u1068\\x03\\u1071\\x03\\u1081\\x03\\u10BC\" +\r\n\t\t\"\\x03\\u10BF\\x03\\u10BF\\x03\\u10D2\\x03\\u10EA\\x03\\u10F2\\x03\\u10FB\\x03\\u1102\" +\r\n\t\t\"\\x03\\u1136\\x03\\u1138\\x03\\u1141\\x03\\u1152\\x03\\u1175\\x03\\u1178\\x03\\u1178\" +\r\n\t\t\"\\x03\\u1182\\x03\\u11C6\\x03\\u11CC\\x03\\u11CE\\x03\\u11D2\\x03\\u11DC\\x03\\u11DE\" +\r\n\t\t\"\\x03\\u11DE\\x03\\u1202\\x03\\u1213\\x03\\u1215\\x03\\u1239\\x03\\u1240\\x03\\u1240\" +\r\n\t\t\"\\x03\\u1282\\x03\\u1288\\x03\\u128A\\x03\\u128A\\x03\\u128C\\x03\\u128F\\x03\\u1291\" +\r\n\t\t\"\\x03\\u129F\\x03\\u12A1\\x03\\u12AA\\x03\\u12B2\\x03\\u12EC\\x03\\u12F2\\x03\\u12FB\" +\r\n\t\t\"\\x03\\u1302\\x03\\u1305\\x03\\u1307\\x03\\u130E\\x03\\u1311\\x03\\u1312\\x03\\u1315\" +\r\n\t\t\"\\x03\\u132A\\x03\\u132C\\x03\\u1332\\x03\\u1334\\x03\\u1335\\x03\\u1337\\x03\\u133B\" +\r\n\t\t\"\\x03\\u133E\\x03\\u1346\\x03\\u1349\\x03\\u134A\\x03\\u134D\\x03\\u134F\\x03\\u1352\" +\r\n\t\t\"\\x03\\u1352\\x03\\u1359\\x03\\u1359\\x03\\u135F\\x03\\u1365\\x03\\u1368\\x03\\u136E\" +\r\n\t\t\"\\x03\\u1372\\x03\\u1376\\x03\\u1402\\x03\\u144C\\x03\\u1452\\x03\\u145B\\x03\\u1482\" +\r\n\t\t\"\\x03\\u14C7\\x03\\u14C9\\x03\\u14C9\\x03\\u14D2\\x03\\u14DB\\x03\\u1582\\x03\\u15B7\" +\r\n\t\t\"\\x03\\u15BA\\x03\\u15C2\\x03\\u15DA\\x03\\u15DF\\x03\\u1602\\x03\\u1642\\x03\\u1646\" +\r\n\t\t\"\\x03\\u1646\\x03\\u1652\\x03\\u165B\\x03\\u1682\\x03\\u16B9\\x03\\u16C2\\x03\\u16CB\" +\r\n\t\t\"\\x03\\u1702\\x03\\u171B\\x03\\u171F\\x03\\u172D\\x03\\u1732\\x03\\u173B\\x03\\u18A2\" +\r\n\t\t\"\\x03\\u18EB\\x03\\u1901\\x03\\u1901\\x03\\u1AC2\\x03\\u1AFA\\x03\\u1C02\\x03\\u1C0A\" +\r\n\t\t\"\\x03\\u1C0C\\x03\\u1C38\\x03\\u1C3A\\x03\\u1C42\\x03\\u1C52\\x03\\u1C5B\\x03\\u1C74\" +\r\n\t\t\"\\x03\\u1C91\\x03\\u1C94\\x03\\u1CA9\\x03\\u1CAB\\x03\\u1CB8\\x03\\u2002\\x03\\u239B\" +\r\n\t\t\"\\x03\\u2402\\x03\\u2470\\x03\\u2482\\x03\\u2545\\x03\\u3002\\x03\\u3430\\x03\\u4402\" +\r\n\t\t\"\\x03\\u4648\\x03\\u6802\\x03\\u6A3A\\x03\\u6A42\\x03\\u6A60\\x03\\u6A62\\x03\\u6A6B\" +\r\n\t\t\"\\x03\\u6AD2\\x03\\u6AEF\\x03\\u6AF2\\x03\\u6AF6\\x03\\u6B02\\x03\\u6B38\\x03\\u6B42\" +\r\n\t\t\"\\x03\\u6B45\\x03\\u6B52\\x03\\u6B5B\\x03\\u6B65\\x03\\u6B79\\x03\\u6B7F\\x03\\u6B91\" +\r\n\t\t\"\\x03\\u6F02\\x03\\u6F46\\x03\\u6F52\\x03\\u6F80\\x03\\u6F91\\x03\\u6FA1\\x03\\u6FE2\" +\r\n\t\t\"\\x03\\u6FE2\\x03\\u7002\\x03\\u87EE\\x03\\u8802\\x03\\u8AF4\\x03\\uB002\\x03\\uB003\" +\r\n\t\t\"\\x03\\uBC02\\x03\\uBC6C\\x03\\uBC72\\x03\\uBC7E\\x03\\uBC82\\x03\\uBC8A\\x03\\uBC92\" +\r\n\t\t\"\\x03\\uBC9B\\x03\\uBC9F\\x03\\uBCA0\\x03\\uBCA2\\x03\\uBCA5\\x03\\uD167\\x03\\uD16B\" +\r\n\t\t\"\\x03\\uD16F\\x03\\uD184\\x03\\uD187\\x03\\uD18D\\x03\\uD1AC\\x03\\uD1AF\\x03\\uD244\" +\r\n\t\t\"\\x03\\uD246\\x03\\uD402\\x03\\uD456\\x03\\uD458\\x03\\uD49E\\x03\\uD4A0\\x03\\uD4A1\" +\r\n\t\t\"\\x03\\uD4A4\\x03\\uD4A4\\x03\\uD4A7\\x03\\uD4A8\\x03\\uD4AB\\x03\\uD4AE\\x03\\uD4B0\" +\r\n\t\t\"\\x03\\uD4BB\\x03\\uD4BD\\x03\\uD4BD\\x03\\uD4BF\\x03\\uD4C5\\x03\\uD4C7\\x03\\uD507\" +\r\n\t\t\"\\x03\\uD509\\x03\\uD50C\\x03\\uD50F\\x03\\uD516\\x03\\uD518\\x03\\uD51E\\x03\\uD520\" +\r\n\t\t\"\\x03\\uD53B\\x03\\uD53D\\x03\\uD540\\x03\\uD542\\x03\\uD546\\x03\\uD548\\x03\\uD548\" +\r\n\t\t\"\\x03\\uD54C\\x03\\uD552\\x03\\uD554\\x03\\uD6A7\\x03\\uD6AA\\x03\\uD6C2\\x03\\uD6C4\" +\r\n\t\t\"\\x03\\uD6DC\\x03\\uD6DE\\x03\\uD6FC\\x03\\uD6FE\\x03\\uD716\\x03\\uD718\\x03\\uD736\" +\r\n\t\t\"\\x03\\uD738\\x03\\uD750\\x03\\uD752\\x03\\uD770\\x03\\uD772\\x03\\uD78A\\x03\\uD78C\" +\r\n\t\t\"\\x03\\uD7AA\\x03\\uD7AC\\x03\\uD7C4\\x03\\uD7C6\\x03\\uD7CD\\x03\\uD7D0\\x03\\uD801\" +\r\n\t\t\"\\x03\\uDA02\\x03\\uDA38\\x03\\uDA3D\\x03\\uDA6E\\x03\\uDA77\\x03\\uDA77\\x03\\uDA86\" +\r\n\t\t\"\\x03\\uDA86\\x03\\uDA9D\\x03\\uDAA1\\x03\\uDAA3\\x03\\uDAB1\\x03\\uE002\\x03\\uE008\" +\r\n\t\t\"\\x03\\uE00A\\x03\\uE01A\\x03\\uE01D\\x03\\uE023\\x03\\uE025\\x03\\uE026\\x03\\uE028\" +\r\n\t\t\"\\x03\\uE02C\\x03\\uE802\\x03\\uE8C6\\x03\\uE8D2\\x03\\uE8D8\\x03\\uE902\\x03\\uE94C\" +\r\n\t\t\"\\x03\\uE952\\x03\\uE95B\\x03\\uEE02\\x03\\uEE05\\x03\\uEE07\\x03\\uEE21\\x03\\uEE23\" +\r\n\t\t\"\\x03\\uEE24\\x03\\uEE26\\x03\\uEE26\\x03\\uEE29\\x03\\uEE29\\x03\\uEE2B\\x03\\uEE34\" +\r\n\t\t\"\\x03\\uEE36\\x03\\uEE39\\x03\\uEE3B\\x03\\uEE3B\\x03\\uEE3D\\x03\\uEE3D\\x03\\uEE44\" +\r\n\t\t\"\\x03\\uEE44\\x03\\uEE49\\x03\\uEE49\\x03\\uEE4B\\x03\\uEE4B\\x03\\uEE4D\\x03\\uEE4D\" +\r\n\t\t\"\\x03\\uEE4F\\x03\\uEE51\\x03\\uEE53\\x03\\uEE54\\x03\\uEE56\\x03\\uEE56\\x03\\uEE59\" +\r\n\t\t\"\\x03\\uEE59\\x03\\uEE5B\\x03\\uEE5B\\x03\\uEE5D\\x03\\uEE5D\\x03\\uEE5F\\x03\\uEE5F\" +\r\n\t\t\"\\x03\\uEE61\\x03\\uEE61\\x03\\uEE63\\x03\\uEE64\\x03\\uEE66\\x03\\uEE66\\x03\\uEE69\" +\r\n\t\t\"\\x03\\uEE6C\\x03\\uEE6E\\x03\\uEE74\\x03\\uEE76\\x03\\uEE79\\x03\\uEE7B\\x03\\uEE7E\" +\r\n\t\t\"\\x03\\uEE80\\x03\\uEE80\\x03\\uEE82\\x03\\uEE8B\\x03\\uEE8D\\x03\\uEE9D\\x03\\uEEA3\" +\r\n\t\t\"\\x03\\uEEA5\\x03\\uEEA7\\x03\\uEEAB\\x03\\uEEAD\\x03\\uEEBD\\x03\\x02\\x04\\uA6D8\\x04\" +\r\n\t\t\"\\uA702\\x04\\uB736\\x04\\uB742\\x04\\uB81F\\x04\\uB822\\x04\\uCEA3\\x04\\uF802\\x04\" +\r\n\t\t\"\\uFA1F\\x04\\x03\\x10\\x03\\x10\\\"\\x10\\x81\\x10\\u0102\\x10\\u01F1\\x10\\u0240\\x02\" +\r\n\t\t\"C\\x02\\\\\\x02c\\x02|\\x02\\xAC\\x02\\xAC\\x02\\xB7\\x02\\xB7\\x02\\xBC\\x02\\xBC\\x02\" +\r\n\t\t\"\\xC2\\x02\\xD8\\x02\\xDA\\x02\\xF8\\x02\\xFA\\x02\\u02C3\\x02\\u02C8\\x02\\u02D3\\x02\" +\r\n\t\t\"\\u02E2\\x02\\u02E6\\x02\\u02EE\\x02\\u02EE\\x02\\u02F0\\x02\\u02F0\\x02\\u0372\\x02\" +\r\n\t\t\"\\u0376\\x02\\u0378\\x02\\u0379\\x02\\u037C\\x02\\u037F\\x02\\u0381\\x02\\u0381\\x02\" +\r\n\t\t\"\\u0388\\x02\\u0388\\x02\\u038A\\x02\\u038C\\x02\\u038E\\x02\\u038E\\x02\\u0390\\x02\" +\r\n\t\t\"\\u03A3\\x02\\u03A5\\x02\\u03F7\\x02\\u03F9\\x02\\u0483\\x02\\u048C\\x02\\u0531\\x02\" +\r\n\t\t\"\\u0533\\x02\\u0558\\x02\\u055B\\x02\\u055B\\x02\\u0563\\x02\\u0589\\x02\\u05D2\\x02\" +\r\n\t\t\"\\u05EC\\x02\\u05F2\\x02\\u05F4\\x02\\u0622\\x02\\u064C\\x02\\u0670\\x02\\u0671\\x02\" +\r\n\t\t\"\\u0673\\x02\\u06D5\\x02\\u06D7\\x02\\u06D7\\x02\\u06E7\\x02\\u06E8\\x02\\u06F0\\x02\" +\r\n\t\t\"\\u06F1\\x02\\u06FC\\x02\\u06FE\\x02\\u0701\\x02\\u0701\\x02\\u0712\\x02\\u0712\\x02\" +\r\n\t\t\"\\u0714\\x02\\u0731\\x02\\u074F\\x02\\u07A7\\x02\\u07B3\\x02\\u07B3\\x02\\u07CC\\x02\" +\r\n\t\t\"\\u07EC\\x02\\u07F6\\x02\\u07F7\\x02\\u07FC\\x02\\u07FC\\x02\\u0802\\x02\\u0817\\x02\" +\r\n\t\t\"\\u081C\\x02\\u081C\\x02\\u0826\\x02\\u0826\\x02\\u082A\\x02\\u082A\\x02\\u0842\\x02\" +\r\n\t\t\"\\u085A\\x02\\u08A2\\x02\\u08B6\\x02\\u08B8\\x02\\u08BF\\x02\\u0906\\x02\\u093B\\x02\" +\r\n\t\t\"\\u093F\\x02\\u093F\\x02\\u0952\\x02\\u0952\\x02\\u095A\\x02\\u0963\\x02\\u0973\\x02\" +\r\n\t\t\"\\u0982\\x02\\u0987\\x02\\u098E\\x02\\u0991\\x02\\u0992\\x02\\u0995\\x02\\u09AA\\x02\" +\r\n\t\t\"\\u09AC\\x02\\u09B2\\x02\\u09B4\\x02\\u09B4\\x02\\u09B8\\x02\\u09BB\\x02\\u09BF\\x02\" +\r\n\t\t\"\\u09BF\\x02\\u09D0\\x02\\u09D0\\x02\\u09DE\\x02\\u09DF\\x02\\u09E1\\x02\\u09E3\\x02\" +\r\n\t\t\"\\u09F2\\x02\\u09F3\\x02\\u0A07\\x02\\u0A0C\\x02\\u0A11\\x02\\u0A12\\x02\\u0A15\\x02\" +\r\n\t\t\"\\u0A2A\\x02\\u0A2C\\x02\\u0A32\\x02\\u0A34\\x02\\u0A35\\x02\\u0A37\\x02\\u0A38\\x02\" +\r\n\t\t\"\\u0A3A\\x02\\u0A3B\\x02\\u0A5B\\x02\\u0A5E\\x02\\u0A60\\x02\\u0A60\\x02\\u0A74\\x02\" +\r\n\t\t\"\\u0A76\\x02\\u0A87\\x02\\u0A8F\\x02\\u0A91\\x02\\u0A93\\x02\\u0A95\\x02\\u0AAA\\x02\" +\r\n\t\t\"\\u0AAC\\x02\\u0AB2\\x02\\u0AB4\\x02\\u0AB5\\x02\\u0AB7\\x02\\u0ABB\\x02\\u0ABF\\x02\" +\r\n\t\t\"\\u0ABF\\x02\\u0AD2\\x02\\u0AD2\\x02\\u0AE2\\x02\\u0AE3\\x02\\u0AFB\\x02\\u0AFB\\x02\" +\r\n\t\t\"\\u0B07\\x02\\u0B0E\\x02\\u0B11\\x02\\u0B12\\x02\\u0B15\\x02\\u0B2A\\x02\\u0B2C\\x02\" +\r\n\t\t\"\\u0B32\\x02\\u0B34\\x02\\u0B35\\x02\\u0B37\\x02\\u0B3B\\x02\\u0B3F\\x02\\u0B3F\\x02\" +\r\n\t\t\"\\u0B5E\\x02\\u0B5F\\x02\\u0B61\\x02\\u0B63\\x02\\u0B73\\x02\\u0B73\\x02\\u0B85\\x02\" +\r\n\t\t\"\\u0B85\\x02\\u0B87\\x02\\u0B8C\\x02\\u0B90\\x02\\u0B92\\x02\\u0B94\\x02\\u0B97\\x02\" +\r\n\t\t\"\\u0B9B\\x02\\u0B9C\\x02\\u0B9E\\x02\\u0B9E\\x02\\u0BA0\\x02\\u0BA1\\x02\\u0BA5\\x02\" +\r\n\t\t\"\\u0BA6\\x02\\u0BAA\\x02\\u0BAC\\x02\\u0BB0\\x02\\u0BBB\\x02\\u0BD2\\x02\\u0BD2\\x02\" +\r\n\t\t\"\\u0C07\\x02\\u0C0E\\x02\\u0C10\\x02\\u0C12\\x02\\u0C14\\x02\\u0C2A\\x02\\u0C2C\\x02\" +\r\n\t\t\"\\u0C3B\\x02\\u0C3F\\x02\\u0C3F\\x02\\u0C5A\\x02\\u0C5C\\x02\\u0C62\\x02\\u0C63\\x02\" +\r\n\t\t\"\\u0C82\\x02\\u0C82\\x02\\u0C87\\x02\\u0C8E\\x02\\u0C90\\x02\\u0C92\\x02\\u0C94\\x02\" +\r\n\t\t\"\\u0CAA\\x02\\u0CAC\\x02\\u0CB5\\x02\\u0CB7\\x02\\u0CBB\\x02\\u0CBF\\x02\\u0CBF\\x02\" +\r\n\t\t\"\\u0CE0\\x02\\u0CE0\\x02\\u0CE2\\x02\\u0CE3\\x02\\u0CF3\\x02\\u0CF4\\x02\\u0D07\\x02\" +\r\n\t\t\"\\u0D0E\\x02\\u0D10\\x02\\u0D12\\x02\\u0D14\\x02\\u0D3C\\x02\\u0D3F\\x02\\u0D3F\\x02\" +\r\n\t\t\"\\u0D50\\x02\\u0D50\\x02\\u0D56\\x02\\u0D58\\x02\\u0D61\\x02\\u0D63\\x02\\u0D7C\\x02\" +\r\n\t\t\"\\u0D81\\x02\\u0D87\\x02\\u0D98\\x02\\u0D9C\\x02\\u0DB3\\x02\\u0DB5\\x02\\u0DBD\\x02\" +\r\n\t\t\"\\u0DBF\\x02\\u0DBF\\x02\\u0DC2\\x02\\u0DC8\\x02\\u0E03\\x02\\u0E32\\x02\\u0E34\\x02\" +\r\n\t\t\"\\u0E35\\x02\\u0E42\\x02\\u0E48\\x02\\u0E83\\x02\\u0E84\\x02\\u0E86\\x02\\u0E86\\x02\" +\r\n\t\t\"\\u0E89\\x02\\u0E8A\\x02\\u0E8C\\x02\\u0E8C\\x02\\u0E8F\\x02\\u0E8F\\x02\\u0E96\\x02\" +\r\n\t\t\"\\u0E99\\x02\\u0E9B\\x02\\u0EA1\\x02\\u0EA3\\x02\\u0EA5\\x02\\u0EA7\\x02\\u0EA7\\x02\" +\r\n\t\t\"\\u0EA9\\x02\\u0EA9\\x02\\u0EAC\\x02\\u0EAD\\x02\\u0EAF\\x02\\u0EB2\\x02\\u0EB4\\x02\" +\r\n\t\t\"\\u0EB5\\x02\\u0EBF\\x02\\u0EBF\\x02\\u0EC2\\x02\\u0EC6\\x02\\u0EC8\\x02\\u0EC8\\x02\" +\r\n\t\t\"\\u0EDE\\x02\\u0EE1\\x02\\u0F02\\x02\\u0F02\\x02\\u0F42\\x02\\u0F49\\x02\\u0F4B\\x02\" +\r\n\t\t\"\\u0F6E\\x02\\u0F8A\\x02\\u0F8E\\x02\\u1002\\x02\\u102C\\x02\\u1041\\x02\\u1041\\x02\" +\r\n\t\t\"\\u1052\\x02\\u1057\\x02\\u105C\\x02\\u105F\\x02\\u1063\\x02\\u1063\\x02\\u1067\\x02\" +\r\n\t\t\"\\u1068\\x02\\u1070\\x02\\u1072\\x02\\u1077\\x02\\u1083\\x02\\u1090\\x02\\u1090\\x02\" +\r\n\t\t\"\\u10A2\\x02\\u10C7\\x02\\u10C9\\x02\\u10C9\\x02\\u10CF\\x02\\u10CF\\x02\\u10D2\\x02\" +\r\n\t\t\"\\u10FC\\x02\\u10FE\\x02\\u124A\\x02\\u124C\\x02\\u124F\\x02\\u1252\\x02\\u1258\\x02\" +\r\n\t\t\"\\u125A\\x02\\u125A\\x02\\u125C\\x02\\u125F\\x02\\u1262\\x02\\u128A\\x02\\u128C\\x02\" +\r\n\t\t\"\\u128F\\x02\\u1292\\x02\\u12B2\\x02\\u12B4\\x02\\u12B7\\x02\\u12BA\\x02\\u12C0\\x02\" +\r\n\t\t\"\\u12C2\\x02\\u12C2\\x02\\u12C4\\x02\\u12C7\\x02\\u12CA\\x02\\u12D8\\x02\\u12DA\\x02\" +\r\n\t\t\"\\u1312\\x02\\u1314\\x02\\u1317\\x02\\u131A\\x02\\u135C\\x02\\u1382\\x02\\u1391\\x02\" +\r\n\t\t\"\\u13A2\\x02\\u13F7\\x02\\u13FA\\x02\\u13FF\\x02\\u1403\\x02\\u166E\\x02\\u1671\\x02\" +\r\n\t\t\"\\u1681\\x02\\u1683\\x02\\u169C\\x02\\u16A2\\x02\\u16EC\\x02\\u16F0\\x02\\u16FA\\x02\" +\r\n\t\t\"\\u1702\\x02\\u170E\\x02\\u1710\\x02\\u1713\\x02\\u1722\\x02\\u1733\\x02\\u1742\\x02\" +\r\n\t\t\"\\u1753\\x02\\u1762\\x02\\u176E\\x02\\u1770\\x02\\u1772\\x02\\u1782\\x02\\u17B5\\x02\" +\r\n\t\t\"\\u17D9\\x02\\u17D9\\x02\\u17DE\\x02\\u17DE\\x02\\u1822\\x02\\u1879\\x02\\u1882\\x02\" +\r\n\t\t\"\\u1886\\x02\\u1889\\x02\\u18AA\\x02\\u18AC\\x02\\u18AC\\x02\\u18B2\\x02\\u18F7\\x02\" +\r\n\t\t\"\\u1902\\x02\\u1920\\x02\\u1952\\x02\\u196F\\x02\\u1972\\x02\\u1976\\x02\\u1982\\x02\" +\r\n\t\t\"\\u19AD\\x02\\u19B2\\x02\\u19CB\\x02\\u1A02\\x02\\u1A18\\x02\\u1A22\\x02\\u1A56\\x02\" +\r\n\t\t\"\\u1AA9\\x02\\u1AA9\\x02\\u1B07\\x02\\u1B35\\x02\\u1B47\\x02\\u1B4D\\x02\\u1B85\\x02\" +\r\n\t\t\"\\u1BA2\\x02\\u1BB0\\x02\\u1BB1\\x02\\u1BBC\\x02\\u1BE7\\x02\\u1C02\\x02\\u1C25\\x02\" +\r\n\t\t\"\\u1C4F\\x02\\u1C51\\x02\\u1C5C\\x02\\u1C7F\\x02\\u1C82\\x02\\u1C8A\\x02\\u1CEB\\x02\" +\r\n\t\t\"\\u1CEE\\x02\\u1CF0\\x02\\u1CF3\\x02\\u1CF7\\x02\\u1CF8\\x02\\u1D02\\x02\\u1DC1\\x02\" +\r\n\t\t\"\\u1E02\\x02\\u1F17\\x02\\u1F1A\\x02\\u1F1F\\x02\\u1F22\\x02\\u1F47\\x02\\u1F4A\\x02\" +\r\n\t\t\"\\u1F4F\\x02\\u1F52\\x02\\u1F59\\x02\\u1F5B\\x02\\u1F5B\\x02\\u1F5D\\x02\\u1F5D\\x02\" +\r\n\t\t\"\\u1F5F\\x02\\u1F5F\\x02\\u1F61\\x02\\u1F7F\\x02\\u1F82\\x02\\u1FB6\\x02\\u1FB8\\x02\" +\r\n\t\t\"\\u1FBE\\x02\\u1FC0\\x02\\u1FC0\\x02\\u1FC4\\x02\\u1FC6\\x02\\u1FC8\\x02\\u1FCE\\x02\" +\r\n\t\t\"\\u1FD2\\x02\\u1FD5\\x02\\u1FD8\\x02\\u1FDD\\x02\\u1FE2\\x02\\u1FEE\\x02\\u1FF4\\x02\" +\r\n\t\t\"\\u1FF6\\x02\\u1FF8\\x02\\u1FFE\\x02\\u2073\\x02\\u2073\\x02\\u2081\\x02\\u2081\\x02\" +\r\n\t\t\"\\u2092\\x02\\u209E\\x02\\u2104\\x02\\u2104\\x02\\u2109\\x02\\u2109\\x02\\u210C\\x02\" +\r\n\t\t\"\\u2115\\x02\\u2117\\x02\\u2117\\x02\\u211B\\x02\\u211F\\x02\\u2126\\x02\\u2126\\x02\" +\r\n\t\t\"\\u2128\\x02\\u2128\\x02\\u212A\\x02\\u212A\\x02\\u212C\\x02\\u212F\\x02\\u2131\\x02\" +\r\n\t\t\"\\u213B\\x02\\u213E\\x02\\u2141\\x02\\u2147\\x02\\u214B\\x02\\u2150\\x02\\u2150\\x02\" +\r\n\t\t\"\\u2162\\x02\\u218A\\x02\\u2C02\\x02\\u2C30\\x02\\u2C32\\x02\\u2C60\\x02\\u2C62\\x02\" +\r\n\t\t\"\\u2CE6\\x02\\u2CED\\x02\\u2CF0\\x02\\u2CF4\\x02\\u2CF5\\x02\\u2D02\\x02\\u2D27\\x02\" +\r\n\t\t\"\\u2D29\\x02\\u2D29\\x02\\u2D2F\\x02\\u2D2F\\x02\\u2D32\\x02\\u2D69\\x02\\u2D71\\x02\" +\r\n\t\t\"\\u2D71\\x02\\u2D82\\x02\\u2D98\\x02\\u2DA2\\x02\\u2DA8\\x02\\u2DAA\\x02\\u2DB0\\x02\" +\r\n\t\t\"\\u2DB2\\x02\\u2DB8\\x02\\u2DBA\\x02\\u2DC0\\x02\\u2DC2\\x02\\u2DC8\\x02\\u2DCA\\x02\" +\r\n\t\t\"\\u2DD0\\x02\\u2DD2\\x02\\u2DD8\\x02\\u2DDA\\x02\\u2DE0\\x02\\u2E31\\x02\\u2E31\\x02\" +\r\n\t\t\"\\u3007\\x02\\u3009\\x02\\u3023\\x02\\u302B\\x02\\u3033\\x02\\u3037\\x02\\u303A\\x02\" +\r\n\t\t\"\\u303E\\x02\\u3043\\x02\\u3098\\x02\\u309F\\x02\\u30A1\\x02\\u30A3\\x02\\u30FC\\x02\" +\r\n\t\t\"\\u30FE\\x02\\u3101\\x02\\u3107\\x02\\u312F\\x02\\u3133\\x02\\u3190\\x02\\u31A2\\x02\" +\r\n\t\t\"\\u31BC\\x02\\u31F2\\x02\\u3201\\x02\\u3402\\x02\\u4DB7\\x02\\u4E02\\x02\\u9FD7\\x02\" +\r\n\t\t\"\\uA002\\x02\\uA48E\\x02\\uA4D2\\x02\\uA4FF\\x02\\uA502\\x02\\uA60E\\x02\\uA612\\x02\" +\r\n\t\t\"\\uA621\\x02\\uA62C\\x02\\uA62D\\x02\\uA642\\x02\\uA670\\x02\\uA681\\x02\\uA69F\\x02\" +\r\n\t\t\"\\uA6A2\\x02\\uA6F1\\x02\\uA719\\x02\\uA721\\x02\\uA724\\x02\\uA78A\\x02\\uA78D\\x02\" +\r\n\t\t\"\\uA7B0\\x02\\uA7B2\\x02\\uA7B9\\x02\\uA7F9\\x02\\uA803\\x02\\uA805\\x02\\uA807\\x02\" +\r\n\t\t\"\\uA809\\x02\\uA80C\\x02\\uA80E\\x02\\uA824\\x02\\uA842\\x02\\uA875\\x02\\uA884\\x02\" +\r\n\t\t\"\\uA8B5\\x02\\uA8F4\\x02\\uA8F9\\x02\\uA8FD\\x02\\uA8FD\\x02\\uA8FF\\x02\\uA8FF\\x02\" +\r\n\t\t\"\\uA90C\\x02\\uA927\\x02\\uA932\\x02\\uA948\\x02\\uA962\\x02\\uA97E\\x02\\uA986\\x02\" +\r\n\t\t\"\\uA9B4\\x02\\uA9D1\\x02\\uA9D1\\x02\\uA9E2\\x02\\uA9E6\\x02\\uA9E8\\x02\\uA9F1\\x02\" +\r\n\t\t\"\\uA9FC\\x02\\uAA00\\x02\\uAA02\\x02\\uAA2A\\x02\\uAA42\\x02\\uAA44\\x02\\uAA46\\x02\" +\r\n\t\t\"\\uAA4D\\x02\\uAA62\\x02\\uAA78\\x02\\uAA7C\\x02\\uAA7C\\x02\\uAA80\\x02\\uAAB1\\x02\" +\r\n\t\t\"\\uAAB3\\x02\\uAAB3\\x02\\uAAB7\\x02\\uAAB8\\x02\\uAABB\\x02\\uAABF\\x02\\uAAC2\\x02\" +\r\n\t\t\"\\uAAC2\\x02\\uAAC4\\x02\\uAAC4\\x02\\uAADD\\x02\\uAADF\\x02\\uAAE2\\x02\\uAAEC\\x02\" +\r\n\t\t\"\\uAAF4\\x02\\uAAF6\\x02\\uAB03\\x02\\uAB08\\x02\\uAB0B\\x02\\uAB10\\x02\\uAB13\\x02\" +\r\n\t\t\"\\uAB18\\x02\\uAB22\\x02\\uAB28\\x02\\uAB2A\\x02\\uAB30\\x02\\uAB32\\x02\\uAB5C\\x02\" +\r\n\t\t\"\\uAB5E\\x02\\uAB67\\x02\\uAB72\\x02\\uABE4\\x02\\uAC02\\x02\\uD7A5\\x02\\uD7B2\\x02\" +\r\n\t\t\"\\uD7C8\\x02\\uD7CD\\x02\\uD7FD\\x02\\uF902\\x02\\uFA6F\\x02\\uFA72\\x02\\uFADB\\x02\" +\r\n\t\t\"\\uFB02\\x02\\uFB08\\x02\\uFB15\\x02\\uFB19\\x02\\uFB1F\\x02\\uFB1F\\x02\\uFB21\\x02\" +\r\n\t\t\"\\uFB2A\\x02\\uFB2C\\x02\\uFB38\\x02\\uFB3A\\x02\\uFB3E\\x02\\uFB40\\x02\\uFB40\\x02\" +\r\n\t\t\"\\uFB42\\x02\\uFB43\\x02\\uFB45\\x02\\uFB46\\x02\\uFB48\\x02\\uFBB3\\x02\\uFBD5\\x02\" +\r\n\t\t\"\\uFD3F\\x02\\uFD52\\x02\\uFD91\\x02\\uFD94\\x02\\uFDC9\\x02\\uFDF2\\x02\\uFDFD\\x02\" +\r\n\t\t\"\\uFE72\\x02\\uFE76\\x02\\uFE78\\x02\\uFEFE\\x02\\uFF23\\x02\\uFF3C\\x02\\uFF43\\x02\" +\r\n\t\t\"\\uFF5C\\x02\\uFF68\\x02\\uFFC0\\x02\\uFFC4\\x02\\uFFC9\\x02\\uFFCC\\x02\\uFFD1\\x02\" +\r\n\t\t\"\\uFFD4\\x02\\uFFD9\\x02\\uFFDC\\x02\\uFFDE\\x02\\x02\\x03\\r\\x03\\x0F\\x03(\\x03*\\x03\" +\r\n\t\t\"<\\x03>\\x03?\\x03A\\x03O\\x03R\\x03_\\x03\\x82\\x03\\xFC\\x03\\u0142\\x03\\u0176\\x03\" +\r\n\t\t\"\\u0282\\x03\\u029E\\x03\\u02A2\\x03\\u02D2\\x03\\u0302\\x03\\u0321\\x03\\u0332\\x03\" +\r\n\t\t\"\\u034C\\x03\\u0352\\x03\\u0377\\x03\\u0382\\x03\\u039F\\x03\\u03A2\\x03\\u03C5\\x03\" +\r\n\t\t\"\\u03CA\\x03\\u03D1\\x03\\u03D3\\x03\\u03D7\\x03\\u0402\\x03\\u049F\\x03\\u04B2\\x03\" +\r\n\t\t\"\\u04D5\\x03\\u04DA\\x03\\u04FD\\x03\\u0502\\x03\\u0529\\x03\\u0532\\x03\\u0565\\x03\" +\r\n\t\t\"\\u0602\\x03\\u0738\\x03\\u0742\\x03\\u0757\\x03\\u0762\\x03\\u0769\\x03\\u0802\\x03\" +\r\n\t\t\"\\u0807\\x03\\u080A\\x03\\u080A\\x03\\u080C\\x03\\u0837\\x03\\u0839\\x03\\u083A\\x03\" +\r\n\t\t\"\\u083E\\x03\\u083E\\x03\\u0841\\x03\\u0857\\x03\\u0862\\x03\\u0878\\x03\\u0882\\x03\" +\r\n\t\t\"\\u08A0\\x03\\u08E2\\x03\\u08F4\\x03\\u08F6\\x03\\u08F7\\x03\\u0902\\x03\\u0917\\x03\" +\r\n\t\t\"\\u0922\\x03\\u093B\\x03\\u0982\\x03\\u09B9\\x03\\u09C0\\x03\\u09C1\\x03\\u0A02\\x03\" +\r\n\t\t\"\\u0A02\\x03\\u0A12\\x03\\u0A15\\x03\\u0A17\\x03\\u0A19\\x03\\u0A1B\\x03\\u0A35\\x03\" +\r\n\t\t\"\\u0A62\\x03\\u0A7E\\x03\\u0A82\\x03\\u0A9E\\x03\\u0AC2\\x03\\u0AC9\\x03\\u0ACB\\x03\" +\r\n\t\t\"\\u0AE6\\x03\\u0B02\\x03\\u0B37\\x03\\u0B42\\x03\\u0B57\\x03\\u0B62\\x03\\u0B74\\x03\" +\r\n\t\t\"\\u0B82\\x03\\u0B93\\x03\\u0C02\\x03\\u0C4A\\x03\\u0C82\\x03\\u0CB4\\x03\\u0CC2\\x03\" +\r\n\t\t\"\\u0CF4\\x03\\u1005\\x03\\u1039\\x03\\u1085\\x03\\u10B1\\x03\\u10D2\\x03\\u10EA\\x03\" +\r\n\t\t\"\\u1105\\x03\\u1128\\x03\\u1152\\x03\\u1174\\x03\\u1178\\x03\\u1178\\x03\\u1185\\x03\" +\r\n\t\t\"\\u11B4\\x03\\u11C3\\x03\\u11C6\\x03\\u11DC\\x03\\u11DC\\x03\\u11DE\\x03\\u11DE\\x03\" +\r\n\t\t\"\\u1202\\x03\\u1213\\x03\\u1215\\x03\\u122D\\x03\\u1282\\x03\\u1288\\x03\\u128A\\x03\" +\r\n\t\t\"\\u128A\\x03\\u128C\\x03\\u128F\\x03\\u1291\\x03\\u129F\\x03\\u12A1\\x03\\u12AA\\x03\" +\r\n\t\t\"\\u12B2\\x03\\u12E0\\x03\\u1307\\x03\\u130E\\x03\\u1311\\x03\\u1312\\x03\\u1315\\x03\" +\r\n\t\t\"\\u132A\\x03\\u132C\\x03\\u1332\\x03\\u1334\\x03\\u1335\\x03\\u1337\\x03\\u133B\\x03\" +\r\n\t\t\"\\u133F\\x03\\u133F\\x03\\u1352\\x03\\u1352\\x03\\u135F\\x03\\u1363\\x03\\u1402\\x03\" +\r\n\t\t\"\\u1436\\x03\\u1449\\x03\\u144C\\x03\\u1482\\x03\\u14B1\\x03\\u14C6\\x03\\u14C7\\x03\" +\r\n\t\t\"\\u14C9\\x03\\u14C9\\x03\\u1582\\x03\\u15B0\\x03\\u15DA\\x03\\u15DD\\x03\\u1602\\x03\" +\r\n\t\t\"\\u1631\\x03\\u1646\\x03\\u1646\\x03\\u1682\\x03\\u16AC\\x03\\u1702\\x03\\u171B\\x03\" +\r\n\t\t\"\\u18A2\\x03\\u18E1\\x03\\u1901\\x03\\u1901\\x03\\u1AC2\\x03\\u1AFA\\x03\\u1C02\\x03\" +\r\n\t\t\"\\u1C0A\\x03\\u1C0C\\x03\\u1C30\\x03\\u1C42\\x03\\u1C42\\x03\\u1C74\\x03\\u1C91\\x03\" +\r\n\t\t\"\\u2002\\x03\\u239B\\x03\\u2402\\x03\\u2470\\x03\\u2482\\x03\\u2545\\x03\\u3002\\x03\" +\r\n\t\t\"\\u3430\\x03\\u4402\\x03\\u4648\\x03\\u6802\\x03\\u6A3A\\x03\\u6A42\\x03\\u6A60\\x03\" +\r\n\t\t\"\\u6AD2\\x03\\u6AEF\\x03\\u6B02\\x03\\u6B31\\x03\\u6B42\\x03\\u6B45\\x03\\u6B65\\x03\" +\r\n\t\t\"\\u6B79\\x03\\u6B7F\\x03\\u6B91\\x03\\u6F02\\x03\\u6F46\\x03\\u6F52\\x03\\u6F52\\x03\" +\r\n\t\t\"\\u6F95\\x03\\u6FA1\\x03\\u6FE2\\x03\\u6FE2\\x03\\u7002\\x03\\u87EE\\x03\\u8802\\x03\" +\r\n\t\t\"\\u8AF4\\x03\\uB002\\x03\\uB003\\x03\\uBC02\\x03\\uBC6C\\x03\\uBC72\\x03\\uBC7E\\x03\" +\r\n\t\t\"\\uBC82\\x03\\uBC8A\\x03\\uBC92\\x03\\uBC9B\\x03\\uD402\\x03\\uD456\\x03\\uD458\\x03\" +\r\n\t\t\"\\uD49E\\x03\\uD4A0\\x03\\uD4A1\\x03\\uD4A4\\x03\\uD4A4\\x03\\uD4A7\\x03\\uD4A8\\x03\" +\r\n\t\t\"\\uD4AB\\x03\\uD4AE\\x03\\uD4B0\\x03\\uD4BB\\x03\\uD4BD\\x03\\uD4BD\\x03\\uD4BF\\x03\" +\r\n\t\t\"\\uD4C5\\x03\\uD4C7\\x03\\uD507\\x03\\uD509\\x03\\uD50C\\x03\\uD50F\\x03\\uD516\\x03\" +\r\n\t\t\"\\uD518\\x03\\uD51E\\x03\\uD520\\x03\\uD53B\\x03\\uD53D\\x03\\uD540\\x03\\uD542\\x03\" +\r\n\t\t\"\\uD546\\x03\\uD548\\x03\\uD548\";\r\n\tprivate static readonly _serializedATNSegment1: string =\r\n\t\t\"\\x03\\uD54C\\x03\\uD552\\x03\\uD554\\x03\\uD6A7\\x03\\uD6AA\\x03\\uD6C2\\x03\\uD6C4\" +\r\n\t\t\"\\x03\\uD6DC\\x03\\uD6DE\\x03\\uD6FC\\x03\\uD6FE\\x03\\uD716\\x03\\uD718\\x03\\uD736\" +\r\n\t\t\"\\x03\\uD738\\x03\\uD750\\x03\\uD752\\x03\\uD770\\x03\\uD772\\x03\\uD78A\\x03\\uD78C\" +\r\n\t\t\"\\x03\\uD7AA\\x03\\uD7AC\\x03\\uD7C4\\x03\\uD7C6\\x03\\uD7CD\\x03\\uE802\\x03\\uE8C6\" +\r\n\t\t\"\\x03\\uE902\\x03\\uE945\\x03\\uEE02\\x03\\uEE05\\x03\\uEE07\\x03\\uEE21\\x03\\uEE23\" +\r\n\t\t\"\\x03\\uEE24\\x03\\uEE26\\x03\\uEE26\\x03\\uEE29\\x03\\uEE29\\x03\\uEE2B\\x03\\uEE34\" +\r\n\t\t\"\\x03\\uEE36\\x03\\uEE39\\x03\\uEE3B\\x03\\uEE3B\\x03\\uEE3D\\x03\\uEE3D\\x03\\uEE44\" +\r\n\t\t\"\\x03\\uEE44\\x03\\uEE49\\x03\\uEE49\\x03\\uEE4B\\x03\\uEE4B\\x03\\uEE4D\\x03\\uEE4D\" +\r\n\t\t\"\\x03\\uEE4F\\x03\\uEE51\\x03\\uEE53\\x03\\uEE54\\x03\\uEE56\\x03\\uEE56\\x03\\uEE59\" +\r\n\t\t\"\\x03\\uEE59\\x03\\uEE5B\\x03\\uEE5B\\x03\\uEE5D\\x03\\uEE5D\\x03\\uEE5F\\x03\\uEE5F\" +\r\n\t\t\"\\x03\\uEE61\\x03\\uEE61\\x03\\uEE63\\x03\\uEE64\\x03\\uEE66\\x03\\uEE66\\x03\\uEE69\" +\r\n\t\t\"\\x03\\uEE6C\\x03\\uEE6E\\x03\\uEE74\\x03\\uEE76\\x03\\uEE79\\x03\\uEE7B\\x03\\uEE7E\" +\r\n\t\t\"\\x03\\uEE80\\x03\\uEE80\\x03\\uEE82\\x03\\uEE8B\\x03\\uEE8D\\x03\\uEE9D\\x03\\uEEA3\" +\r\n\t\t\"\\x03\\uEEA5\\x03\\uEEA7\\x03\\uEEAB\\x03\\uEEAD\\x03\\uEEBD\\x03\\x02\\x04\\uA6D8\\x04\" +\r\n\t\t\"\\uA702\\x04\\uB736\\x04\\uB742\\x04\\uB81F\\x04\\uB822\\x04\\uCEA3\\x04\\uF802\\x04\" +\r\n\t\t\"\\uFA1F\\x041\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\\x02\\x02\\x07\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x03\\x13\\x03\\x02\\x02\\x02\\x05\\x16\\x03\\x02\\x02\\x02\\x07\\x18\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\t\\x1A\\x03\\x02\\x02\\x02\\v\\x1C\\x03\\x02\\x02\\x02\\r%\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\x0F\\'\\x03\\x02\\x02\\x02\\x11)\\x03\\x02\\x02\\x02\\x13\\x14\\x071\\x02\\x02\\x14\\x15\" +\r\n\t\t\"\\x071\\x02\\x02\\x15\\x04\\x03\\x02\\x02\\x02\\x16\\x17\\x071\\x02\\x02\\x17\\x06\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x18\\x19\\x07,\\x02\\x02\\x19\\b\\x03\\x02\\x02\\x02\\x1A\\x1B\\x07#\\x02\" +\r\n\t\t\"\\x02\\x1B\\n\\x03\\x02\\x02\\x02\\x1C \\x05\\x0F\\b\\x02\\x1D\\x1F\\x05\\r\\x07\\x02\\x1E\" +\r\n\t\t\"\\x1D\\x03\\x02\\x02\\x02\\x1F\\\"\\x03\\x02\\x02\\x02 \\x1E\\x03\\x02\\x02\\x02 !\\x03\" +\r\n\t\t\"\\x02\\x02\\x02!#\\x03\\x02\\x02\\x02\\\" \\x03\\x02\\x02\\x02#$\\b\\x06\\x02\\x02$\\f\\x03\" +\r\n\t\t\"\\x02\\x02\\x02%&\\t\\x02\\x02\\x02&\\x0E\\x03\\x02\\x02\\x02\\'(\\t\\x03\\x02\\x02(\\x10\" +\r\n\t\t\"\\x03\\x02\\x02\\x02)-\\x07)\\x02\\x02*,\\v\\x02\\x02\\x02+*\\x03\\x02\\x02\\x02,/\\x03\" +\r\n\t\t\"\\x02\\x02\\x02-.\\x03\\x02\\x02\\x02-+\\x03\\x02\\x02\\x02.0\\x03\\x02\\x02\\x02/-\\x03\" +\r\n\t\t\"\\x02\\x02\\x0201\\x07)\\x02\\x021\\x12\\x03\\x02\\x02\\x02\\x05\\x02 -\\x03\\x03\\x06\" +\r\n\t\t\"\\x02\";\r\n\tpublic static readonly _serializedATN: string = Utils.join(\r\n\t\t[\r\n\t\t\tXPathLexer._serializedATNSegment0,\r\n\t\t\tXPathLexer._serializedATNSegment1,\r\n\t\t],\r\n\t\t\"\",\r\n\t);\r\n\tpublic static __ATN: ATN;\r\n\tpublic static get _ATN(): ATN {\r\n\t\tif (!XPathLexer.__ATN) {\r\n\t\t\tXPathLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XPathLexer._serializedATN));\r\n\t\t}\r\n\r\n\t\treturn XPathLexer.__ATN;\r\n\t}\r\n\r\n}\r\n\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\n\r\nimport { ANTLRErrorListener } from \"../../ANTLRErrorListener\";\r\nimport { Override } from \"../../Decorators\";\r\nimport { Recognizer } from \"../../Recognizer\";\r\nimport { RecognitionException } from \"../../RecognitionException\";\r\n\r\nexport class XPathLexerErrorListener implements ANTLRErrorListener<number> {\r\n\t@Override\r\n\tpublic syntaxError<T extends number>(\r\n\t\trecognizer: Recognizer<T, any>, offendingSymbol: T | undefined,\r\n\t\tline: number, charPositionInLine: number, msg: string,\r\n\t\te: RecognitionException | undefined): void {\r\n\t\t// intentionally empty\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { ParserRuleContext } from \"../../ParserRuleContext\";\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\n/**\r\n * Either `ID` at start of path or `...//ID` in middle of path.\r\n */\r\nexport class XPathRuleAnywhereElement extends XPathElement {\r\n\tprotected ruleIndex: number;\r\n\tconstructor(ruleName: string, ruleIndex: number) {\r\n\t\tsuper(ruleName);\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\treturn Trees.findAllRuleNodes(t, this.ruleIndex);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { ParserRuleContext } from \"../../ParserRuleContext\";\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\nexport class XPathRuleElement extends XPathElement {\r\n\tprotected ruleIndex: number;\r\n\tconstructor(ruleName: string, ruleIndex: number) {\r\n\t\tsuper(ruleName);\r\n\t\tthis.ruleIndex = ruleIndex;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\t// return all children of t that match nodeName\r\n\t\tlet nodes: ParseTree[] = [];\r\n\t\tfor (let c of Trees.getChildren(t)) {\r\n\t\t\tif (c instanceof ParserRuleContext) {\r\n\t\t\t\tif ((c.ruleIndex === this.ruleIndex && !this.invert) ||\r\n\t\t\t\t\t(c.ruleIndex !== this.ruleIndex && this.invert)) {\r\n\t\t\t\t\tnodes.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\nexport class XPathTokenAnywhereElement extends XPathElement {\r\n\tprotected tokenType: number;\r\n\tconstructor(tokenName: string, tokenType: number) {\r\n\t\tsuper(tokenName);\r\n\t\tthis.tokenType = tokenType;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\treturn Trees.findAllTokenNodes(t, this.tokenType);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { TerminalNode } from \"../TerminalNode\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\nexport class XPathTokenElement extends XPathElement {\r\n\tprotected tokenType: number;\r\n\tconstructor(tokenName: string, tokenType: number) {\r\n\t\tsuper(tokenName);\r\n\t\tthis.tokenType = tokenType;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\t// return all children of t that match nodeName\r\n\t\tlet nodes: ParseTree[] = [];\r\n\t\tfor (let c of Trees.getChildren(t)) {\r\n\t\t\tif (c instanceof TerminalNode) {\r\n\t\t\t\tif ((c.symbol.type === this.tokenType && !this.invert) ||\r\n\t\t\t\t\t(c.symbol.type !== this.tokenType && this.invert)) {\r\n\t\t\t\t\tnodes.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { TerminalNode } from \"../TerminalNode\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPath } from \"./XPath\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\nexport class XPathWildcardAnywhereElement extends XPathElement {\r\n\tconstructor() {\r\n\t\tsuper(XPath.WILDCARD);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\tif (this.invert) {\r\n\t\t\t// !* is weird but valid (empty)\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn Trees.getDescendants(t);\r\n\t}\r\n}\r\n","/*!\r\n * Copyright 2016 The ANTLR Project. All rights reserved.\r\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\r\n */\r\n\r\n// CONVERSTION complete, Burt Harris 10/14/2016\r\nimport { Override } from \"../../Decorators\";\r\nimport { ParseTree } from \"../ParseTree\";\r\nimport { TerminalNode } from \"../TerminalNode\";\r\nimport { Trees } from \"../Trees\";\r\nimport { XPath } from \"./XPath\";\r\nimport { XPathElement } from \"./XPathElement\";\r\n\r\nexport class XPathWildcardElement extends XPathElement {\r\n\tconstructor() {\r\n\t\tsuper(XPath.WILDCARD);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic evaluate(t: ParseTree): ParseTree[] {\r\n\t\tlet kids: ParseTree[] = [];\r\n\t\tif (this.invert) {\r\n\t\t\t// !* is weird but valid (empty)\r\n\t\t\treturn kids;\r\n\t\t}\r\n\t\tfor (let c of Trees.getChildren(t)) {\r\n\t\t\tkids.push(c);\r\n\t\t}\r\n\t\treturn kids;\r\n\t}\r\n}\r\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/* @flow */\n/* global global */\n\nimport * as React from 'react';\n\ntype Props = React.ElementConfig<'div'> & {\n  // Props for the component\n  value: string,\n  onValueChange: (value: string) => mixed,\n  highlight: (value: string) => string | React.Node,\n  tabSize: number,\n  insertSpaces: boolean,\n  ignoreTabKey: boolean,\n  padding: number | string,\n  style?: {},\n\n  // Props for the textarea\n  textareaId?: string,\n  textareaClassName?: string,\n  autoFocus?: boolean,\n  disabled?: boolean,\n  form?: string,\n  maxLength?: number,\n  minLength?: number,\n  name?: string,\n  placeholder?: string,\n  readOnly?: boolean,\n  required?: boolean,\n  onClick?: (e: MouseEvent) => mixed,\n  onFocus?: (e: FocusEvent) => mixed,\n  onBlur?: (e: FocusEvent) => mixed,\n  onKeyUp?: (e: KeyboardEvent) => mixed,\n  onKeyDown?: (e: KeyboardEvent) => mixed,\n\n  // Props for the hightlighted code’s pre element\n  preClassName?: string,\n};\n\ntype State = {\n  capture: boolean,\n};\n\ntype Record = {\n  value: string,\n  selectionStart: number,\n  selectionEnd: number,\n};\n\ntype History = {\n  stack: Array<Record & { timestamp: number }>,\n  offset: number,\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nconst isMacLike =\n  'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class Editor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  _getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  _recordChange = (record: Record, overwrite?: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart)\n          .pop()\n          .match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart)\n          .pop()\n          .match(re);\n\n        if (previous && current && current[1].startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  _handleKeyDown = (e: *) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.keyCode === KEYCODE_ESCAPE) {\n      e.target.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart: /\\S/.test(startLineText)\n            ? selectionStart + tabCharacter.length\n            : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line.match(/^\\s+/);\n\n        if (matches && matches[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n          ? // Trigger redo with Ctrl+Y on Windows\n            e.ctrlKey && e.keyCode === KEYCODE_Y\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState(state => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  _handleChange = (e: *) => {\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  _input: ?HTMLTextAreaElement;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      textareaClassName,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable no-unused-vars */\n      preClassName,\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <textarea\n          ref={c => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={\n            className + (textareaClassName ? ` ${textareaClassName}` : '')\n          }\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        <pre\n          className={preClassName}\n          aria-hidden=\"true\"\n          style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"ab8b568e\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"front:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfront\"] = self[\"webpackChunkfront\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","// @flow\nimport type { Interpolation } from '../types';\n\nexport default (\n  strings: Array<string>,\n  interpolations: Array<Interpolation>\n): Array<Interpolation> => {\n  const result = [strings[0]];\n\n  for (let i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n};\n","// @flow\nimport { typeOf } from 'react-is';\n\nexport default (x: any): boolean =>\n  x !== null &&\n  typeof x === 'object' &&\n  (x.toString ? x.toString() : Object.prototype.toString.call(x)) === '[object Object]' &&\n  !typeOf(x);\n","// @flow\nexport const EMPTY_ARRAY = Object.freeze([]);\nexport const EMPTY_OBJECT = Object.freeze({});\n","// @flow\nexport default function isFunction(test: any): boolean %checks {\n  return typeof test === 'function';\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function getComponentName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return (\n    (process.env.NODE_ENV !== 'production' ? typeof target === 'string' && target : false) ||\n    // $FlowFixMe\n    target.displayName ||\n    // $FlowFixMe\n    target.name ||\n    'Component'\n  );\n}\n","// @flow\nexport default function isStyledComponent(target: any): boolean %checks {\n  return target && typeof target.styledComponentId === 'string';\n}\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR: string =\n  (typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY =\n  Boolean(typeof SC_DISABLE_SPEEDY === 'boolean'\n    ? SC_DISABLE_SPEEDY\n    : (typeof process !== 'undefined' && typeof process.env.REACT_APP_SC_DISABLE_SPEEDY !== 'undefined' && process.env.REACT_APP_SC_DISABLE_SPEEDY !== ''\n      ? process.env.REACT_APP_SC_DISABLE_SPEEDY === 'false' ? false : process.env.REACT_APP_SC_DISABLE_SPEEDY\n      : (typeof process !== 'undefined' && typeof process.env.SC_DISABLE_SPEEDY !== 'undefined' && process.env.SC_DISABLE_SPEEDY !== ''\n        ? process.env.SC_DISABLE_SPEEDY === 'false' ? false : process.env.SC_DISABLE_SPEEDY\n        : process.env.NODE_ENV !== 'production'\n      )\n    ));\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\nimport errorMap from './errors';\n\nconst ERRORS = process.env.NODE_ENV !== 'production' ? errorMap : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format(...args) {\n  let a = args[0];\n  const b = [];\n\n  for (let c = 1, len = args.length; c < len; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(d => {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\nexport default function throwStyledComponentsError(\n  code: string | number,\n  ...interpolations: Array<any>\n) {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      `An error occurred. See https://git.io/JUIaE#${code} for more information.${\n        interpolations.length > 0 ? ` Args: ${interpolations.join(', ')}` : ''\n      }`\n    );\n  } else {\n    throw new Error(format(ERRORS[code], ...interpolations).trim());\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  while (reverseRegister.has(nextFreeGroup)) {\n    nextFreeGroup++;\n  }\n\n  const group = nextFreeGroup++;\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\n\nimport { SPLITTER, SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport { getIdForGroup, setGroupForId } from './GroupIDAllocator';\nimport type { Sheet } from './types';\n\nconst SELECTOR = `style[${SC_ATTR}][${SC_ATTR_VERSION}=\"${SC_VERSION}\"]`;\nconst MARKER_RE = new RegExp(`^${SC_ATTR}\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)`);\n\nexport const outputSheet = (sheet: Sheet) => {\n  const tag = sheet.getTag();\n  const { length } = tag;\n\n  let css = '';\n  for (let group = 0; group < length; group++) {\n    const id = getIdForGroup(group);\n    if (id === undefined) continue;\n\n    const names = sheet.names.get(id);\n    const rules = tag.getGroup(group);\n    if (!names || !rules || !names.size) continue;\n\n    const selector = `${SC_ATTR}.g${group}[id=\"${id}\"]`;\n\n    let content = '';\n    if (names !== undefined) {\n      names.forEach(name => {\n        if (name.length > 0) {\n          content += `${name},`;\n        }\n      });\n    }\n\n    // NOTE: It's easier to collect rules and have the marker\n    // after the actual rules to simplify the rehydration\n    css += `${rules}${selector}{content:\"${content}\"}${SPLITTER}`;\n  }\n\n  return css;\n};\n\nconst rehydrateNamesFromContent = (sheet: Sheet, id: string, content: string) => {\n  const names = content.split(',');\n  let name;\n\n  for (let i = 0, l = names.length; i < l; i++) {\n    // eslint-disable-next-line\n    if ((name = names[i])) {\n      sheet.registerName(id, name);\n    }\n  }\n};\n\nconst rehydrateSheetFromTag = (sheet: Sheet, style: HTMLStyleElement) => {\n  const parts = (style.textContent || '').split(SPLITTER);\n  const rules: string[] = [];\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    const part = parts[i].trim();\n    if (!part) continue;\n\n    const marker = part.match(MARKER_RE);\n\n    if (marker) {\n      const group = parseInt(marker[1], 10) | 0;\n      const id = marker[2];\n\n      if (group !== 0) {\n        // Rehydrate componentId to group index mapping\n        setGroupForId(id, group);\n        // Rehydrate names and rules\n        // looks like: data-styled.g11[id=\"idA\"]{content:\"nameA,\"}\n        rehydrateNamesFromContent(sheet, id, marker[3]);\n        sheet.getTag().insertRules(group, rules);\n      }\n\n      rules.length = 0;\n    } else {\n      rules.push(part);\n    }\n  }\n};\n\nexport const rehydrateSheet = (sheet: Sheet) => {\n  const nodes = document.querySelectorAll(SELECTOR);\n\n  for (let i = 0, l = nodes.length; i < l; i++) {\n    const node = ((nodes[i]: any): HTMLStyleElement);\n    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {\n      rehydrateSheetFromTag(sheet, node);\n\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }\n};\n","// @flow\n/* eslint-disable camelcase, no-undef */\n\ndeclare var window: { __webpack_nonce__: string };\n\nconst getNonce = () => {\n\n  return typeof window !== 'undefined'\n    ? typeof window.__webpack_nonce__ !== 'undefined'\n      ? window.__webpack_nonce__\n      : null\n    : null;\n};\n\nexport default getNonce;\n","// @flow\n\nimport { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport getNonce from '../utils/nonce';\nimport throwStyledError from '../utils/error';\n\nconst ELEMENT_TYPE = 1; /* Node.ELEMENT_TYPE */\n\n/** Find last style element if any inside target */\nconst findLastStyleTag = (target: HTMLElement): void | HTMLStyleElement => {\n  const { childNodes } = target;\n\n  for (let i = childNodes.length; i >= 0; i--) {\n    const child = ((childNodes[i]: any): ?HTMLElement);\n    if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {\n      return ((child: any): HTMLStyleElement);\n    }\n  }\n\n  return undefined;\n};\n\n/** Create a style element inside `target` or <head> after the last */\nexport const makeStyleTag = (target?: HTMLElement): HTMLStyleElement => {\n  const head = ((document.head: any): HTMLElement);\n  const parent = target || head;\n  const style = document.createElement('style');\n  const prevStyle = findLastStyleTag(parent);\n  const nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;\n\n  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);\n  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);\n\n  const nonce = getNonce();\n\n  if (nonce) style.setAttribute('nonce', nonce);\n\n  parent.insertBefore(style, nextSibling);\n\n  return style;\n};\n\n/** Get the CSSStyleSheet instance for a given style element */\nexport const getSheet = (tag: HTMLStyleElement): CSSStyleSheet => {\n  if (tag.sheet) {\n    return ((tag.sheet: any): CSSStyleSheet);\n  }\n\n  // Avoid Firefox quirk where the style element might not have a sheet property\n  const { styleSheets } = document;\n  for (let i = 0, l = styleSheets.length; i < l; i++) {\n    const sheet = styleSheets[i];\n    if (sheet.ownerNode === tag) {\n      return ((sheet: any): CSSStyleSheet);\n    }\n  }\n\n  throwStyledError(17);\n  return (undefined: any);\n};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\nimport { makeTag } from './Tag';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions: SheetOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  server: boolean;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = EMPTY_OBJECT,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n    this.server = !!options.isServer;\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.server && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs, withNames?: boolean = true) {\n    return new StyleSheet(\n      { ...this.options, ...options },\n      this.gs,\n      (withNames && this.names) || undefined\n    );\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\n/* eslint-disable no-bitwise */\n\nconst AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nexport default function generateAlphabeticName(code: number): string {\n  let name = '';\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n","// @flow\n/* eslint-disable */\n\nexport const SEED = 5381;\n\n// When we have separate strings it's useful to run a progressive\n// version of djb2 where we pretend that we're still looping over\n// the same string\nexport const phash = (h: number, x: string): number => {\n  let i = x.length;\n\n  while (i) {\n    h = (h * 33) ^ x.charCodeAt(--i);\n  }\n\n  return h;\n};\n\n// This is a djb2 hashing function\nexport const hash = (x: string): number => {\n  return phash(SEED, x);\n};\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\nimport { SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport generateName from '../utils/generateAlphabeticName';\nimport { hash, phash } from '../utils/hash';\nimport isStaticRules from '../utils/isStaticRules';\n\nconst SEED = hash(SC_VERSION);\n\n/**\n * ComponentStyle is all the CSS-specific stuff, not the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  baseStyle: ?ComponentStyle;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string, baseStyle?: ComponentStyle) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' &&\n      (baseStyle === undefined || baseStyle.isStatic) &&\n      isStaticRules(rules);\n    this.componentId = componentId;\n\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    this.baseHash = phash(SEED, componentId);\n\n    this.baseStyle = baseStyle;\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    const names = [];\n\n    if (this.baseStyle) {\n      names.push(this.baseStyle.generateAndInjectStyles(executionContext, styleSheet, stylis));\n    }\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        names.push(this.staticRulesId);\n      } else {\n        const cssStatic = flatten(this.rules, executionContext, styleSheet, stylis).join('');\n        const name = generateName(phash(this.baseHash, cssStatic) >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n          styleSheet.insertRules(componentId, name, cssStaticFormatted);\n        }\n\n        names.push(name);\n        this.staticRulesId = name;\n      }\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else if (partRule) {\n          const partChunk = flatten(partRule, executionContext, styleSheet, stylis);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      if (css) {\n        const name = generateName(dynamicHash >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n          styleSheet.insertRules(componentId, name, cssFormatted);\n        }\n\n        names.push(name);\n      }\n    }\n\n    return names.join(' ');\n  }\n}\n","import Stylis from '@emotion/stylis';\nimport { type Stringifier } from '../types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './empties';\nimport throwStyledError from './error';\nimport { phash, SEED } from './hash';\nimport insertRulePlugin from './stylisPluginInsertRule';\n\nconst COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\nconst COMPLEX_SELECTOR_PREFIX = [':', '[', '.', '#'];\n\ntype StylisInstanceConstructorArgs = {\n  options?: Object,\n  plugins?: Array<Function>,\n};\n\nexport default function createStylisInstance({\n  options = EMPTY_OBJECT,\n  plugins = EMPTY_ARRAY,\n}: StylisInstanceConstructorArgs = EMPTY_OBJECT) {\n  const stylis = new Stylis(options);\n\n  // Wrap `insertRulePlugin to build a list of rules,\n  // and then make our own plugin to return the rules. This\n  // makes it easier to hook into the existing SSR architecture\n\n  let parsingRules = [];\n\n  // eslint-disable-next-line consistent-return\n  const returnRulesPlugin = context => {\n    if (context === -2) {\n      const parsedRules = parsingRules;\n      parsingRules = [];\n      return parsedRules;\n    }\n  };\n\n  const parseRulesPlugin = insertRulePlugin(rule => {\n    parsingRules.push(rule);\n  });\n\n  let _componentId: string;\n  let _selector: string;\n  let _selectorRegexp: RegExp;\n  let _consecutiveSelfRefRegExp: RegExp;\n\n  const selfReferenceReplacer = (match, offset, string) => {\n    if (\n      // do not replace the first occurrence if it is complex (has a modifier)\n      (offset === 0 ? COMPLEX_SELECTOR_PREFIX.indexOf(string[_selector.length]) === -1 : true) &&\n      // no consecutive self refs (.b.b); that is a precedence boost and treated differently\n      !string.match(_consecutiveSelfRefRegExp)\n    ) {\n      return `.${_componentId}`;\n    }\n\n    return match;\n  };\n\n  /**\n   * When writing a style like\n   *\n   * & + & {\n   *   color: red;\n   * }\n   *\n   * The second ampersand should be a reference to the static component class. stylis\n   * has no knowledge of static class so we have to intelligently replace the base selector.\n   *\n   * https://github.com/thysultan/stylis.js/tree/v3.5.4#plugins <- more info about the context phase values\n   * \"2\" means this plugin is taking effect at the very end after all other processing is complete\n   */\n  const selfReferenceReplacementPlugin = (context, _, selectors) => {\n    if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {\n      // eslint-disable-next-line no-param-reassign\n      selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);\n    }\n  };\n\n  stylis.use([...plugins, selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);\n\n  function stringifyRules(css, selector, prefix, componentId = '&'): Stringifier {\n    const flatCSS = css.replace(COMMENT_REGEX, '');\n    const cssStr = selector && prefix ? `${prefix} ${selector} { ${flatCSS} }` : flatCSS;\n\n    // stylis has no concept of state to be passed to plugins\n    // but since JS is single-threaded, we can rely on that to ensure\n    // these properties stay in sync with the current stylis run\n    _componentId = componentId;\n    _selector = selector;\n    _selectorRegexp = new RegExp(`\\\\${_selector}\\\\b`, 'g');\n    _consecutiveSelfRefRegExp = new RegExp(`(\\\\${_selector}\\\\b){2,}`);\n\n    return stylis(prefix || !selector ? '' : selector, cssStr);\n  }\n\n  stringifyRules.hash = plugins.length\n    ? plugins\n        .reduce((acc, plugin) => {\n          if (!plugin.name) {\n            throwStyledError(15);\n          }\n\n          return phash(acc, plugin.name);\n        }, SEED)\n        .toString()\n    : '';\n\n  return stringifyRules;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2016 Sultan Tarimo\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable */\n\nexport default function(insertRule) {\n  const delimiter = '/*|*/';\n  const needle = `${delimiter}}`;\n\n  function toSheet(block) {\n    if (block) {\n      try {\n        insertRule(`${block}}`);\n      } catch (e) {}\n    }\n  }\n\n  return function ruleSheet(\n    context,\n    content,\n    selectors,\n    parents,\n    line,\n    column,\n    length,\n    ns,\n    depth,\n    at\n  ) {\n    switch (context) {\n      // property\n      case 1:\n        // @import\n        if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(`${content};`), '';\n        break;\n      // selector\n      case 2:\n        if (ns === 0) return content + delimiter;\n        break;\n      // at-rule\n      case 3:\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            return insertRule(selectors[0] + content), '';\n          default:\n            return content + (at === 0 ? delimiter : '');\n        }\n      case -2:\n        content.split(needle).forEach(toSheet);\n    }\n  };\n}\n","// @flow\nimport React, { type Context, type Node, useContext, useEffect, useMemo, useState } from 'react';\nimport shallowequal from 'shallowequal';\nimport StyleSheet from '../sheet';\nimport type { Stringifier } from '../types';\nimport createStylisInstance from '../utils/stylis';\n\ntype Props = {\n  children?: Node,\n  disableCSSOMInjection?: boolean,\n  disableVendorPrefixes?: boolean,\n  sheet?: StyleSheet,\n  stylisPlugins?: Array<Function>,\n  target?: HTMLElement,\n};\n\nexport const StyleSheetContext: Context<StyleSheet | void> = React.createContext();\nexport const StyleSheetConsumer = StyleSheetContext.Consumer;\nexport const StylisContext: Context<Stringifier | void> = React.createContext();\nexport const StylisConsumer = StylisContext.Consumer;\n\nexport const masterSheet: StyleSheet = new StyleSheet();\nexport const masterStylis: Stringifier = createStylisInstance();\n\nexport function useStyleSheet(): StyleSheet {\n  return useContext(StyleSheetContext) || masterSheet;\n}\n\nexport function useStylis(): Stringifier {\n  return useContext(StylisContext) || masterStylis;\n}\n\nexport default function StyleSheetManager(props: Props) {\n  const [plugins, setPlugins] = useState(props.stylisPlugins);\n  const contextStyleSheet = useStyleSheet();\n\n  const styleSheet = useMemo(() => {\n    let sheet = contextStyleSheet;\n\n    if (props.sheet) {\n      // eslint-disable-next-line prefer-destructuring\n      sheet = props.sheet;\n    } else if (props.target) {\n      sheet = sheet.reconstructWithOptions({ target: props.target }, false);\n    }\n\n    if (props.disableCSSOMInjection) {\n      sheet = sheet.reconstructWithOptions({ useCSSOMInjection: false });\n    }\n\n    return sheet;\n  }, [props.disableCSSOMInjection, props.sheet, props.target]);\n\n  const stylis = useMemo(\n    () =>\n      createStylisInstance({\n        options: { prefix: !props.disableVendorPrefixes },\n        plugins,\n      }),\n    [props.disableVendorPrefixes, plugins]\n  );\n\n  useEffect(() => {\n    if (!shallowequal(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);\n  }, [props.stylisPlugins]);\n\n  return (\n    <StyleSheetContext.Provider value={styleSheet}>\n      <StylisContext.Provider value={stylis}>\n        {process.env.NODE_ENV !== 'production'\n          ? React.Children.only(props.children)\n          : props.children}\n      </StylisContext.Provider>\n    </StyleSheetContext.Provider>\n  );\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport { type Stringifier } from '../types';\nimport throwStyledError from '../utils/error';\nimport { masterStylis } from './StyleSheetManager';\n\nexport default class Keyframes {\n  id: string;\n\n  name: string;\n\n  rules: string;\n\n  constructor(name: string, rules: string) {\n    this.name = name;\n    this.id = `sc-keyframes-${name}`;\n    this.rules = rules;\n  }\n\n  inject = (styleSheet: StyleSheet, stylisInstance: Stringifier = masterStylis) => {\n    const resolvedName = this.name + stylisInstance.hash;\n\n    if (!styleSheet.hasNameForId(this.id, resolvedName)) {\n      styleSheet.insertRules(\n        this.id,\n        resolvedName,\n        stylisInstance(this.rules, resolvedName, '@keyframes')\n      );\n    }\n  };\n\n  toString = () => {\n    return throwStyledError(12, String(this.name));\n  };\n\n  getName(stylisInstance: Stringifier = masterStylis) {\n    return this.name + stylisInstance.hash;\n  }\n}\n","// @flow\n\n/**\n * inlined version of\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js\n */\n\nconst uppercaseCheck = /([A-Z])/;\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nexport default function hyphenateStyleName(string: string): string {\n  return uppercaseCheck.test(string)\n  ? string\n    .replace(uppercasePattern, prefixAndLowerCase)\n    .replace(msPattern, '-ms-')\n  : string;\n}\n","// @flow\nimport { isElement } from 'react-is';\nimport getComponentName from './getComponentName';\nimport isFunction from './isFunction';\nimport isStatelessFunction from './isStatelessFunction';\nimport isPlainObject from './isPlainObject';\nimport isStyledComponent from './isStyledComponent';\nimport Keyframes from '../models/Keyframes';\nimport hyphenate from './hyphenateStyleName';\nimport addUnitIfNeeded from './addUnitIfNeeded';\nimport { type Stringifier } from '../types';\n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nconst isFalsish = chunk => chunk === undefined || chunk === null || chunk === false || chunk === '';\n\nexport const objToCssArray = (obj: Object, prevKey?: string): Array<string | Function> => {\n  const rules = [];\n\n  for (const key in obj) {\n    if (!obj.hasOwnProperty(key) || isFalsish(obj[key])) continue;\n\n    if ((Array.isArray(obj[key]) && obj[key].isCss) || isFunction(obj[key])) {\n      rules.push(`${hyphenate(key)}:`, obj[key], ';');\n    } else if (isPlainObject(obj[key])) {\n      rules.push(...objToCssArray(obj[key], key));\n    } else {\n      rules.push(`${hyphenate(key)}: ${addUnitIfNeeded(key, obj[key])};`);\n    }\n  }\n\n  return prevKey ? [`${prevKey} {`, ...rules, '}'] : rules;\n};\n\nexport default function flatten(\n  chunk: any,\n  executionContext: ?Object,\n  styleSheet: ?Object,\n  stylisInstance: ?Stringifier\n): any {\n  if (Array.isArray(chunk)) {\n    const ruleSet = [];\n\n    for (let i = 0, len = chunk.length, result; i < len; i += 1) {\n      result = flatten(chunk[i], executionContext, styleSheet, stylisInstance);\n\n      if (result === '') continue;\n      else if (Array.isArray(result)) ruleSet.push(...result);\n      else ruleSet.push(result);\n    }\n\n    return ruleSet;\n  }\n\n  if (isFalsish(chunk)) {\n    return '';\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return `.${chunk.styledComponentId}`;\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      const result = chunk(executionContext);\n\n      if (process.env.NODE_ENV !== 'production' && isElement(result)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `${getComponentName(\n            chunk\n          )} is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.`\n        );\n      }\n\n      return flatten(result, executionContext, styleSheet, stylisInstance);\n    } else return chunk;\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet, stylisInstance);\n      return chunk.getName(stylisInstance);\n    } else return chunk;\n  }\n\n  /* Handle objects */\n  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();\n}\n","// @flow\nexport default function isStatelessFunction(test: any): boolean {\n  return (\n    typeof test === 'function'\n    && !(\n      test.prototype\n      && test.prototype.isReactComponent\n    )\n  );\n}\n","// @flow\nimport unitless from '@emotion/unitless';\n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nexport default function addUnitIfNeeded(name: string, value: any): any {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  // $FlowFixMe\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in unitless)) {\n    return `${value}px`; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return String(value).trim();\n}\n","// @flow\nimport interleave from '../utils/interleave';\nimport isPlainObject from '../utils/isPlainObject';\nimport { EMPTY_ARRAY } from '../utils/empties';\nimport isFunction from '../utils/isFunction';\nimport flatten from '../utils/flatten';\nimport type { Interpolation, RuleSet, Styles } from '../types';\n\n/**\n * Used when flattening object styles to determine if we should\n * expand an array of styles.\n */\nconst addTag = arg => {\n  if (Array.isArray(arg)) {\n    // eslint-disable-next-line no-param-reassign\n    arg.isCss = true;\n  }\n  return arg;\n};\n\nexport default function css(styles: Styles, ...interpolations: Array<Interpolation>): RuleSet {\n  if (isFunction(styles) || isPlainObject(styles)) {\n    // $FlowFixMe\n    return addTag(flatten(interleave(EMPTY_ARRAY, [styles, ...interpolations])));\n  }\n\n  if (interpolations.length === 0 && styles.length === 1 && typeof styles[0] === 'string') {\n    // $FlowFixMe\n    return styles;\n  }\n\n  // $FlowFixMe\n  return addTag(flatten(interleave(styles, interpolations)));\n}\n","// @flow\n\nimport { useRef } from 'react';\n\nconst invalidHookCallRe = /invalid hook call/i;\nconst seen = new Set();\n\nexport const checkDynamicCreation = (displayName: string, componentId?: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const parsedIdString = componentId ? ` with the id of \"${componentId}\"` : '';\n    const message =\n      `The component ${displayName}${parsedIdString} has been created dynamically.\\n` +\n      \"You may see this warning because you've called styled inside another component.\\n\" +\n      'To resolve this only create new StyledComponents outside of any render method and function component.';\n\n    // If a hook is called outside of a component:\n    // React 17 and earlier throw an error\n    // React 18 and above use console.error\n\n    const originalConsoleError = console.error // eslint-disable-line no-console\n    try {\n      let didNotCallInvalidHook = true\n      /* $FlowIgnore[cannot-write] */\n      console.error = (consoleErrorMessage, ...consoleErrorArgs) => { // eslint-disable-line no-console\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n        if (invalidHookCallRe.test(consoleErrorMessage)) {\n          didNotCallInvalidHook = false\n          // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n          seen.delete(message);\n        } else {\n          originalConsoleError(consoleErrorMessage, ...consoleErrorArgs);\n        }\n      }\n      // We purposefully call `useRef` outside of a component and expect it to throw\n      // If it doesn't, then we're inside another component.\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRef();\n\n      if (didNotCallInvalidHook && !seen.has(message)) {\n        // eslint-disable-next-line no-console\n        console.warn(message);\n        seen.add(message);\n      }\n    } catch (error) {\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n      if (invalidHookCallRe.test(error.message)) {\n        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n        seen.delete(message);\n      }\n    } finally {\n      /* $FlowIgnore[cannot-write] */\n      console.error = originalConsoleError; // eslint-disable-line no-console\n    }\n  }\n};\n","// @flow\nimport { EMPTY_OBJECT } from './empties';\n\ntype Props = {\n  theme?: any,\n};\n\nexport default (props: Props, providedTheme: any, defaultProps: any = EMPTY_OBJECT) => {\n  return (props.theme !== defaultProps.theme && props.theme) || providedTheme || defaultProps.theme;\n};\n","// @flow\n\n// Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier\n// Control characters and non-letter first symbols are not supported\nconst escapeRegex = /[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\nconst dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nexport default function escape(str: string): string {\n  return (\n    str\n      // Replace all possible CSS selectors\n      .replace(escapeRegex, '-')\n\n      // Remove extraneous hyphens at the start and end\n      .replace(dashesAtEnds, '')\n  );\n}\n","// @flow\n/* eslint-disable */\nimport generateAlphabeticName from './generateAlphabeticName';\nimport { hash } from './hash';\n\nexport default (str: string): string => {\n  return generateAlphabeticName(hash(str) >>> 0);\n};\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function isTag(target: $PropertyType<IStyledComponent, 'target'>): boolean %checks {\n  return (\n    typeof target === 'string' &&\n    (process.env.NODE_ENV !== 'production'\n      ? target.charAt(0) === target.charAt(0).toLowerCase()\n      : true)\n  );\n}\n","/* eslint-disable */\n/**\n  mixin-deep; https://github.com/jonschlinkert/mixin-deep\n  Inlined such that it will be consistently transpiled to an IE-compatible syntax.\n\n  The MIT License (MIT)\n\n  Copyright (c) 2014-present, Jon Schlinkert.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst isObject = val => {\n  return (\n    typeof val === 'function' || (typeof val === 'object' && val !== null && !Array.isArray(val))\n  );\n};\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nfunction mixin(target, val, key) {\n  const obj = target[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    target[key] = val;\n  }\n}\n\nexport default function mixinDeep(target, ...rest) {\n  for (const obj of rest) {\n    if (isObject(obj)) {\n      for (const key in obj) {\n        if (isValidKey(key)) {\n          mixin(target, obj[key], key);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","// @flow\nimport React, { useContext, useMemo, type Element, type Context } from 'react';\nimport throwStyledError from '../utils/error';\nimport isFunction from '../utils/isFunction';\n\nexport type Theme = { [key: string]: mixed };\n\ntype ThemeArgument = Theme | ((outerTheme?: Theme) => Theme);\n\ntype Props = {\n  children?: Element<any>,\n  theme: ThemeArgument,\n};\n\nexport const ThemeContext: Context<Theme | void> = React.createContext();\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nfunction mergeTheme(theme: ThemeArgument, outerTheme?: Theme): Theme {\n  if (!theme) {\n    return throwStyledError(14);\n  }\n\n  if (isFunction(theme)) {\n    const mergedTheme = theme(outerTheme);\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')\n    ) {\n      return throwStyledError(7);\n    }\n\n    return mergedTheme;\n  }\n\n  if (Array.isArray(theme) || typeof theme !== 'object') {\n    return throwStyledError(8);\n  }\n\n  return outerTheme ? { ...outerTheme, ...theme } : theme;\n}\n\n/**\n * Provide a theme to an entire react component tree via context\n */\nexport default function ThemeProvider(props: Props) {\n  const outerTheme = useContext(ThemeContext);\n  const themeContext = useMemo(() => mergeTheme(props.theme, outerTheme), [\n    props.theme,\n    outerTheme,\n  ]);\n\n  if (!props.children) {\n    return null;\n  }\n\n  return <ThemeContext.Provider value={themeContext}>{props.children}</ThemeContext.Provider>;\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport hoist from 'hoist-non-react-statics';\nimport React, { createElement, type Ref, useContext, useDebugValue } from 'react';\nimport { SC_VERSION } from '../constants';\nimport type {\n  Attrs,\n  IStyledComponent,\n  IStyledStatics,\n  RuleSet,\n  ShouldForwardProp,\n  Target,\n} from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport determineTheme from '../utils/determineTheme';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\nimport escape from '../utils/escape';\nimport generateComponentId from '../utils/generateComponentId';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { ThemeContext } from './ThemeProvider';\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName?: string, parentComponentId?: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    SC_VERSION + name + identifiers[name]\n  )}`;\n\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  isStatic: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(className);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl(\n  forwardedComponent: IStyledComponent,\n  props: Object,\n  forwardedRef: Ref<any>,\n  isStatic: boolean\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    defaultProps,\n    foldedComponentIds,\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    isStatic,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (\n      shouldForwardProp\n        ? shouldForwardProp(key, validAttr, elementToBeCreated)\n        : isTargetTag\n        ? validAttr(key)\n        : true\n    ) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: $PropertyType<IStyledComponent, 'target'>,\n  options: {\n    attrs?: Attrs,\n    componentId: string,\n    displayName?: string,\n    parentComponentId?: string,\n    shouldForwardProp?: ShouldForwardProp,\n  },\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    attrs = EMPTY_ARRAY,\n    componentId = generateId(options.displayName, options.parentComponentId),\n    displayName = generateDisplayName(target),\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    isTargetStyledComp && ((target: any): IStyledComponent).attrs\n      ? Array.prototype.concat(((target: any): IStyledComponent).attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (options.shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn, elementToBeCreated) =>\n        ((((target: any): IStyledComponent).shouldForwardProp: any): ShouldForwardProp)(\n          prop,\n          filterFn,\n          elementToBeCreated\n        ) &&\n        ((options.shouldForwardProp: any): ShouldForwardProp)(prop, filterFn, elementToBeCreated);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = ((target: any): IStyledComponent).shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    rules,\n    styledComponentId,\n    isTargetStyledComp ? ((target: Object).componentStyle: ComponentStyle) : undefined\n  );\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && attrs.length === 0;\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent: IStyledComponent;\n\n  const forwardRef = (props, ref) =>\n    // eslint-disable-next-line\n    useStyledComponentImpl(WrappedStyledComponent, props, ref, isStatic);\n\n  forwardRef.displayName = displayName;\n\n  WrappedStyledComponent = ((React.forwardRef(forwardRef): any): IStyledComponent);\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? Array.prototype.concat(\n        ((target: any): IStyledComponent).foldedComponentIds,\n        ((target: any): IStyledComponent).styledComponentId\n      )\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? ((target: any): IStyledComponent).target\n    : target;\n\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      this._foldedDefaultProps = isTargetStyledComp\n        ? merge({}, ((target: any): IStyledComponent).defaultProps, obj)\n        : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  WrappedStyledComponent.toString = () => `.${WrappedStyledComponent.styledComponentId}`;\n\n  if (isCompositeComponent) {\n    hoist<\n      IStyledStatics,\n      $PropertyType<IStyledComponent, 'target'>,\n      { [key: $Keys<IStyledStatics>]: true }\n    >(WrappedStyledComponent, ((target: any): $PropertyType<IStyledComponent, 'target'>), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\nimport getComponentName from './getComponentName';\nimport isTag from './isTag';\n\nexport default function generateDisplayName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return isTag(target) ? `styled.${target}` : `Styled(${getComponentName(target)})`;\n}\n","/**\n * Convenience function for joining strings to form className chains\n */\nexport default function joinStrings(a: ?String, b: ?String): ?String {\n  return a && b ? `${a} ${b}` : a || b;\n}\n","// @flow\n// Thanks to ReactDOMFactories for this handy list!\n\nexport default [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'textPath',\n  'tspan',\n];\n","// @flow\nimport constructWithOptions from './constructWithOptions';\nimport StyledComponent from '../models/StyledComponent';\nimport domElements from '../utils/domElements';\n\nimport type { Target } from '../types';\n\nconst styled = (tag: Target) => constructWithOptions(StyledComponent, tag);\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(domElement => {\n  styled[domElement] = styled(domElement);\n});\n\nexport default styled;\n","// @flow\nimport { isValidElementType } from 'react-is';\nimport css from './css';\nimport throwStyledError from '../utils/error';\nimport { EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Target } from '../types';\n\nexport default function constructWithOptions(\n  componentConstructor: Function,\n  tag: Target,\n  options: Object = EMPTY_OBJECT\n) {\n  if (!isValidElementType(tag)) {\n    return throwStyledError(1, String(tag));\n  }\n\n  /* This is callable directly as a template function */\n  // $FlowFixMe: Not typed to avoid destructuring arguments\n  const templateFunction = (...args) => componentConstructor(tag, options, css(...args));\n\n  /* If config methods are called, wrap up a new template function and merge options */\n  templateFunction.withConfig = config =>\n    constructWithOptions(componentConstructor, tag, { ...options, ...config });\n\n  /* Modify/inject new props at runtime */\n  templateFunction.attrs = attrs =>\n    constructWithOptions(componentConstructor, tag, {\n      ...options,\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),\n    });\n\n  return templateFunction;\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport isStaticRules from '../utils/isStaticRules';\n\nexport default class GlobalStyle {\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules);\n\n    // pre-register the first instance to ensure global styles\n    // load before component ones\n    StyleSheet.registerId(this.componentId + 1);\n  }\n\n  createStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    const flatCSS = flatten(this.rules, executionContext, styleSheet, stylis);\n    const css = stylis(flatCSS.join(''), '');\n    const id = this.componentId + instance;\n\n    // NOTE: We use the id as a name as well, since these rules never change\n    styleSheet.insertRules(id, id, css);\n  }\n\n  removeStyles(instance: number, styleSheet: StyleSheet) {\n    styleSheet.clearRules(this.componentId + instance);\n  }\n\n  renderStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    if (instance > 2) StyleSheet.registerId(this.componentId + instance);\n\n    // NOTE: Remove old styles, then inject the new ones\n    this.removeStyles(instance, styleSheet);\n    this.createStyles(instance, executionContext, styleSheet, stylis);\n  }\n}\n","// @flow\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { IS_BROWSER, SC_ATTR, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport throwStyledError from '../utils/error';\nimport getNonce from '../utils/nonce';\nimport StyleSheet from '../sheet';\nimport StyleSheetManager from './StyleSheetManager';\n\ndeclare var __SERVER__: boolean;\n\nconst CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nexport default class ServerStyleSheet {\n  isStreaming: boolean;\n\n  instance: StyleSheet;\n\n  sealed: boolean;\n\n  constructor() {\n    this.instance = new StyleSheet({ isServer: true });\n    this.sealed = false;\n  }\n\n  _emitSheetCSS = (): string => {\n    const css = this.instance.toString();\n    if (!css) return '';\n\n    const nonce = getNonce();\n    const attrs = [nonce && `nonce=\"${nonce}\"`, `${SC_ATTR}=\"true\"`, `${SC_ATTR_VERSION}=\"${SC_VERSION}\"`];\n    const htmlAttr = attrs.filter(Boolean).join(' ');\n\n    return `<style ${htmlAttr}>${css}</style>`;\n  };\n\n  collectStyles(children: any) {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return <StyleSheetManager sheet={this.instance}>{children}</StyleSheetManager>;\n  }\n\n  getStyleTags = (): string => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return this._emitSheetCSS();\n  };\n\n  getStyleElement = () => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    const props = {\n      [SC_ATTR]: '',\n      [SC_ATTR_VERSION]: SC_VERSION,\n      dangerouslySetInnerHTML: {\n        __html: this.instance.toString(),\n      },\n    };\n\n    const nonce = getNonce();\n    if (nonce) {\n      (props: any).nonce = nonce;\n    }\n\n    // v4 returned an array for this fn, so we'll do the same for v5 for backward compat\n    return [<style {...props} key=\"sc-0-0\" />];\n  };\n\n  // eslint-disable-next-line consistent-return\n  interleaveWithNodeStream(input: any) {\n    if (!__SERVER__ || IS_BROWSER) {\n      return throwStyledError(3);\n    } else if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    if (__SERVER__) {\n      this.seal();\n\n      // eslint-disable-next-line global-require\n      const { Readable, Transform } = require('stream');\n\n      const readableStream: Readable = input;\n      const { instance: sheet, _emitSheetCSS } = this;\n\n      const transformer = new Transform({\n        transform: function appendStyleChunks(chunk, /* encoding */ _, callback) {\n          // Get the chunk and retrieve the sheet's CSS as an HTML chunk,\n          // then reset its rules so we get only new ones for the next chunk\n          const renderedHtml = chunk.toString();\n          const html = _emitSheetCSS();\n\n          sheet.clearTag();\n\n          // prepend style html to chunk, unless the start of the chunk is a\n          // closing tag in which case append right after that\n          if (CLOSING_TAG_R.test(renderedHtml)) {\n            const endOfClosingTag = renderedHtml.indexOf('>') + 1;\n            const before = renderedHtml.slice(0, endOfClosingTag);\n            const after = renderedHtml.slice(endOfClosingTag);\n\n            this.push(before + html + after);\n          } else {\n            this.push(html + renderedHtml);\n          }\n\n          callback();\n        },\n      });\n\n      readableStream.on('error', err => {\n        // forward the error to the transform stream\n        transformer.emit('error', err);\n      });\n\n      return readableStream.pipe(transformer);\n    }\n  }\n\n  seal = () => {\n    this.sealed = true;\n  };\n}\n","// @flow\n\nimport css from './css';\nimport generateComponentId from '../utils/generateComponentId';\nimport Keyframes from '../models/Keyframes';\n\nimport type { Interpolation, Styles } from '../types';\n\nexport default function keyframes(\n  strings: Styles,\n  ...interpolations: Array<Interpolation>\n): Keyframes {\n  /* Warning if you've used keyframes on React Native */\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.'\n    );\n  }\n\n  const rules = css(strings, ...interpolations).join('');\n  const name = generateComponentId(rules);\n  return new Keyframes(name, rules);\n}\n","// @flow\n/* Import singletons */\nimport isStyledComponent from './utils/isStyledComponent';\nimport css from './constructors/css';\nimport createGlobalStyle from './constructors/createGlobalStyle';\nimport keyframes from './constructors/keyframes';\nimport ServerStyleSheet from './models/ServerStyleSheet';\nimport { SC_VERSION } from './constants';\n\nimport StyleSheetManager, {\n  StyleSheetContext,\n  StyleSheetConsumer,\n} from './models/StyleSheetManager';\n\n/* Import components */\nimport ThemeProvider, { ThemeContext, ThemeConsumer } from './models/ThemeProvider';\n\n/* Import Higher Order Components */\nimport withTheme from './hoc/withTheme';\n\n/* Import hooks */\nimport useTheme from './hooks/useTheme';\n\ndeclare var __SERVER__: boolean;\n\n/* Warning if you've imported this file on React Native */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof navigator !== 'undefined' &&\n  navigator.product === 'ReactNative'\n) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    \"It looks like you've imported 'styled-components' on React Native.\\n\" +\n      \"Perhaps you're looking to import 'styled-components/native'?\\n\" +\n      'Read more about this at https://www.styled-components.com/docs/basics#react-native'\n  );\n}\n\n/* Warning if there are several instances of styled-components */\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test' && typeof window !== 'undefined') {\n  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;\n\n  if (window['__styled-components-init__'] === 1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      \"It looks like there are several instances of 'styled-components' initialized in this application. \" +\n        'This may cause dynamic styles to not render properly, errors during the rehydration process, ' +\n        'a missing theme prop, and makes your application bigger without good reason.\\n\\n' +\n        'See https://s-c.sh/2BAXzed for more info.'\n    );\n  }\n\n  window['__styled-components-init__'] += 1;\n}\n\n/* Export everything */\nexport * from './secretInternals';\nexport {\n  createGlobalStyle,\n  css,\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  useTheme,\n  SC_VERSION as version,\n  withTheme,\n};\n","import styled from 'styled-components';\r\nconst Terminal = (props) => {\r\n    return (\r\n        <TerminalWrapper>\r\n        <TerminalContainer id={props.id}>\r\n            \r\n            {props.children}\r\n        </TerminalContainer>\r\n        </TerminalWrapper>\r\n        );\r\n}\r\n \r\nconst TerminalContainer = styled.div`\r\n    background:black;\r\n    color:greenyellow;\r\n    height:100%;\r\n    min-height:100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    flex-direction: column-reverse;\r\n`\r\nconst TerminalWrapper = styled.div`\r\n    height:30%;\r\n    min-height:30%;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nexport default Terminal;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// Generated from ./src/parser/Fire.g4 by ANTLR 4.9.0-SNAPSHOT\r\n\r\n\r\nimport { ATN } from \"antlr4ts/atn/ATN\";\r\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\r\nimport { CharStream } from \"antlr4ts/CharStream\";\r\nimport { Lexer } from \"antlr4ts/Lexer\";\r\nimport { LexerATNSimulator } from \"antlr4ts/atn/LexerATNSimulator\";\r\nimport { NotNull } from \"antlr4ts/Decorators\";\r\nimport { Override } from \"antlr4ts/Decorators\";\r\nimport { RuleContext } from \"antlr4ts/RuleContext\";\r\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\r\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\r\n\r\nimport * as Utils from \"antlr4ts/misc/Utils\";\r\n\r\n\r\nexport class FireLexer extends Lexer {\r\n\tpublic static readonly T__0 = 1;\r\n\tpublic static readonly T__1 = 2;\r\n\tpublic static readonly T__2 = 3;\r\n\tpublic static readonly T__3 = 4;\r\n\tpublic static readonly T__4 = 5;\r\n\tpublic static readonly T__5 = 6;\r\n\tpublic static readonly T__6 = 7;\r\n\tpublic static readonly T__7 = 8;\r\n\tpublic static readonly T__8 = 9;\r\n\tpublic static readonly T__9 = 10;\r\n\tpublic static readonly T__10 = 11;\r\n\tpublic static readonly T__11 = 12;\r\n\tpublic static readonly T__12 = 13;\r\n\tpublic static readonly T__13 = 14;\r\n\tpublic static readonly T__14 = 15;\r\n\tpublic static readonly T__15 = 16;\r\n\tpublic static readonly T__16 = 17;\r\n\tpublic static readonly T__17 = 18;\r\n\tpublic static readonly T__18 = 19;\r\n\tpublic static readonly T__19 = 20;\r\n\tpublic static readonly T__20 = 21;\r\n\tpublic static readonly T__21 = 22;\r\n\tpublic static readonly T__22 = 23;\r\n\tpublic static readonly T__23 = 24;\r\n\tpublic static readonly LET = 25;\r\n\tpublic static readonly PRINT = 26;\r\n\tpublic static readonly INSIDE = 27;\r\n\tpublic static readonly NUMBER = 28;\r\n\tpublic static readonly STRING = 29;\r\n\tpublic static readonly IDENTIFIER = 30;\r\n\tpublic static readonly WS = 31;\r\n\tpublic static readonly COMMENT = 32;\r\n\tpublic static readonly LINE_COMMENT = 33;\r\n\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly channelNames: string[] = [\r\n\t\t\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\r\n\t];\r\n\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly modeNames: string[] = [\r\n\t\t\"DEFAULT_MODE\",\r\n\t];\r\n\r\n\tpublic static readonly ruleNames: string[] = [\r\n\t\t\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \r\n\t\t\"T__9\", \"T__10\", \"T__11\", \"T__12\", \"T__13\", \"T__14\", \"T__15\", \"T__16\", \r\n\t\t\"T__17\", \"T__18\", \"T__19\", \"T__20\", \"T__21\", \"T__22\", \"T__23\", \"LET\", \r\n\t\t\"PRINT\", \"INSIDE\", \"NUMBER\", \"STRING\", \"EXP\", \"INT\", \"ESC\", \"UNICODE\", \r\n\t\t\"HEX\", \"SAFECODEPOINT\", \"IDENTIFIER\", \"WS\", \"COMMENT\", \"LINE_COMMENT\",\r\n\t];\r\n\r\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\r\n\t\tundefined, \"'REL'\", \"'=>'\", \"'as'\", \"'='\", \"'IF'\", \"'DO'\", \"'{'\", \"','\", \r\n\t\t\"'}'\", \"'.'\", \"':'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\", \"'=='\", \"'ENT'\", \"'ACT'\", \r\n\t\t\"'EVT'\", \"'true'\", \"'false'\", \"'null'\", \"'['\", \"']'\", \"'let'\", \"'print'\", \r\n\t\t\"'inside'\",\r\n\t];\r\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, \"LET\", \"PRINT\", \"INSIDE\", \r\n\t\t\"NUMBER\", \"STRING\", \"IDENTIFIER\", \"WS\", \"COMMENT\", \"LINE_COMMENT\",\r\n\t];\r\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FireLexer._LITERAL_NAMES, FireLexer._SYMBOLIC_NAMES, []);\r\n\r\n\t// @Override\r\n\t// @NotNull\r\n\tpublic get vocabulary(): Vocabulary {\r\n\t\treturn FireLexer.VOCABULARY;\r\n\t}\r\n\t// tslint:enable:no-trailing-whitespace\r\n\r\n\r\n\tconstructor(input: CharStream) {\r\n\t\tsuper(input);\r\n\t\tthis._interp = new LexerATNSimulator(FireLexer._ATN, this);\r\n\t}\r\n\r\n\t// @Override\r\n\tpublic get grammarFileName(): string { return \"Fire.g4\"; }\r\n\r\n\t// @Override\r\n\tpublic get ruleNames(): string[] { return FireLexer.ruleNames; }\r\n\r\n\t// @Override\r\n\tpublic get serializedATN(): string { return FireLexer._serializedATN; }\r\n\r\n\t// @Override\r\n\tpublic get channelNames(): string[] { return FireLexer.channelNames; }\r\n\r\n\t// @Override\r\n\tpublic get modeNames(): string[] { return FireLexer.modeNames; }\r\n\r\n\tpublic static readonly _serializedATN: string =\r\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02#\\u0108\\b\\x01\" +\r\n\t\t\"\\x04\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\" +\r\n\t\t\"\\x04\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\" +\r\n\t\t\"\\t\\r\\x04\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x04\\x12\\t\" +\r\n\t\t\"\\x12\\x04\\x13\\t\\x13\\x04\\x14\\t\\x14\\x04\\x15\\t\\x15\\x04\\x16\\t\\x16\\x04\\x17\\t\" +\r\n\t\t\"\\x17\\x04\\x18\\t\\x18\\x04\\x19\\t\\x19\\x04\\x1A\\t\\x1A\\x04\\x1B\\t\\x1B\\x04\\x1C\\t\" +\r\n\t\t\"\\x1C\\x04\\x1D\\t\\x1D\\x04\\x1E\\t\\x1E\\x04\\x1F\\t\\x1F\\x04 \\t \\x04!\\t!\\x04\\\"\\t\" +\r\n\t\t\"\\\"\\x04#\\t#\\x04$\\t$\\x04%\\t%\\x04&\\t&\\x04\\'\\t\\'\\x04(\\t(\\x03\\x02\\x03\\x02\\x03\" +\r\n\t\t\"\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x05\\x03\" +\r\n\t\t\"\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\t\" +\r\n\t\t\"\\x03\\t\\x03\\n\\x03\\n\\x03\\v\\x03\\v\\x03\\f\\x03\\f\\x03\\r\\x03\\r\\x03\\x0E\\x03\\x0E\" +\r\n\t\t\"\\x03\\x0E\\x03\\x0F\\x03\\x0F\\x03\\x10\\x03\\x10\\x03\\x10\\x03\\x11\\x03\\x11\\x03\\x11\" +\r\n\t\t\"\\x03\\x12\\x03\\x12\\x03\\x12\\x03\\x12\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x14\" +\r\n\t\t\"\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x15\\x03\\x15\\x03\\x15\\x03\\x15\\x03\\x15\\x03\\x16\" +\r\n\t\t\"\\x03\\x16\\x03\\x16\\x03\\x16\\x03\\x16\\x03\\x16\\x03\\x17\\x03\\x17\\x03\\x17\\x03\\x17\" +\r\n\t\t\"\\x03\\x17\\x03\\x18\\x03\\x18\\x03\\x19\\x03\\x19\\x03\\x1A\\x03\\x1A\\x03\\x1A\\x03\\x1A\" +\r\n\t\t\"\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x03\\x1C\\x03\\x1C\\x03\\x1C\" +\r\n\t\t\"\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x03\\x1D\\x05\\x1D\\xAD\\n\\x1D\\x03\\x1D\\x03\" +\r\n\t\t\"\\x1D\\x03\\x1D\\x06\\x1D\\xB2\\n\\x1D\\r\\x1D\\x0E\\x1D\\xB3\\x05\\x1D\\xB6\\n\\x1D\\x03\" +\r\n\t\t\"\\x1D\\x05\\x1D\\xB9\\n\\x1D\\x03\\x1E\\x03\\x1E\\x03\\x1E\\x07\\x1E\\xBE\\n\\x1E\\f\\x1E\" +\r\n\t\t\"\\x0E\\x1E\\xC1\\v\\x1E\\x03\\x1E\\x03\\x1E\\x03\\x1F\\x03\\x1F\\x05\\x1F\\xC7\\n\\x1F\\x03\" +\r\n\t\t\"\\x1F\\x03\\x1F\\x03 \\x03 \\x03 \\x07 \\xCE\\n \\f \\x0E \\xD1\\v \\x05 \\xD3\\n \\x03\" +\r\n\t\t\"!\\x03!\\x03!\\x05!\\xD8\\n!\\x03\\\"\\x03\\\"\\x03\\\"\\x03\\\"\\x03\\\"\\x03\\\"\\x03#\\x03#\" +\r\n\t\t\"\\x03$\\x03$\\x03%\\x06%\\xE5\\n%\\r%\\x0E%\\xE6\\x03&\\x06&\\xEA\\n&\\r&\\x0E&\\xEB\\x03\" +\r\n\t\t\"&\\x03&\\x03\\'\\x03\\'\\x03\\'\\x03\\'\\x07\\'\\xF4\\n\\'\\f\\'\\x0E\\'\\xF7\\v\\'\\x03\\'\\x03\" +\r\n\t\t\"\\'\\x03\\'\\x03\\'\\x03\\'\\x03(\\x03(\\x03(\\x03(\\x07(\\u0102\\n(\\f(\\x0E(\\u0105\\v\" +\r\n\t\t\"(\\x03(\\x03(\\x03\\xF5\\x02\\x02)\\x03\\x02\\x03\\x05\\x02\\x04\\x07\\x02\\x05\\t\\x02\" +\r\n\t\t\"\\x06\\v\\x02\\x07\\r\\x02\\b\\x0F\\x02\\t\\x11\\x02\\n\\x13\\x02\\v\\x15\\x02\\f\\x17\\x02\" +\r\n\t\t\"\\r\\x19\\x02\\x0E\\x1B\\x02\\x0F\\x1D\\x02\\x10\\x1F\\x02\\x11!\\x02\\x12#\\x02\\x13%\" +\r\n\t\t\"\\x02\\x14\\'\\x02\\x15)\\x02\\x16+\\x02\\x17-\\x02\\x18/\\x02\\x191\\x02\\x1A3\\x02\\x1B\" +\r\n\t\t\"5\\x02\\x1C7\\x02\\x1D9\\x02\\x1E;\\x02\\x1F=\\x02\\x02?\\x02\\x02A\\x02\\x02C\\x02\\x02\" +\r\n\t\t\"E\\x02\\x02G\\x02\\x02I\\x02 K\\x02!M\\x02\\\"O\\x02#\\x03\\x02\\f\\x03\\x022;\\x04\\x02\" +\r\n\t\t\"GGgg\\x04\\x02--//\\x03\\x023;\\n\\x02$$11^^ddhhppttvv\\x05\\x022;CHch\\x05\\x02\" +\r\n\t\t\"\\x02!$$^^\\x06\\x022;C\\\\aac|\\x05\\x02\\v\\f\\x0F\\x0F\\\"\\\"\\x04\\x02\\f\\f\\x0F\\x0F\" +\r\n\t\t\"\\x02\\u010F\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\\x02\\x02\\x07\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\\x02\\r\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x02\\x0F\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02\\x02\\x02\\x02\\x13\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x02\\x15\\x03\\x02\\x02\\x02\\x02\\x17\\x03\\x02\\x02\\x02\\x02\\x19\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x02\\x1B\\x03\\x02\\x02\\x02\\x02\\x1D\\x03\\x02\\x02\\x02\\x02\\x1F\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x02!\\x03\\x02\\x02\\x02\\x02#\\x03\\x02\\x02\\x02\\x02%\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\x02\\'\\x03\\x02\\x02\\x02\\x02)\\x03\\x02\\x02\\x02\\x02+\\x03\\x02\\x02\\x02\\x02-\" +\r\n\t\t\"\\x03\\x02\\x02\\x02\\x02/\\x03\\x02\\x02\\x02\\x021\\x03\\x02\\x02\\x02\\x023\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x025\\x03\\x02\\x02\\x02\\x027\\x03\\x02\\x02\\x02\\x029\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\x02;\\x03\\x02\\x02\\x02\\x02I\\x03\\x02\\x02\\x02\\x02K\\x03\\x02\\x02\\x02\\x02M\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x02O\\x03\\x02\\x02\\x02\\x03Q\\x03\\x02\\x02\\x02\\x05U\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\x07X\\x03\\x02\\x02\\x02\\t[\\x03\\x02\\x02\\x02\\v]\\x03\\x02\\x02\\x02\\r`\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x0Fc\\x03\\x02\\x02\\x02\\x11e\\x03\\x02\\x02\\x02\\x13g\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\x15i\\x03\\x02\\x02\\x02\\x17k\\x03\\x02\\x02\\x02\\x19m\\x03\\x02\\x02\\x02\\x1B\" +\r\n\t\t\"o\\x03\\x02\\x02\\x02\\x1Dr\\x03\\x02\\x02\\x02\\x1Ft\\x03\\x02\\x02\\x02!w\\x03\\x02\" +\r\n\t\t\"\\x02\\x02#z\\x03\\x02\\x02\\x02%~\\x03\\x02\\x02\\x02\\'\\x82\\x03\\x02\\x02\\x02)\\x86\" +\r\n\t\t\"\\x03\\x02\\x02\\x02+\\x8B\\x03\\x02\\x02\\x02-\\x91\\x03\\x02\\x02\\x02/\\x96\\x03\\x02\" +\r\n\t\t\"\\x02\\x021\\x98\\x03\\x02\\x02\\x023\\x9A\\x03\\x02\\x02\\x025\\x9E\\x03\\x02\\x02\\x02\" +\r\n\t\t\"7\\xA4\\x03\\x02\\x02\\x029\\xAC\\x03\\x02\\x02\\x02;\\xBA\\x03\\x02\\x02\\x02=\\xC4\\x03\" +\r\n\t\t\"\\x02\\x02\\x02?\\xD2\\x03\\x02\\x02\\x02A\\xD4\\x03\\x02\\x02\\x02C\\xD9\\x03\\x02\\x02\" +\r\n\t\t\"\\x02E\\xDF\\x03\\x02\\x02\\x02G\\xE1\\x03\\x02\\x02\\x02I\\xE4\\x03\\x02\\x02\\x02K\\xE9\" +\r\n\t\t\"\\x03\\x02\\x02\\x02M\\xEF\\x03\\x02\\x02\\x02O\\xFD\\x03\\x02\\x02\\x02QR\\x07T\\x02\" +\r\n\t\t\"\\x02RS\\x07G\\x02\\x02ST\\x07N\\x02\\x02T\\x04\\x03\\x02\\x02\\x02UV\\x07?\\x02\\x02\" +\r\n\t\t\"VW\\x07@\\x02\\x02W\\x06\\x03\\x02\\x02\\x02XY\\x07c\\x02\\x02YZ\\x07u\\x02\\x02Z\\b\" +\r\n\t\t\"\\x03\\x02\\x02\\x02[\\\\\\x07?\\x02\\x02\\\\\\n\\x03\\x02\\x02\\x02]^\\x07K\\x02\\x02^_\" +\r\n\t\t\"\\x07H\\x02\\x02_\\f\\x03\\x02\\x02\\x02`a\\x07F\\x02\\x02ab\\x07Q\\x02\\x02b\\x0E\\x03\" +\r\n\t\t\"\\x02\\x02\\x02cd\\x07}\\x02\\x02d\\x10\\x03\\x02\\x02\\x02ef\\x07.\\x02\\x02f\\x12\\x03\" +\r\n\t\t\"\\x02\\x02\\x02gh\\x07\\x7F\\x02\\x02h\\x14\\x03\\x02\\x02\\x02ij\\x070\\x02\\x02j\\x16\" +\r\n\t\t\"\\x03\\x02\\x02\\x02kl\\x07<\\x02\\x02l\\x18\\x03\\x02\\x02\\x02mn\\x07>\\x02\\x02n\\x1A\" +\r\n\t\t\"\\x03\\x02\\x02\\x02op\\x07>\\x02\\x02pq\\x07?\\x02\\x02q\\x1C\\x03\\x02\\x02\\x02rs\" +\r\n\t\t\"\\x07@\\x02\\x02s\\x1E\\x03\\x02\\x02\\x02tu\\x07@\\x02\\x02uv\\x07?\\x02\\x02v \\x03\" +\r\n\t\t\"\\x02\\x02\\x02wx\\x07?\\x02\\x02xy\\x07?\\x02\\x02y\\\"\\x03\\x02\\x02\\x02z{\\x07G\\x02\" +\r\n\t\t\"\\x02{|\\x07P\\x02\\x02|}\\x07V\\x02\\x02}$\\x03\\x02\\x02\\x02~\\x7F\\x07C\\x02\\x02\" +\r\n\t\t\"\\x7F\\x80\\x07E\\x02\\x02\\x80\\x81\\x07V\\x02\\x02\\x81&\\x03\\x02\\x02\\x02\\x82\\x83\" +\r\n\t\t\"\\x07G\\x02\\x02\\x83\\x84\\x07X\\x02\\x02\\x84\\x85\\x07V\\x02\\x02\\x85(\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\x86\\x87\\x07v\\x02\\x02\\x87\\x88\\x07t\\x02\\x02\\x88\\x89\\x07w\\x02\\x02\\x89\" +\r\n\t\t\"\\x8A\\x07g\\x02\\x02\\x8A*\\x03\\x02\\x02\\x02\\x8B\\x8C\\x07h\\x02\\x02\\x8C\\x8D\\x07\" +\r\n\t\t\"c\\x02\\x02\\x8D\\x8E\\x07n\\x02\\x02\\x8E\\x8F\\x07u\\x02\\x02\\x8F\\x90\\x07g\\x02\\x02\" +\r\n\t\t\"\\x90,\\x03\\x02\\x02\\x02\\x91\\x92\\x07p\\x02\\x02\\x92\\x93\\x07w\\x02\\x02\\x93\\x94\" +\r\n\t\t\"\\x07n\\x02\\x02\\x94\\x95\\x07n\\x02\\x02\\x95.\\x03\\x02\\x02\\x02\\x96\\x97\\x07]\\x02\" +\r\n\t\t\"\\x02\\x970\\x03\\x02\\x02\\x02\\x98\\x99\\x07_\\x02\\x02\\x992\\x03\\x02\\x02\\x02\\x9A\" +\r\n\t\t\"\\x9B\\x07n\\x02\\x02\\x9B\\x9C\\x07g\\x02\\x02\\x9C\\x9D\\x07v\\x02\\x02\\x9D4\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\x9E\\x9F\\x07r\\x02\\x02\\x9F\\xA0\\x07t\\x02\\x02\\xA0\\xA1\\x07k\\x02\\x02\" +\r\n\t\t\"\\xA1\\xA2\\x07p\\x02\\x02\\xA2\\xA3\\x07v\\x02\\x02\\xA36\\x03\\x02\\x02\\x02\\xA4\\xA5\" +\r\n\t\t\"\\x07k\\x02\\x02\\xA5\\xA6\\x07p\\x02\\x02\\xA6\\xA7\\x07u\\x02\\x02\\xA7\\xA8\\x07k\\x02\" +\r\n\t\t\"\\x02\\xA8\\xA9\\x07f\\x02\\x02\\xA9\\xAA\\x07g\\x02\\x02\\xAA8\\x03\\x02\\x02\\x02\\xAB\" +\r\n\t\t\"\\xAD\\x07/\\x02\\x02\\xAC\\xAB\\x03\\x02\\x02\\x02\\xAC\\xAD\\x03\\x02\\x02\\x02\\xAD\" +\r\n\t\t\"\\xAE\\x03\\x02\\x02\\x02\\xAE\\xB5\\x05? \\x02\\xAF\\xB1\\x070\\x02\\x02\\xB0\\xB2\\t\" +\r\n\t\t\"\\x02\\x02\\x02\\xB1\\xB0\\x03\\x02\\x02\\x02\\xB2\\xB3\\x03\\x02\\x02\\x02\\xB3\\xB1\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\xB3\\xB4\\x03\\x02\\x02\\x02\\xB4\\xB6\\x03\\x02\\x02\\x02\\xB5\\xAF\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\xB5\\xB6\\x03\\x02\\x02\\x02\\xB6\\xB8\\x03\\x02\\x02\\x02\\xB7\\xB9\\x05\" +\r\n\t\t\"=\\x1F\\x02\\xB8\\xB7\\x03\\x02\\x02\\x02\\xB8\\xB9\\x03\\x02\\x02\\x02\\xB9:\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\xBA\\xBF\\x07$\\x02\\x02\\xBB\\xBE\\x05A!\\x02\\xBC\\xBE\\x05G$\\x02\\xBD\" +\r\n\t\t\"\\xBB\\x03\\x02\\x02\\x02\\xBD\\xBC\\x03\\x02\\x02\\x02\\xBE\\xC1\\x03\\x02\\x02\\x02\\xBF\" +\r\n\t\t\"\\xBD\\x03\\x02\\x02\\x02\\xBF\\xC0\\x03\\x02\\x02\\x02\\xC0\\xC2\\x03\\x02\\x02\\x02\\xC1\" +\r\n\t\t\"\\xBF\\x03\\x02\\x02\\x02\\xC2\\xC3\\x07$\\x02\\x02\\xC3<\\x03\\x02\\x02\\x02\\xC4\\xC6\" +\r\n\t\t\"\\t\\x03\\x02\\x02\\xC5\\xC7\\t\\x04\\x02\\x02\\xC6\\xC5\\x03\\x02\\x02\\x02\\xC6\\xC7\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\xC7\\xC8\\x03\\x02\\x02\\x02\\xC8\\xC9\\x05? \\x02\\xC9>\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\xCA\\xD3\\x072\\x02\\x02\\xCB\\xCF\\t\\x05\\x02\\x02\\xCC\\xCE\\t\\x02\\x02\\x02\" +\r\n\t\t\"\\xCD\\xCC\\x03\\x02\\x02\\x02\\xCE\\xD1\\x03\\x02\\x02\\x02\\xCF\\xCD\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\xCF\\xD0\\x03\\x02\\x02\\x02\\xD0\\xD3\\x03\\x02\\x02\\x02\\xD1\\xCF\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\xD2\\xCA\\x03\\x02\\x02\\x02\\xD2\\xCB\\x03\\x02\\x02\\x02\\xD3@\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\xD4\\xD7\\x07^\\x02\\x02\\xD5\\xD8\\t\\x06\\x02\\x02\\xD6\\xD8\\x05C\\\"\\x02\\xD7\\xD5\" +\r\n\t\t\"\\x03\\x02\\x02\\x02\\xD7\\xD6\\x03\\x02\\x02\\x02\\xD8B\\x03\\x02\\x02\\x02\\xD9\\xDA\" +\r\n\t\t\"\\x07w\\x02\\x02\\xDA\\xDB\\x05E#\\x02\\xDB\\xDC\\x05E#\\x02\\xDC\\xDD\\x05E#\\x02\\xDD\" +\r\n\t\t\"\\xDE\\x05E#\\x02\\xDED\\x03\\x02\\x02\\x02\\xDF\\xE0\\t\\x07\\x02\\x02\\xE0F\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\xE1\\xE2\\n\\b\\x02\\x02\\xE2H\\x03\\x02\\x02\\x02\\xE3\\xE5\\t\\t\\x02\\x02\" +\r\n\t\t\"\\xE4\\xE3\\x03\\x02\\x02\\x02\\xE5\\xE6\\x03\\x02\\x02\\x02\\xE6\\xE4\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\xE6\\xE7\\x03\\x02\\x02\\x02\\xE7J\\x03\\x02\\x02\\x02\\xE8\\xEA\\t\\n\\x02\\x02\\xE9\" +\r\n\t\t\"\\xE8\\x03\\x02\\x02\\x02\\xEA\\xEB\\x03\\x02\\x02\\x02\\xEB\\xE9\\x03\\x02\\x02\\x02\\xEB\" +\r\n\t\t\"\\xEC\\x03\\x02\\x02\\x02\\xEC\\xED\\x03\\x02\\x02\\x02\\xED\\xEE\\b&\\x02\\x02\\xEEL\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\xEF\\xF0\\x071\\x02\\x02\\xF0\\xF1\\x07,\\x02\\x02\\xF1\\xF5\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\xF2\\xF4\\v\\x02\\x02\\x02\\xF3\\xF2\\x03\\x02\\x02\\x02\\xF4\\xF7\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\xF5\\xF6\\x03\\x02\\x02\\x02\\xF5\\xF3\\x03\\x02\\x02\\x02\\xF6\\xF8\\x03\\x02\" +\r\n\t\t\"\\x02\\x02\\xF7\\xF5\\x03\\x02\\x02\\x02\\xF8\\xF9\\x07,\\x02\\x02\\xF9\\xFA\\x071\\x02\" +\r\n\t\t\"\\x02\\xFA\\xFB\\x03\\x02\\x02\\x02\\xFB\\xFC\\b\\'\\x03\\x02\\xFCN\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\xFD\\xFE\\x071\\x02\\x02\\xFE\\xFF\\x071\\x02\\x02\\xFF\\u0103\\x03\\x02\\x02\\x02\\u0100\" +\r\n\t\t\"\\u0102\\n\\v\\x02\\x02\\u0101\\u0100\\x03\\x02\\x02\\x02\\u0102\\u0105\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\u0103\\u0101\\x03\\x02\\x02\\x02\\u0103\\u0104\\x03\\x02\\x02\\x02\\u0104\\u0106\" +\r\n\t\t\"\\x03\\x02\\x02\\x02\\u0105\\u0103\\x03\\x02\\x02\\x02\\u0106\\u0107\\b(\\x03\\x02\\u0107\" +\r\n\t\t\"P\\x03\\x02\\x02\\x02\\x11\\x02\\xAC\\xB3\\xB5\\xB8\\xBD\\xBF\\xC6\\xCF\\xD2\\xD7\\xE6\" +\r\n\t\t\"\\xEB\\xF5\\u0103\\x04\\x02\\x03\\x02\\b\\x02\\x02\";\r\n\tpublic static __ATN: ATN;\r\n\tpublic static get _ATN(): ATN {\r\n\t\tif (!FireLexer.__ATN) {\r\n\t\t\tFireLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FireLexer._serializedATN));\r\n\t\t}\r\n\r\n\t\treturn FireLexer.__ATN;\r\n\t}\r\n\r\n}\r\n\r\n","// Generated from ./src/parser/Fire.g4 by ANTLR 4.9.0-SNAPSHOT\r\n\r\n\r\nimport { ATN } from \"antlr4ts/atn/ATN\";\r\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\r\nimport { FailedPredicateException } from \"antlr4ts/FailedPredicateException\";\r\nimport { NotNull } from \"antlr4ts/Decorators\";\r\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\r\nimport { Override } from \"antlr4ts/Decorators\";\r\nimport { Parser } from \"antlr4ts/Parser\";\r\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\r\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\r\nimport { ParseTreeListener } from \"antlr4ts/tree/ParseTreeListener\";\r\nimport { ParseTreeVisitor } from \"antlr4ts/tree/ParseTreeVisitor\";\r\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\r\nimport { RuleContext } from \"antlr4ts/RuleContext\";\r\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\r\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\r\nimport { Token } from \"antlr4ts/Token\";\r\nimport { TokenStream } from \"antlr4ts/TokenStream\";\r\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\r\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\r\n\r\nimport * as Utils from \"antlr4ts/misc/Utils\";\r\n\r\nimport { FireListener } from \"./FireListener\";\r\nimport { FireVisitor } from \"./FireVisitor\";\r\n\r\n\r\nexport class FireParser extends Parser {\r\n\tpublic static readonly T__0 = 1;\r\n\tpublic static readonly T__1 = 2;\r\n\tpublic static readonly T__2 = 3;\r\n\tpublic static readonly T__3 = 4;\r\n\tpublic static readonly T__4 = 5;\r\n\tpublic static readonly T__5 = 6;\r\n\tpublic static readonly T__6 = 7;\r\n\tpublic static readonly T__7 = 8;\r\n\tpublic static readonly T__8 = 9;\r\n\tpublic static readonly T__9 = 10;\r\n\tpublic static readonly T__10 = 11;\r\n\tpublic static readonly T__11 = 12;\r\n\tpublic static readonly T__12 = 13;\r\n\tpublic static readonly T__13 = 14;\r\n\tpublic static readonly T__14 = 15;\r\n\tpublic static readonly T__15 = 16;\r\n\tpublic static readonly T__16 = 17;\r\n\tpublic static readonly T__17 = 18;\r\n\tpublic static readonly T__18 = 19;\r\n\tpublic static readonly T__19 = 20;\r\n\tpublic static readonly T__20 = 21;\r\n\tpublic static readonly T__21 = 22;\r\n\tpublic static readonly T__22 = 23;\r\n\tpublic static readonly T__23 = 24;\r\n\tpublic static readonly LET = 25;\r\n\tpublic static readonly PRINT = 26;\r\n\tpublic static readonly INSIDE = 27;\r\n\tpublic static readonly NUMBER = 28;\r\n\tpublic static readonly STRING = 29;\r\n\tpublic static readonly IDENTIFIER = 30;\r\n\tpublic static readonly WS = 31;\r\n\tpublic static readonly COMMENT = 32;\r\n\tpublic static readonly LINE_COMMENT = 33;\r\n\tpublic static readonly RULE_compilationUnit = 0;\r\n\tpublic static readonly RULE_stmt = 1;\r\n\tpublic static readonly RULE_relationStmt = 2;\r\n\tpublic static readonly RULE_assignStmt = 3;\r\n\tpublic static readonly RULE_printStmt = 4;\r\n\tpublic static readonly RULE_ifThenDoStmt = 5;\r\n\tpublic static readonly RULE_json = 6;\r\n\tpublic static readonly RULE_jsonObject = 7;\r\n\tpublic static readonly RULE_objectChildReference = 8;\r\n\tpublic static readonly RULE_variableName = 9;\r\n\tpublic static readonly RULE_keyValuePair = 10;\r\n\tpublic static readonly RULE_valueOperators = 11;\r\n\tpublic static readonly RULE_operatorNumberPair = 12;\r\n\tpublic static readonly RULE_primitiveEntity = 13;\r\n\tpublic static readonly RULE_value = 14;\r\n\tpublic static readonly RULE_arr = 15;\r\n\tpublic static readonly RULE_bool = 16;\r\n\t// tslint:disable:no-trailing-whitespace\r\n\tpublic static readonly ruleNames: string[] = [\r\n\t\t\"compilationUnit\", \"stmt\", \"relationStmt\", \"assignStmt\", \"printStmt\", \r\n\t\t\"ifThenDoStmt\", \"json\", \"jsonObject\", \"objectChildReference\", \"variableName\", \r\n\t\t\"keyValuePair\", \"valueOperators\", \"operatorNumberPair\", \"primitiveEntity\", \r\n\t\t\"value\", \"arr\", \"bool\",\r\n\t];\r\n\r\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\r\n\t\tundefined, \"'REL'\", \"'=>'\", \"'as'\", \"'='\", \"'IF'\", \"'DO'\", \"'{'\", \"','\", \r\n\t\t\"'}'\", \"'.'\", \"':'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\", \"'=='\", \"'ENT'\", \"'ACT'\", \r\n\t\t\"'EVT'\", \"'true'\", \"'false'\", \"'null'\", \"'['\", \"']'\", \"'let'\", \"'print'\", \r\n\t\t\"'inside'\",\r\n\t];\r\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, undefined, undefined, undefined, \r\n\t\tundefined, undefined, undefined, undefined, \"LET\", \"PRINT\", \"INSIDE\", \r\n\t\t\"NUMBER\", \"STRING\", \"IDENTIFIER\", \"WS\", \"COMMENT\", \"LINE_COMMENT\",\r\n\t];\r\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FireParser._LITERAL_NAMES, FireParser._SYMBOLIC_NAMES, []);\r\n\r\n\t// @Override\r\n\t// @NotNull\r\n\tpublic get vocabulary(): Vocabulary {\r\n\t\treturn FireParser.VOCABULARY;\r\n\t}\r\n\t// tslint:enable:no-trailing-whitespace\r\n\r\n\t// @Override\r\n\tpublic get grammarFileName(): string { return \"Fire.g4\"; }\r\n\r\n\t// @Override\r\n\tpublic get ruleNames(): string[] { return FireParser.ruleNames; }\r\n\r\n\t// @Override\r\n\tpublic get serializedATN(): string { return FireParser._serializedATN; }\r\n\r\n\tprotected createFailedPredicateException(predicate?: string, message?: string): FailedPredicateException {\r\n\t\treturn new FailedPredicateException(this, predicate, message);\r\n\t}\r\n\r\n\tconstructor(input: TokenStream) {\r\n\t\tsuper(input);\r\n\t\tthis._interp = new ParserATNSimulator(FireParser._ATN, this);\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic compilationUnit(): CompilationUnitContext {\r\n\t\tlet _localctx: CompilationUnitContext = new CompilationUnitContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 0, FireParser.RULE_compilationUnit);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 37;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << FireParser.T__0) | (1 << FireParser.T__4) | (1 << FireParser.T__16) | (1 << FireParser.T__17) | (1 << FireParser.T__18) | (1 << FireParser.LET) | (1 << FireParser.PRINT))) !== 0)) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 34;\r\n\t\t\t\tthis.stmt();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 39;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\tthis.state = 40;\r\n\t\t\tthis.match(FireParser.EOF);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic stmt(): StmtContext {\r\n\t\tlet _localctx: StmtContext = new StmtContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 2, FireParser.RULE_stmt);\r\n\t\ttry {\r\n\t\t\tthis.state = 46;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 1, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 42;\r\n\t\t\t\tthis.assignStmt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 43;\r\n\t\t\t\tthis.printStmt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 44;\r\n\t\t\t\tthis.relationStmt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 45;\r\n\t\t\t\tthis.ifThenDoStmt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic relationStmt(): RelationStmtContext {\r\n\t\tlet _localctx: RelationStmtContext = new RelationStmtContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 4, FireParser.RULE_relationStmt);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 48;\r\n\t\t\tthis.match(FireParser.T__0);\r\n\t\t\tthis.state = 49;\r\n\t\t\tthis.variableName();\r\n\t\t\tthis.state = 50;\r\n\t\t\tthis.match(FireParser.T__1);\r\n\t\t\tthis.state = 51;\r\n\t\t\tthis.variableName();\r\n\t\t\tthis.state = 52;\r\n\t\t\tthis.match(FireParser.T__2);\r\n\t\t\tthis.state = 53;\r\n\t\t\tthis.variableName();\r\n\t\t\tthis.state = 54;\r\n\t\t\tthis.match(FireParser.T__3);\r\n\t\t\tthis.state = 55;\r\n\t\t\tthis.value();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic assignStmt(): AssignStmtContext {\r\n\t\tlet _localctx: AssignStmtContext = new AssignStmtContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 6, FireParser.RULE_assignStmt);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 59;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase FireParser.T__0:\r\n\t\t\tcase FireParser.T__16:\r\n\t\t\tcase FireParser.T__17:\r\n\t\t\tcase FireParser.T__18:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 57;\r\n\t\t\t\tthis.primitiveEntity();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.LET:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 58;\r\n\t\t\t\tthis.match(FireParser.LET);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t\tthis.state = 61;\r\n\t\t\tthis.variableName();\r\n\t\t\tthis.state = 62;\r\n\t\t\tthis.match(FireParser.T__3);\r\n\t\t\tthis.state = 65;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 3, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 63;\r\n\t\t\t\tthis.arr();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 64;\r\n\t\t\t\tthis.value();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic printStmt(): PrintStmtContext {\r\n\t\tlet _localctx: PrintStmtContext = new PrintStmtContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 8, FireParser.RULE_printStmt);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 67;\r\n\t\t\tthis.match(FireParser.PRINT);\r\n\t\t\tthis.state = 70;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 4, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 68;\r\n\t\t\t\tthis.match(FireParser.STRING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 69;\r\n\t\t\t\tthis.value();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic ifThenDoStmt(): IfThenDoStmtContext {\r\n\t\tlet _localctx: IfThenDoStmtContext = new IfThenDoStmtContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 10, FireParser.RULE_ifThenDoStmt);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 72;\r\n\t\t\tthis.match(FireParser.T__4);\r\n\t\t\tthis.state = 73;\r\n\t\t\tthis.variableName();\r\n\t\t\t{\r\n\t\t\tthis.state = 74;\r\n\t\t\tthis.objectChildReference();\r\n\t\t\t}\r\n\t\t\tthis.state = 75;\r\n\t\t\tthis.operatorNumberPair();\r\n\t\t\tthis.state = 76;\r\n\t\t\tthis.match(FireParser.T__5);\r\n\t\t\tthis.state = 77;\r\n\t\t\tthis.variableName();\r\n\t\t\tthis.state = 78;\r\n\t\t\tthis.objectChildReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic json(): JsonContext {\r\n\t\tlet _localctx: JsonContext = new JsonContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 12, FireParser.RULE_json);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 83;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\twhile (_la === FireParser.T__6) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 80;\r\n\t\t\t\tthis.jsonObject();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 85;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t}\r\n\t\t\tthis.state = 86;\r\n\t\t\tthis.match(FireParser.EOF);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic jsonObject(): JsonObjectContext {\r\n\t\tlet _localctx: JsonObjectContext = new JsonObjectContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 14, FireParser.RULE_jsonObject);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 102;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 8, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 88;\r\n\t\t\t\tthis.match(FireParser.T__6);\r\n\t\t\t\tthis.state = 97;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\tif (_la === FireParser.STRING || _la === FireParser.IDENTIFIER) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 89;\r\n\t\t\t\t\tthis.keyValuePair();\r\n\t\t\t\t\tthis.state = 94;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\twhile (_la === FireParser.T__7) {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state = 90;\r\n\t\t\t\t\t\tthis.match(FireParser.T__7);\r\n\t\t\t\t\t\tthis.state = 91;\r\n\t\t\t\t\t\tthis.keyValuePair();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.state = 96;\r\n\t\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state = 99;\r\n\t\t\t\tthis.match(FireParser.T__8);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 100;\r\n\t\t\t\tthis.match(FireParser.T__6);\r\n\t\t\t\tthis.state = 101;\r\n\t\t\t\tthis.match(FireParser.T__8);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic objectChildReference(): ObjectChildReferenceContext {\r\n\t\tlet _localctx: ObjectChildReferenceContext = new ObjectChildReferenceContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 16, FireParser.RULE_objectChildReference);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 104;\r\n\t\t\tthis.match(FireParser.T__9);\r\n\t\t\tthis.state = 105;\r\n\t\t\tthis.variableName();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic variableName(): VariableNameContext {\r\n\t\tlet _localctx: VariableNameContext = new VariableNameContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 18, FireParser.RULE_variableName);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 107;\r\n\t\t\tthis.match(FireParser.IDENTIFIER);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic keyValuePair(): KeyValuePairContext {\r\n\t\tlet _localctx: KeyValuePairContext = new KeyValuePairContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 20, FireParser.RULE_keyValuePair);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 109;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (!(_la === FireParser.STRING || _la === FireParser.IDENTIFIER)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\r\n\t\t\t\t\tthis.matchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\tthis.consume();\r\n\t\t\t}\r\n\t\t\tthis.state = 110;\r\n\t\t\tthis.match(FireParser.T__10);\r\n\t\t\tthis.state = 113;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 9, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 111;\r\n\t\t\t\tthis.value();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 112;\r\n\t\t\t\tthis.jsonObject();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic valueOperators(): ValueOperatorsContext {\r\n\t\tlet _localctx: ValueOperatorsContext = new ValueOperatorsContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 22, FireParser.RULE_valueOperators);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 115;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << FireParser.T__11) | (1 << FireParser.T__12) | (1 << FireParser.T__13) | (1 << FireParser.T__14) | (1 << FireParser.T__15))) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\r\n\t\t\t\t\tthis.matchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\tthis.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic operatorNumberPair(): OperatorNumberPairContext {\r\n\t\tlet _localctx: OperatorNumberPairContext = new OperatorNumberPairContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 24, FireParser.RULE_operatorNumberPair);\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 117;\r\n\t\t\tthis.valueOperators();\r\n\t\t\tthis.state = 118;\r\n\t\t\tthis.value();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic primitiveEntity(): PrimitiveEntityContext {\r\n\t\tlet _localctx: PrimitiveEntityContext = new PrimitiveEntityContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 26, FireParser.RULE_primitiveEntity);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 120;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << FireParser.T__0) | (1 << FireParser.T__16) | (1 << FireParser.T__17) | (1 << FireParser.T__18))) !== 0))) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\r\n\t\t\t\t\tthis.matchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\tthis.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic value(): ValueContext {\r\n\t\tlet _localctx: ValueContext = new ValueContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 28, FireParser.RULE_value);\r\n\t\ttry {\r\n\t\t\tthis.state = 130;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch (this._input.LA(1)) {\r\n\t\t\tcase FireParser.STRING:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 122;\r\n\t\t\t\tthis.match(FireParser.STRING);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.NUMBER:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 123;\r\n\t\t\t\tthis.match(FireParser.NUMBER);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.T__6:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 124;\r\n\t\t\t\tthis.jsonObject();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.T__22:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 125;\r\n\t\t\t\tthis.arr();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.T__19:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 5);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 126;\r\n\t\t\t\tthis.match(FireParser.T__19);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.T__20:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 6);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 127;\r\n\t\t\t\tthis.match(FireParser.T__20);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.T__21:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 7);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 128;\r\n\t\t\t\tthis.match(FireParser.T__21);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase FireParser.IDENTIFIER:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 8);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 129;\r\n\t\t\t\tthis.variableName();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic arr(): ArrContext {\r\n\t\tlet _localctx: ArrContext = new ArrContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 30, FireParser.RULE_arr);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.state = 145;\r\n\t\t\tthis._errHandler.sync(this);\r\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 12, this._ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 132;\r\n\t\t\t\tthis.match(FireParser.T__22);\r\n\t\t\t\tthis.state = 133;\r\n\t\t\t\tthis.value();\r\n\t\t\t\tthis.state = 138;\r\n\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\twhile (_la === FireParser.T__7) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.state = 134;\r\n\t\t\t\t\tthis.match(FireParser.T__7);\r\n\t\t\t\t\tthis.state = 135;\r\n\t\t\t\t\tthis.value();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.state = 140;\r\n\t\t\t\t\tthis._errHandler.sync(this);\r\n\t\t\t\t\t_la = this._input.LA(1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state = 141;\r\n\t\t\t\tthis.match(FireParser.T__23);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tthis.state = 143;\r\n\t\t\t\tthis.match(FireParser.T__22);\r\n\t\t\t\tthis.state = 144;\r\n\t\t\t\tthis.match(FireParser.T__23);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\t// @RuleVersion(0)\r\n\tpublic bool(): BoolContext {\r\n\t\tlet _localctx: BoolContext = new BoolContext(this._ctx, this.state);\r\n\t\tthis.enterRule(_localctx, 32, FireParser.RULE_bool);\r\n\t\tlet _la: number;\r\n\t\ttry {\r\n\t\t\tthis.enterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tthis.state = 147;\r\n\t\t\t_la = this._input.LA(1);\r\n\t\t\tif (!(_la === FireParser.T__19 || _la === FireParser.T__20)) {\r\n\t\t\tthis._errHandler.recoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\r\n\t\t\t\t\tthis.matchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._errHandler.reportMatch(this);\r\n\t\t\t\tthis.consume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (re) {\r\n\t\t\tif (re instanceof RecognitionException) {\r\n\t\t\t\t_localctx.exception = re;\r\n\t\t\t\tthis._errHandler.reportError(this, re);\r\n\t\t\t\tthis._errHandler.recover(this, re);\r\n\t\t\t} else {\r\n\t\t\t\tthrow re;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tthis.exitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic static readonly _serializedATN: string =\r\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03#\\x98\\x04\\x02\" +\r\n\t\t\"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\r\n\t\t\"\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\\x04\" +\r\n\t\t\"\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x04\\x12\\t\\x12\\x03\" +\r\n\t\t\"\\x02\\x07\\x02&\\n\\x02\\f\\x02\\x0E\\x02)\\v\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\" +\r\n\t\t\"\\x03\\x03\\x03\\x03\\x05\\x031\\n\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\" +\r\n\t\t\"\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x05\\x03\\x05\\x05\\x05>\\n\\x05\\x03\\x05\" +\r\n\t\t\"\\x03\\x05\\x03\\x05\\x03\\x05\\x05\\x05D\\n\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x05\\x06\" +\r\n\t\t\"I\\n\\x06\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\" +\r\n\t\t\"\\x03\\b\\x07\\bT\\n\\b\\f\\b\\x0E\\bW\\v\\b\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\t\\x03\\t\\x07\" +\r\n\t\t\"\\t_\\n\\t\\f\\t\\x0E\\tb\\v\\t\\x05\\td\\n\\t\\x03\\t\\x03\\t\\x03\\t\\x05\\ti\\n\\t\\x03\\n\\x03\" +\r\n\t\t\"\\n\\x03\\n\\x03\\v\\x03\\v\\x03\\f\\x03\\f\\x03\\f\\x03\\f\\x05\\ft\\n\\f\\x03\\r\\x03\\r\\x03\" +\r\n\t\t\"\\x0E\\x03\\x0E\\x03\\x0E\\x03\\x0F\\x03\\x0F\\x03\\x10\\x03\\x10\\x03\\x10\\x03\\x10\\x03\" +\r\n\t\t\"\\x10\\x03\\x10\\x03\\x10\\x03\\x10\\x05\\x10\\x85\\n\\x10\\x03\\x11\\x03\\x11\\x03\\x11\" +\r\n\t\t\"\\x03\\x11\\x07\\x11\\x8B\\n\\x11\\f\\x11\\x0E\\x11\\x8E\\v\\x11\\x03\\x11\\x03\\x11\\x03\" +\r\n\t\t\"\\x11\\x03\\x11\\x05\\x11\\x94\\n\\x11\\x03\\x12\\x03\\x12\\x03\\x12\\x02\\x02\\x02\\x13\" +\r\n\t\t\"\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\\x02\\f\\x02\\x0E\\x02\\x10\\x02\\x12\\x02\\x14\" +\r\n\t\t\"\\x02\\x16\\x02\\x18\\x02\\x1A\\x02\\x1C\\x02\\x1E\\x02 \\x02\\\"\\x02\\x02\\x06\\x03\\x02\" +\r\n\t\t\"\\x1F \\x03\\x02\\x0E\\x12\\x04\\x02\\x03\\x03\\x13\\x15\\x03\\x02\\x16\\x17\\x02\\x9B\" +\r\n\t\t\"\\x02\\'\\x03\\x02\\x02\\x02\\x040\\x03\\x02\\x02\\x02\\x062\\x03\\x02\\x02\\x02\\b=\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\nE\\x03\\x02\\x02\\x02\\fJ\\x03\\x02\\x02\\x02\\x0EU\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\x10h\\x03\\x02\\x02\\x02\\x12j\\x03\\x02\\x02\\x02\\x14m\\x03\\x02\\x02\\x02\\x16o\\x03\" +\r\n\t\t\"\\x02\\x02\\x02\\x18u\\x03\\x02\\x02\\x02\\x1Aw\\x03\\x02\\x02\\x02\\x1Cz\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\x1E\\x84\\x03\\x02\\x02\\x02 \\x93\\x03\\x02\\x02\\x02\\\"\\x95\\x03\\x02\\x02\\x02\" +\r\n\t\t\"$&\\x05\\x04\\x03\\x02%$\\x03\\x02\\x02\\x02&)\\x03\\x02\\x02\\x02\\'%\\x03\\x02\\x02\" +\r\n\t\t\"\\x02\\'(\\x03\\x02\\x02\\x02(*\\x03\\x02\\x02\\x02)\\'\\x03\\x02\\x02\\x02*+\\x07\\x02\" +\r\n\t\t\"\\x02\\x03+\\x03\\x03\\x02\\x02\\x02,1\\x05\\b\\x05\\x02-1\\x05\\n\\x06\\x02.1\\x05\\x06\" +\r\n\t\t\"\\x04\\x02/1\\x05\\f\\x07\\x020,\\x03\\x02\\x02\\x020-\\x03\\x02\\x02\\x020.\\x03\\x02\" +\r\n\t\t\"\\x02\\x020/\\x03\\x02\\x02\\x021\\x05\\x03\\x02\\x02\\x0223\\x07\\x03\\x02\\x0234\\x05\" +\r\n\t\t\"\\x14\\v\\x0245\\x07\\x04\\x02\\x0256\\x05\\x14\\v\\x0267\\x07\\x05\\x02\\x0278\\x05\\x14\" +\r\n\t\t\"\\v\\x0289\\x07\\x06\\x02\\x029:\\x05\\x1E\\x10\\x02:\\x07\\x03\\x02\\x02\\x02;>\\x05\" +\r\n\t\t\"\\x1C\\x0F\\x02<>\\x07\\x1B\\x02\\x02=;\\x03\\x02\\x02\\x02=<\\x03\\x02\\x02\\x02>?\\x03\" +\r\n\t\t\"\\x02\\x02\\x02?@\\x05\\x14\\v\\x02@C\\x07\\x06\\x02\\x02AD\\x05 \\x11\\x02BD\\x05\\x1E\" +\r\n\t\t\"\\x10\\x02CA\\x03\\x02\\x02\\x02CB\\x03\\x02\\x02\\x02D\\t\\x03\\x02\\x02\\x02EH\\x07\" +\r\n\t\t\"\\x1C\\x02\\x02FI\\x07\\x1F\\x02\\x02GI\\x05\\x1E\\x10\\x02HF\\x03\\x02\\x02\\x02HG\\x03\" +\r\n\t\t\"\\x02\\x02\\x02I\\v\\x03\\x02\\x02\\x02JK\\x07\\x07\\x02\\x02KL\\x05\\x14\\v\\x02LM\\x05\" +\r\n\t\t\"\\x12\\n\\x02MN\\x05\\x1A\\x0E\\x02NO\\x07\\b\\x02\\x02OP\\x05\\x14\\v\\x02PQ\\x05\\x12\" +\r\n\t\t\"\\n\\x02Q\\r\\x03\\x02\\x02\\x02RT\\x05\\x10\\t\\x02SR\\x03\\x02\\x02\\x02TW\\x03\\x02\" +\r\n\t\t\"\\x02\\x02US\\x03\\x02\\x02\\x02UV\\x03\\x02\\x02\\x02VX\\x03\\x02\\x02\\x02WU\\x03\\x02\" +\r\n\t\t\"\\x02\\x02XY\\x07\\x02\\x02\\x03Y\\x0F\\x03\\x02\\x02\\x02Zc\\x07\\t\\x02\\x02[`\\x05\" +\r\n\t\t\"\\x16\\f\\x02\\\\]\\x07\\n\\x02\\x02]_\\x05\\x16\\f\\x02^\\\\\\x03\\x02\\x02\\x02_b\\x03\\x02\" +\r\n\t\t\"\\x02\\x02`^\\x03\\x02\\x02\\x02`a\\x03\\x02\\x02\\x02ad\\x03\\x02\\x02\\x02b`\\x03\\x02\" +\r\n\t\t\"\\x02\\x02c[\\x03\\x02\\x02\\x02cd\\x03\\x02\\x02\\x02de\\x03\\x02\\x02\\x02ei\\x07\\v\" +\r\n\t\t\"\\x02\\x02fg\\x07\\t\\x02\\x02gi\\x07\\v\\x02\\x02hZ\\x03\\x02\\x02\\x02hf\\x03\\x02\\x02\" +\r\n\t\t\"\\x02i\\x11\\x03\\x02\\x02\\x02jk\\x07\\f\\x02\\x02kl\\x05\\x14\\v\\x02l\\x13\\x03\\x02\" +\r\n\t\t\"\\x02\\x02mn\\x07 \\x02\\x02n\\x15\\x03\\x02\\x02\\x02op\\t\\x02\\x02\\x02ps\\x07\\r\\x02\" +\r\n\t\t\"\\x02qt\\x05\\x1E\\x10\\x02rt\\x05\\x10\\t\\x02sq\\x03\\x02\\x02\\x02sr\\x03\\x02\\x02\" +\r\n\t\t\"\\x02t\\x17\\x03\\x02\\x02\\x02uv\\t\\x03\\x02\\x02v\\x19\\x03\\x02\\x02\\x02wx\\x05\\x18\" +\r\n\t\t\"\\r\\x02xy\\x05\\x1E\\x10\\x02y\\x1B\\x03\\x02\\x02\\x02z{\\t\\x04\\x02\\x02{\\x1D\\x03\" +\r\n\t\t\"\\x02\\x02\\x02|\\x85\\x07\\x1F\\x02\\x02}\\x85\\x07\\x1E\\x02\\x02~\\x85\\x05\\x10\\t\" +\r\n\t\t\"\\x02\\x7F\\x85\\x05 \\x11\\x02\\x80\\x85\\x07\\x16\\x02\\x02\\x81\\x85\\x07\\x17\\x02\" +\r\n\t\t\"\\x02\\x82\\x85\\x07\\x18\\x02\\x02\\x83\\x85\\x05\\x14\\v\\x02\\x84|\\x03\\x02\\x02\\x02\" +\r\n\t\t\"\\x84}\\x03\\x02\\x02\\x02\\x84~\\x03\\x02\\x02\\x02\\x84\\x7F\\x03\\x02\\x02\\x02\\x84\" +\r\n\t\t\"\\x80\\x03\\x02\\x02\\x02\\x84\\x81\\x03\\x02\\x02\\x02\\x84\\x82\\x03\\x02\\x02\\x02\\x84\" +\r\n\t\t\"\\x83\\x03\\x02\\x02\\x02\\x85\\x1F\\x03\\x02\\x02\\x02\\x86\\x87\\x07\\x19\\x02\\x02\\x87\" +\r\n\t\t\"\\x8C\\x05\\x1E\\x10\\x02\\x88\\x89\\x07\\n\\x02\\x02\\x89\\x8B\\x05\\x1E\\x10\\x02\\x8A\" +\r\n\t\t\"\\x88\\x03\\x02\\x02\\x02\\x8B\\x8E\\x03\\x02\\x02\\x02\\x8C\\x8A\\x03\\x02\\x02\\x02\\x8C\" +\r\n\t\t\"\\x8D\\x03\\x02\\x02\\x02\\x8D\\x8F\\x03\\x02\\x02\\x02\\x8E\\x8C\\x03\\x02\\x02\\x02\\x8F\" +\r\n\t\t\"\\x90\\x07\\x1A\\x02\\x02\\x90\\x94\\x03\\x02\\x02\\x02\\x91\\x92\\x07\\x19\\x02\\x02\\x92\" +\r\n\t\t\"\\x94\\x07\\x1A\\x02\\x02\\x93\\x86\\x03\\x02\\x02\\x02\\x93\\x91\\x03\\x02\\x02\\x02\\x94\" +\r\n\t\t\"!\\x03\\x02\\x02\\x02\\x95\\x96\\t\\x05\\x02\\x02\\x96#\\x03\\x02\\x02\\x02\\x0F\\'0=C\" +\r\n\t\t\"HU`chs\\x84\\x8C\\x93\";\r\n\tpublic static __ATN: ATN;\r\n\tpublic static get _ATN(): ATN {\r\n\t\tif (!FireParser.__ATN) {\r\n\t\t\tFireParser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FireParser._serializedATN));\r\n\t\t}\r\n\r\n\t\treturn FireParser.__ATN;\r\n\t}\r\n\r\n}\r\n\r\nexport class CompilationUnitContext extends ParserRuleContext {\r\n\tpublic EOF(): TerminalNode { return this.getToken(FireParser.EOF, 0); }\r\n\tpublic stmt(): StmtContext[];\r\n\tpublic stmt(i: number): StmtContext;\r\n\tpublic stmt(i?: number): StmtContext | StmtContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(StmtContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, StmtContext);\r\n\t\t}\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_compilationUnit; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterCompilationUnit) {\r\n\t\t\tlistener.enterCompilationUnit(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitCompilationUnit) {\r\n\t\t\tlistener.exitCompilationUnit(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitCompilationUnit) {\r\n\t\t\treturn visitor.visitCompilationUnit(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class StmtContext extends ParserRuleContext {\r\n\tpublic assignStmt(): AssignStmtContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, AssignStmtContext);\r\n\t}\r\n\tpublic printStmt(): PrintStmtContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, PrintStmtContext);\r\n\t}\r\n\tpublic relationStmt(): RelationStmtContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, RelationStmtContext);\r\n\t}\r\n\tpublic ifThenDoStmt(): IfThenDoStmtContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, IfThenDoStmtContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_stmt; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterStmt) {\r\n\t\t\tlistener.enterStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitStmt) {\r\n\t\t\tlistener.exitStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitStmt) {\r\n\t\t\treturn visitor.visitStmt(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class RelationStmtContext extends ParserRuleContext {\r\n\tpublic variableName(): VariableNameContext[];\r\n\tpublic variableName(i: number): VariableNameContext;\r\n\tpublic variableName(i?: number): VariableNameContext | VariableNameContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(VariableNameContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, VariableNameContext);\r\n\t\t}\r\n\t}\r\n\tpublic value(): ValueContext {\r\n\t\treturn this.getRuleContext(0, ValueContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_relationStmt; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterRelationStmt) {\r\n\t\t\tlistener.enterRelationStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitRelationStmt) {\r\n\t\t\tlistener.exitRelationStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitRelationStmt) {\r\n\t\t\treturn visitor.visitRelationStmt(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AssignStmtContext extends ParserRuleContext {\r\n\tpublic variableName(): VariableNameContext {\r\n\t\treturn this.getRuleContext(0, VariableNameContext);\r\n\t}\r\n\tpublic primitiveEntity(): PrimitiveEntityContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, PrimitiveEntityContext);\r\n\t}\r\n\tpublic LET(): TerminalNode | undefined { return this.tryGetToken(FireParser.LET, 0); }\r\n\tpublic arr(): ArrContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, ArrContext);\r\n\t}\r\n\tpublic value(): ValueContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, ValueContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_assignStmt; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterAssignStmt) {\r\n\t\t\tlistener.enterAssignStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitAssignStmt) {\r\n\t\t\tlistener.exitAssignStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitAssignStmt) {\r\n\t\t\treturn visitor.visitAssignStmt(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class PrintStmtContext extends ParserRuleContext {\r\n\tpublic PRINT(): TerminalNode { return this.getToken(FireParser.PRINT, 0); }\r\n\tpublic STRING(): TerminalNode | undefined { return this.tryGetToken(FireParser.STRING, 0); }\r\n\tpublic value(): ValueContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, ValueContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_printStmt; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterPrintStmt) {\r\n\t\t\tlistener.enterPrintStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitPrintStmt) {\r\n\t\t\tlistener.exitPrintStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitPrintStmt) {\r\n\t\t\treturn visitor.visitPrintStmt(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class IfThenDoStmtContext extends ParserRuleContext {\r\n\tpublic variableName(): VariableNameContext[];\r\n\tpublic variableName(i: number): VariableNameContext;\r\n\tpublic variableName(i?: number): VariableNameContext | VariableNameContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(VariableNameContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, VariableNameContext);\r\n\t\t}\r\n\t}\r\n\tpublic operatorNumberPair(): OperatorNumberPairContext {\r\n\t\treturn this.getRuleContext(0, OperatorNumberPairContext);\r\n\t}\r\n\tpublic objectChildReference(): ObjectChildReferenceContext[];\r\n\tpublic objectChildReference(i: number): ObjectChildReferenceContext;\r\n\tpublic objectChildReference(i?: number): ObjectChildReferenceContext | ObjectChildReferenceContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(ObjectChildReferenceContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, ObjectChildReferenceContext);\r\n\t\t}\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_ifThenDoStmt; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterIfThenDoStmt) {\r\n\t\t\tlistener.enterIfThenDoStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitIfThenDoStmt) {\r\n\t\t\tlistener.exitIfThenDoStmt(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitIfThenDoStmt) {\r\n\t\t\treturn visitor.visitIfThenDoStmt(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JsonContext extends ParserRuleContext {\r\n\tpublic EOF(): TerminalNode { return this.getToken(FireParser.EOF, 0); }\r\n\tpublic jsonObject(): JsonObjectContext[];\r\n\tpublic jsonObject(i: number): JsonObjectContext;\r\n\tpublic jsonObject(i?: number): JsonObjectContext | JsonObjectContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(JsonObjectContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, JsonObjectContext);\r\n\t\t}\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_json; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterJson) {\r\n\t\t\tlistener.enterJson(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitJson) {\r\n\t\t\tlistener.exitJson(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitJson) {\r\n\t\t\treturn visitor.visitJson(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class JsonObjectContext extends ParserRuleContext {\r\n\tpublic keyValuePair(): KeyValuePairContext[];\r\n\tpublic keyValuePair(i: number): KeyValuePairContext;\r\n\tpublic keyValuePair(i?: number): KeyValuePairContext | KeyValuePairContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(KeyValuePairContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, KeyValuePairContext);\r\n\t\t}\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_jsonObject; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterJsonObject) {\r\n\t\t\tlistener.enterJsonObject(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitJsonObject) {\r\n\t\t\tlistener.exitJsonObject(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitJsonObject) {\r\n\t\t\treturn visitor.visitJsonObject(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ObjectChildReferenceContext extends ParserRuleContext {\r\n\tpublic variableName(): VariableNameContext {\r\n\t\treturn this.getRuleContext(0, VariableNameContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_objectChildReference; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterObjectChildReference) {\r\n\t\t\tlistener.enterObjectChildReference(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitObjectChildReference) {\r\n\t\t\tlistener.exitObjectChildReference(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitObjectChildReference) {\r\n\t\t\treturn visitor.visitObjectChildReference(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class VariableNameContext extends ParserRuleContext {\r\n\tpublic IDENTIFIER(): TerminalNode { return this.getToken(FireParser.IDENTIFIER, 0); }\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_variableName; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterVariableName) {\r\n\t\t\tlistener.enterVariableName(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitVariableName) {\r\n\t\t\tlistener.exitVariableName(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitVariableName) {\r\n\t\t\treturn visitor.visitVariableName(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class KeyValuePairContext extends ParserRuleContext {\r\n\tpublic IDENTIFIER(): TerminalNode | undefined { return this.tryGetToken(FireParser.IDENTIFIER, 0); }\r\n\tpublic STRING(): TerminalNode | undefined { return this.tryGetToken(FireParser.STRING, 0); }\r\n\tpublic value(): ValueContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, ValueContext);\r\n\t}\r\n\tpublic jsonObject(): JsonObjectContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, JsonObjectContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_keyValuePair; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterKeyValuePair) {\r\n\t\t\tlistener.enterKeyValuePair(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitKeyValuePair) {\r\n\t\t\tlistener.exitKeyValuePair(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitKeyValuePair) {\r\n\t\t\treturn visitor.visitKeyValuePair(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueOperatorsContext extends ParserRuleContext {\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_valueOperators; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterValueOperators) {\r\n\t\t\tlistener.enterValueOperators(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitValueOperators) {\r\n\t\t\tlistener.exitValueOperators(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitValueOperators) {\r\n\t\t\treturn visitor.visitValueOperators(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class OperatorNumberPairContext extends ParserRuleContext {\r\n\tpublic valueOperators(): ValueOperatorsContext {\r\n\t\treturn this.getRuleContext(0, ValueOperatorsContext);\r\n\t}\r\n\tpublic value(): ValueContext {\r\n\t\treturn this.getRuleContext(0, ValueContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_operatorNumberPair; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterOperatorNumberPair) {\r\n\t\t\tlistener.enterOperatorNumberPair(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitOperatorNumberPair) {\r\n\t\t\tlistener.exitOperatorNumberPair(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitOperatorNumberPair) {\r\n\t\t\treturn visitor.visitOperatorNumberPair(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class PrimitiveEntityContext extends ParserRuleContext {\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_primitiveEntity; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterPrimitiveEntity) {\r\n\t\t\tlistener.enterPrimitiveEntity(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitPrimitiveEntity) {\r\n\t\t\tlistener.exitPrimitiveEntity(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitPrimitiveEntity) {\r\n\t\t\treturn visitor.visitPrimitiveEntity(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ValueContext extends ParserRuleContext {\r\n\tpublic STRING(): TerminalNode | undefined { return this.tryGetToken(FireParser.STRING, 0); }\r\n\tpublic NUMBER(): TerminalNode | undefined { return this.tryGetToken(FireParser.NUMBER, 0); }\r\n\tpublic jsonObject(): JsonObjectContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, JsonObjectContext);\r\n\t}\r\n\tpublic arr(): ArrContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, ArrContext);\r\n\t}\r\n\tpublic variableName(): VariableNameContext | undefined {\r\n\t\treturn this.tryGetRuleContext(0, VariableNameContext);\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_value; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterValue) {\r\n\t\t\tlistener.enterValue(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitValue) {\r\n\t\t\tlistener.exitValue(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitValue) {\r\n\t\t\treturn visitor.visitValue(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class ArrContext extends ParserRuleContext {\r\n\tpublic value(): ValueContext[];\r\n\tpublic value(i: number): ValueContext;\r\n\tpublic value(i?: number): ValueContext | ValueContext[] {\r\n\t\tif (i === undefined) {\r\n\t\t\treturn this.getRuleContexts(ValueContext);\r\n\t\t} else {\r\n\t\t\treturn this.getRuleContext(i, ValueContext);\r\n\t\t}\r\n\t}\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_arr; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterArr) {\r\n\t\t\tlistener.enterArr(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitArr) {\r\n\t\t\tlistener.exitArr(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitArr) {\r\n\t\t\treturn visitor.visitArr(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class BoolContext extends ParserRuleContext {\r\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n\t\tsuper(parent, invokingState);\r\n\t}\r\n\t// @Override\r\n\tpublic get ruleIndex(): number { return FireParser.RULE_bool; }\r\n\t// @Override\r\n\tpublic enterRule(listener: FireListener): void {\r\n\t\tif (listener.enterBool) {\r\n\t\t\tlistener.enterBool(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic exitRule(listener: FireListener): void {\r\n\t\tif (listener.exitBool) {\r\n\t\t\tlistener.exitBool(this);\r\n\t\t}\r\n\t}\r\n\t// @Override\r\n\tpublic accept<Result>(visitor: FireVisitor<Result>): Result {\r\n\t\tif (visitor.visitBool) {\r\n\t\t\treturn visitor.visitBool(this);\r\n\t\t} else {\r\n\t\t\treturn visitor.visitChildren(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst TerminalLine = (props) => {\r\n    const [type, setType] = useState(props.type);\r\n    let output = ``;\r\n    \r\n    const filterByType = (type) => {\r\n        switch(type){\r\n            case \"err\":\r\n                return <pre>{props.children}</pre>\r\n            case \"string\":\r\n                return <pre>{props.children.value}</pre>\r\n            case \"alert\":\r\n                for(const property in props.children){\r\n                    output += `${property}: ${props.children[property]}`\r\n                    output += `\\n`\r\n                }\r\n                return <pre>{output}</pre>\r\n            default:\r\n                return <pre>{props.children.name} {JSON.stringify(props.children.values, null, '\\t')}</pre>\r\n        }\r\n    }\r\n    return (\r\n        <Container type={type}>\r\n            {\r\n                filterByType(type)\r\n            }\r\n        </Container>\r\n     );\r\n}\r\n\r\nconst Container = styled.div`\r\n    background:black;\r\n    color:${props => {\r\n        switch(props.type){\r\n            case \"err\":\r\n                return \"red\"\r\n            case \"string\":\r\n                return \"white\"\r\n            case \"alert\":\r\n                return \"yellow\"\r\n            default:\r\n                return \"white\"\r\n        }\r\n    }};\r\n    position: relative;\r\n    font-size:1.2em;\r\n    \r\n    &::before {\r\n        background-color: rgb(44, 46, 47);\r\n        height:100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        content:'${props => {\r\n        switch(props.type){\r\n            case \"err\":\r\n                return \"ERR >\"\r\n            case \"string\":\r\n                return \"OUT >\"\r\n            case \"alert\":\r\n                return \"EVT >\"\r\n            default:\r\n                return \"OUT >\"\r\n        }\r\n    }}'};\r\n    \r\n        color:${props => {\r\n        switch(props.type){\r\n            case \"err\":\r\n                return \"red\"\r\n            case \"string\":\r\n                return \"white\"\r\n            case \"alert\":\r\n                return \"yellow\"\r\n            default:\r\n                return \"white\"\r\n        }\r\n    }};\r\n\r\n        font-family: monospace;\r\n        font-size:1.2em;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n    }\r\n\r\n    & > pre{\r\n        white-space: pre-wrap;\r\n    }\r\n`;\r\nexport default TerminalLine;","import { ANTLRErrorListener } from \"antlr4ts\";\r\n\r\nexport class FireErrorListener implements ANTLRErrorListener<any>  {\r\n   errorMessages = [];\r\n\r\n  syntaxError<T>(\r\n    recognizer: any,\r\n    offendingSymbol: T,\r\n    line: number,\r\n    charPositionInLine: number,\r\n    msg: string,\r\n    e: any\r\n  ) {\r\n    console.log(\r\n      `${line}:${charPositionInLine} ${msg} ${offendingSymbol}`\r\n    );\r\n    this.errorMessages.push (`${line}:${charPositionInLine} ${msg}`);\r\n  }\r\n  reportAmbiguity<T>(\r\n    recognizer: any,\r\n    dfa: any,\r\n    startIndex: number,\r\n    stopIndex: number,\r\n    exact: boolean,\r\n    ambigAlts: T[],\r\n    configs: any\r\n  ) {\r\n    console.log(\r\n      `reportAmbiguity ${startIndex} ${stopIndex} ${exact} ${JSON.stringify(\r\n        ambigAlts\r\n      )} ${JSON.stringify(configs)}`\r\n    );\r\n  }\r\n  reportAttemptingFullContext<T>(\r\n    recognizer: any,\r\n    dfa: any,\r\n    startIndex: number,\r\n    stopIndex: number,\r\n    conflictingAlts: T[],\r\n    configs: any\r\n  ) {\r\n    console.log(\r\n      `reportAttemptingFullContext ${startIndex} ${stopIndex} ${JSON.stringify(\r\n        conflictingAlts\r\n      )} ${JSON.stringify(configs)}`\r\n    );\r\n  }\r\n  reportContextSensitivity<T>(\r\n    recognizer: any,\r\n    dfa: any,\r\n    startIndex: number,\r\n    stopIndex: number,\r\n    prediction: number,\r\n    configs: any\r\n  ) {\r\n    console.log(\r\n      `reportContextSensitivity ${startIndex} ${stopIndex} ${prediction} ${JSON.stringify(\r\n        configs\r\n      )}`\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n","import './App.css';\r\nimport Editor from 'react-simple-code-editor';\r\nimport Terminal from './components/Terminal';\r\nimport React, { useState } from 'react';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport \"prismjs/themes/prism-dark.css\";\r\nimport { ANTLRInputStream, CommonTokenStream } from 'antlr4ts';\r\nimport { FireLexer } from './parser/FireLexer.ts'\r\nimport { FireParser } from './parser/FireParser.ts'\r\nimport  Visitor  from './parser/Visitor.ts';\r\nimport styled from 'styled-components';\r\nimport TerminalLine from './components/TerminalLine';\r\nimport {FireErrorListener} from './parser/FireErrorListener.ts';\r\n\r\nlet codeString = ``;\r\nlet codeQueueString = ``;\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [code, setCode] = useState(codeString);\r\n  const [codeQueue, setCodeQueue] = useState(codeQueueString);\r\n  \r\n  let version = '0.0.4';\r\n  let chars = new ANTLRInputStream(code);\r\n  let lexer = new FireLexer(chars);\r\n  let tokens  = new CommonTokenStream(lexer);\r\n  let parser = new FireParser(tokens);\r\n  let parserErrorListener = new FireErrorListener();\r\n  let lexerErrorListener = new FireErrorListener();\r\n\r\n  parser.removeErrorListeners();\r\n  parser.addErrorListener(parserErrorListener)\r\n  lexer.removeErrorListeners();\r\n  lexer.addErrorListener(lexerErrorListener)\r\n  parser.buildParseTrees = true;\r\n  let tree = parser.compilationUnit();\r\n  let visitor = new Visitor();\r\n  visitor.visit(tree);\r\n  \r\n  let printables = visitor.getPrintables();\r\n  let defineErrors = visitor.getDefineErrors();\r\n  let alertInvocations = visitor.getAlertInvocations();\r\n\r\n  const focusTextArea = () => {\r\n    document.getElementsByTagName('textarea')[0].focus();\r\n  }\r\n\r\n  const clear = () => {\r\n    setCode(``);\r\n    setCodeQueue(``);\r\n  }\r\n  const importFile = () => {\r\n    clear();\r\n    document.getElementById('getFile').value = null;\r\n    document.getElementById('getFile').click();\r\n  }\r\n  const pushQueue = () => {\r\n    // document.body.scrollTop = document.documentElement.scrollTop = 0;\r\n    setCode(codeQueue);\r\n  }\r\n  \r\n  const hightlightWithLineNumbers = (input, language) =>\r\n  highlight(input, language)\r\n    .split(\"\\n\")\r\n    .map((line, i) => `<span class='editorLineNumber'>${i + 1}</span>${line}`)\r\n    .join(\"\\n\");\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonWrapper>\r\n      <p style={{color:'white'}}>ver: {version}</p>\r\n      <RunButton onClick={()=>pushQueue()}>\r\n      Run\r\n      </RunButton>\r\n\r\n      <RunButton onClick={()=>clear()}>\r\n        Clear\r\n      </RunButton>\r\n      \r\n      \r\n      <RunButton onClick={()=>importFile()}>\r\n      Import from file\r\n      <input type=\"file\" id=\"getFile\" onChange={(e)=>{\r\n        let file = e.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          setCodeQueue(e.target.result);\r\n        }\r\n        reader.readAsText(file);\r\n      }\r\n      }\r\n\r\n      style={{display:'none'}}/>\r\n      </RunButton>\r\n\r\n      </ButtonWrapper>\r\n\r\n      <EditorWrapper onClick={()=>focusTextArea()}>\r\n\r\n          <Editor\r\n            value={codeQueue}\r\n            onValueChange={code => setCodeQueue(code)}\r\n            highlight={code => hightlightWithLineNumbers(code, languages.js)}\r\n            className={`language-javascript editor`}\r\n            />\r\n    </EditorWrapper>\r\n\r\n\r\n      <p className='terminal-line' />\r\n\r\n    <Terminal id=\"terminal\" >\r\n      {printables.map((printable, index) => {\r\n        return <TerminalLine type={printable.type} key={index}>{printable}</TerminalLine>\r\n      })}\r\n\r\n      {parserErrorListener.errorMessages.map((error, index) => {\r\n        return <TerminalLine type={'err'} key={index}>PARSER ERROR: {error}</TerminalLine>\r\n      })}\r\n\r\n      {lexerErrorListener.errorMessages.map((error, index) => {\r\n        return <TerminalLine type={'err'} key={index}>LEXER ERROR: {error}</TerminalLine>\r\n      })}\r\n\r\n      {defineErrors.map((error, index) => {\r\n          return <TerminalLine type={'err'} key={index}>{error}</TerminalLine>\r\n        })\r\n      }\r\n      {alertInvocations.map((alertInvocation, index) => {\r\n          return <TerminalLine type={'alert'} key={index}>{alertInvocation}</TerminalLine>\r\n        })\r\n      }\r\n      \r\n    </Terminal>\r\n</Container>  \r\n);\r\n}\r\n\r\nconst Container = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  min-height:100%;\r\n  height:100vh;\r\n  & > div{\r\n    width:100%;\r\n  }\r\n  && .terminal-line{\r\n    width: 100%;\r\n    background-color: white;\r\n    margin:1px 1px;\r\n  }\r\n`\r\nconst RunButton = styled.button`\r\n  top:0;\r\n  background:green;\r\n  color:white;\r\n  width:20%;\r\n  height:100%;\r\n  cursor: pointer;\r\n`\r\nconst ButtonWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  height:5%;\r\n  min-height: 5%;\r\n  width:100%;\r\n  background-color:rgb(44, 46, 47);\r\n  `;\r\nconst EditorWrapper = styled.div`\r\n  height:65%;\r\n  min-height: 65%;\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  background-color: black;\r\n  cursor: text;\r\n`\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"names":["module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","_arrayWithoutHoles","isArray","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","Function","bind","prototype","arguments","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","unsupportedIterableToArray","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","value","e","_e","f","err","normalCompletion","didErr","call","step","next","_e2","getPrototypeOf","possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","result","Super","NewTarget","this","constructor","superPropBase","_get","get","property","receiver","base","desc","getOwnPropertyDescriptor","_getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_isNativeFunction","fn","toString","indexOf","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","from","_nonIterableSpread","_typeof","assertThisInitialized","_possibleConstructorReturn","_setPrototypeOf","p","_superPropBase","object","hasOwnProperty","arrayWithoutHoles","iterableToArray","nonIterableSpread","_toConsumableArray","obj","_unsupportedIterableToArray","minLen","slice","name","test","isNativeFunction","_wrapNativeSuper","_cache","Map","undefined","has","set","Wrapper","Visitor","visitCompilationUnit","visitStmt","visitJson","visitJsonObject","visitVariableName","visitKeyValuePair","visitValue","visitArr","visitBool","visitObjectChildReference","objects","relations","arrays","printables","defineErrors","alertInvocations","visit","tree","accept","visitTerminal","node","Error","visitErrorNode","subjectName","text","ctx","start","line","visitAssignStmt","prefix","children","objName","objValues","console","log","type","values","JSON","parse","arrValues","split","map","includes","visitIfThenDoStmt","ifIndex","findIndex","child","doIndex","ifSubject","ifFieldReference","substring","operatorNumberPair","operator","number","doSubject","subjects","forEach","subject","getLineNumber","checkIfValueIsDefined","ifSubjectObject","doSubjectObject","eval","entries","relation","entity","entity1","invocation","invoker","activity","event","eventGoal","goal","eventLocation","location","invokerDesc","visitRelationStmt","relationENT1","relationENT2","relationName","relationValue","variable","entity2","visitPrintStmt","printValue","setPrintables","visitPrimitiveEntity","visitChildren","getObjects","getRelations","getArrays","getAlertInvocations","getPrintables","getDefineErrors","printable","ANTLRInputStream","input","data","reset","consume","assert","LA","IntStream_1","EOF","charCodeAt","LT","mark","release","marker","seek","index","Math","min","getText","interval","stop","b","count","substr","UNKNOWN_SOURCE_NAME","__decorate","Decorators_1","BailErrorStrategy","recover","recognizer","context","parent","exception","ParseCancellationException_1","recoverInline","InputMismatchException_1","sync","DefaultErrorStrategy_1","BufferedTokenStream","tokenSource","tokens","fetchedEOF","_tokenSource","lazyInit","adjustSeekIndex","Token_1","fetch","t","nextToken","isWritableToken","tokenIndex","RangeError","getRange","subset","token","INVALID_TYPE","tryLB","k","tryLT","setup","getTokens","types","Set","add","typesSet","filteredTokens","filter","nextTokenOnChannel","channel","size","previousTokenOnChannel","getHiddenTokensToRight","to","nextOnChannel","Lexer_1","DEFAULT_TOKEN_CHANNEL","filterForChannel","getHiddenTokensToLeft","prevOnChannel","hidden","sourceName","Interval_1","of","sourceInterval","fill","buf","getTextFromRange","isToken","CommonToken_1","__param","CharStreams","fromString","codePointBufferBuilder","CodePointBuffer_1","builder","cb","Uint16Array","append","CodePointCharStream_1","fromBuffer","build","CodePointBuffer","buffer","_position","_size","newPosition","position","offset","array","initialBufferSize","Builder","Type","Uint8Array","prevHighSurrogate","ensureRemaining","remainingNeeded","newCapacity","roundUpToNextPowerOfTwo","newBuffer","subarray","Int32Array","utf16In","appendArray","appendArrayByte","appendArrayChar","appendArrayInt","inOffset","inLimit","outByte","outOffset","c","Character","isHighSurrogate","byteToIntBuffer","byteToCharBuffer","outChar","charToIntBuffer","outInt","isLowSurrogate","String","fromCharCode","codePointAt","toAppend","max","nextPowerOfTwo","clz32","pow","CodePointCharStream","remaining","_array","_name","sign","startIdx","fromCodePoint","codePointBuffer","CommonToken","source","EMPTY_SOURCE","DEFAULT_CHANNEL","_line","_charPositionInLine","_channel","_text","_type","charPositionInLine","inputStream","stream","channelStr","txt","replace","typeString","vocabulary","getDisplayName","oldToken","startIndex","stopIndex","CommonTokenFactory","copyText","createSimple","CommonTokenStream","getNumberOfOnChannelTokens","BufferedTokenStream_1","ConsoleErrorListener","syntaxError","offendingSymbol","msg","error","NotNull","propertyKey","propertyDescriptor","Nullable","Override","SuppressWarnings","options","DefaultErrorStrategy","errorRecoveryMode","lastErrorIndex","nextTokensState","ATNState_1","INVALID_STATE_NUMBER","endErrorCondition","beginErrorCondition","inErrorRecoveryMode","lastErrorStates","reportMatch","reportError","NoViableAltException_1","reportNoViableAlternative","reportInputMismatch","FailedPredicateException_1","reportFailedPredicate","notifyErrorListeners","message","offendingToken","getOffendingToken","contains","state","IntervalSet_1","followSet","getErrorRecoverySet","consumeUntil","interpreter","atn","states","la","nextTokens","nextTokensContext","EPSILON","stateType","ATNStateType_1","BLOCK_START","STAR_BLOCK_START","PLUS_BLOCK_START","STAR_LOOP_ENTRY","singleTokenDeletion","PLUS_LOOP_BACK","STAR_LOOP_BACK","reportUnwantedToken","whatFollowsLoopIterationOrRule","getExpectedTokens","or","startToken","escapeWSAndQuote","expected","expectedTokens","expectedString","toStringVocabulary","getTokenErrorDisplay","ruleNames","ruleIndex","currentToken","reportMissingToken","matchedSymbol","singleTokenInsertion","getMissingSymbol","currentSymbolType","transition","PredictionContext_1","fromRuleContext","nextTokenType","tokenText","currentSymbol","expecting","expectedTokenType","isNil","minElement","current","lookback","constructToken","factory","tokenFactory","x","getSymbolText","getSymbolType","symbol","recoverSet","invokingState","rt","follow","followState","addAll","_parent","remove","ttype","Dependents","DiagnosticErrorListener","exactOnly","reportAmbiguity","dfa","exact","ambigAlts","configs","decision","getDecisionDescription","conflictingAlts","getConflictingAlts","reportAttemptingFullContext","conflictState","reportContextSensitivity","prediction","acceptState","atnStartState","ruleName","reportedAlts","BitSet_1","config","alt","FailedPredicateException","predicate","formatMessage","trans","PredicateTransition_1","_ruleIndex","_predicateIndex","predIndex","_predicate","RecognitionException_1","InputMismatchException","setOffendingState","setOffendingToken","IntStream","InterpreterRuleContext","invokingStateNumber","ParserRuleContext_1","Lexer","_factory","CommonTokenFactory_1","DEFAULT","_tokenStartCharIndex","_tokenStartLine","_tokenStartCharPositionInLine","_hitEOF","_modeStack","IntegerStack_1","_mode","DEFAULT_MODE","_input","_tokenFactorySourcePair","resetInput","_token","clear","tokenStartMarker","outer","emitEOF","match","LexerNoViableAltException_1","notifyListeners","SKIP","MORE","emit","skip","more","mode","m","pushMode","LexerATNSimulator_1","debug","popMode","isEmpty","peek","pop","charIndex","cpos","eof","getAllTokens","getErrorDisplay","listener","getErrorListenerDispatch","getCharErrorDisplay","re","HIDDEN_CHANNEL","Recognizer_1","LexerInterpreter","grammarFileName","channelNames","modeNames","grammarType","_grammarFileName","_atn","_ruleNames","_channelNames","_modeNames","_vocabulary","_interp","Decorators_2","LexerNoViableAltException","lexer","deadEndConfigs","_startIndex","_deadEndConfigs","Utils","escapeWhitespace","ListTokenSource","_sourceName","eofToken","lastToken","lastNewLine","lastIndexOf","previousStop","charAt","NoViableAltException","Parser_1","_startToken","TraceListener","tokenStream","enterEveryRule","exitEveryRule","ruleContext","Parser","_errHandler","_precedenceStack","_buildParseTrees","_parseListeners","_syntaxErrors","matchedEOF","_ctx","isTrace","addErrorNode","createErrorNode","matchWildcard","buildParseTrees","getParseListeners","addParseListener","removeParseListener","l","splice","removeParseListeners","triggerEnterRuleEvent","enterRule","triggerExitRuleEvent","exitRule","getATNWithBypassAlts","serializedAtn","serializedATN","bypassAltsAtnCache","deserializationOptions","ATNDeserializationOptions_1","isGenerateRuleBypassTransitions","ATNDeserializer_1","deserialize","toCharArray","compileParseTreePattern","pattern","patternRuleIndex","currentLexer","matcher","ParseTreePatternMatcher","compile","handler","hasListener","createTerminalNode","addChild","TerminalNode_1","ErrorNode_1","addContextToParseTree","localctx","_start","enterLeftFactoredRule","factoredContext","getChild","childCount","removeLastChild","_stop","enterOuterAlt","altNum","altNumber","enterRecursionRule","precedence","pushNewRecursionContext","previous","unrollRecursionContexts","_parentctx","retctx","getInvokingContext","precpred","ProxyParserErrorListener_1","getErrorListeners","inContext","isExpectedToken","following","getExpectedTokensWithinCurrentRule","getRuleIndex","getRuleIndexMap","getRuleInvocationStack","stack","getDFAStrings","decisionToDFA","dumpDFA","seenOne","process","stdout","write","Promise","then","interp","ProfilingATNSimulator","ParseInfo_1","setProfile","profile","ParserATNSimulator_1","setPredictionMode","getPredictionMode","_tracer","trace","ParserInterpreter","_parentContextStack","overrideDecision","overrideDecisionInputIndex","overrideDecisionAlt","overrideDecisionReached","_overrideDecisionRoot","old","pushRecursionContextStates","StarLoopEntryState_1","precedenceRuleDecision","stateNumber","startRuleIndex","startRuleStartState","ruleToStartState","_rootContext","createInterpreterRuleContext","isPrecedenceRule","atnState","RULE_STOP","parentContext","visitRuleStopState","visitState","ruleToStopState","errorHandler","predictedAlt","numberOfTransitions","visitDecisionState","serializationType","LoopEndState_1","_label","matches","MIN_USER_TOKEN_TYPE","ruleStartState","newctx","predicateTransition","sempred","actionTransition","action","actionIndex","adaptivePredict","InterpreterRuleContext_1","ruleTransition","addDecisionOverride","forcedAlt","tok","sourcePair","errToken","ParserRuleContext","copyFrom","addAnyChild","setParent","RuleContext_1","errorNode","badToken","ctxType","tryGetChild","j","getToken","tryGetToken","getRuleContext","tryGetRuleContext","getRuleContexts","contexts","INVALID","toInfoString","reverse","EMPTY","ProxyErrorListener","delegates","getDelegates","ProxyParserErrorListener","ProxyErrorListener_1","RecognitionException","_offendingState","_recognizer","offendingState","Recognizer","_listeners","ConsoleErrorListener_1","INSTANCE","_stateNumber","getTokenTypeMap","tokenTypeMapCache","intermediateResult","maxTokenType","literalName","getLiteralName","symbolicName","getSymbolicName","ruleIndexMapCache","toMap","getTokenType","tokenName","resolve","getErrorHeader","addErrorListener","removeErrorListener","removeErrorListeners","_localctx","WeakMap","RuleContext","depth","ATN_1","INVALID_ALT_NUMBER","visitor","toStringTree","recog","Trees_1","arg1","emptyContext","RuleNode_1","RuleContextWithAltNum","_altNumber","RuleDependency","dependency","RuleVersion","version","Token","TokenStreamRewriter","programs","DEFAULT_PROGRAM_NAME","lastRewriteTokenIndexes","getTokenStream","rollback","instructionIndex","programName","is","MIN_TOKEN_INDEX","deleteProgram","insertAfter","tokenOrIndex","rewrites","getProgram","op","InsertAfterOp","insertBefore","InsertBeforeOp","replaceSingle","ReplaceOp","getLastRewriteTokenIndex","I","setLastRewriteTokenIndex","initializeProgram","intervalOrProgram","indexToOp","reduceToSingleOperationPerIndex","delete","execute","join","rop","inserts","getKindOfOps","iop","lastIndex","prevReplaces","prevRop","disjoint","prevInserts","prevIop","catOpText","y","kind","before","ops","RewriteOperation","opName","$index","VocabularyImpl","literalNames","symbolicNames","displayNames","_maxTokenType","tokenType","displayName","ATN","decisionToState","modeNameToStartState","modeToStartState","contextCache","Array2DHashMap_1","ObjectEqualityComparator_1","modeToDFA","LL1Table","clearDFA","DFA_1","getCachedContext","IdentityHashMap","getDecisionToDFA","LL1Analyzer_1","LOOK","nextTokenWithinRule","EMPTY_LOCAL","setReadonly","addState","removeState","invalidState","InvalidState_1","defineMode","defineDecisionState","getDecisionState","SUPPRESS_PRECEDENCE_FILTER","ATNConfig","altOrConfig","_state","altAndOuterContextDepth","_context","outerContextDepth","SemanticContext_1","NONE","clone","transform","checkNonGreedy","arg2","transformImpl","semanticContext","lexerActionExecutor","passedThroughNonGreedy","checkNonGreedyDecision","ActionSemanticContextATNConfig","SemanticContextATNConfig","ActionATNConfig","appendContext","appendedContext","appendSingleContext","subconfig","equals","leftWorkList","rightWorkList","left","right","hasEmpty","findReturnState","getReturnState","getParent","reachesIntoOuterContext","isPrecedenceFilterSuppressed","hasPassedThroughNonGreedyDecision","hashCode","MurmurHash_1","initialize","update","finish","toDotString","visited","IdentityEqualityComparator","workList","getOrAddContext","newNumber","putIfAbsent","put","showAlt","showContext","toStrings","first","contextDesc","DecisionState_1","nonGreedy","_semanticContext","passedThroughNonGreedyDecision","_lexerActionExecutor","KeyTypeEqualityComparer","NewKeyedConfigMap","ATNConfigSet","readonly","_uniqueAlt","_hasSemanticContext","_dipsIntoOuterContext","outermostConfigSet","cachedHashCode","mergedConfigs","unmerged","isReadOnly","_conflictInfo","getRepresentedAlternatives","conflictedAlts","alts","getStates","Array2DHashSet_1","optimizeConfigs","copy","ATNConfig_1","configKey","getKey","mergedConfig","canMerge","toArray","ensureWritable","addKey","PredictionContextCache_1","UNCACHED","joined","updatePropertiesForMergedConfig","unmergedConfig","updatePropertiesForAddedConfig","leftKey","containsAll","changed","group","ArrayEqualityComparator_1","sortedConfigs","sort","o1","o2","localeCompare","isExact","conflictInfo","ATNDeserializationOptions","readOnly","verifyATN","generateRuleBypassTransitions","optimize","makeReadOnly","throwIfReadOnly","_defaultOptions","UnicodeDeserializingMode","ATNDeserializer","defaultOptions","toInt","SERIALIZED_VERSION","reason","uuid","toUUID","SUPPORTED_UUIDS","SERIALIZED_UUID","supportsLexerActions","isFeatureSupported","ADDED_LEXER_ACTIONS","loopBackStateNumbers","endStateNumbers","nstates","stype","stateFactory","LOOP_END","loopBackStateNumber","BlockStartState_1","endStateNumber","pair","loopBackState","endState","numNonGreedyStates","numSllDecisions","sll","numPrecedenceStates","nrules","ruleToTokenType","startState","leftFactored","actionIndexIgnored","RuleStopState_1","stopState","nmodes","sets","deserializeSets","getUnicodeDeserializer","ADDED_UNICODE_SMP","nedges","src","trg","arg3","edgeFactory","addTransition","returnTransitionsSet","returnState","outermostPrecedenceReturn","returnTransitions","returningToLeftFactored","RuleTransition_1","returnTransition","EpsilonTransition_1","PlusLoopbackState_1","loopbackState","PlusBlockStartState_1","StarLoopbackState_1","ndecisions","decState","lexerActions","actionType","data1","data2","lexerAction","lexerActionFactory","legacyLexerActions","ActionTransition_1","LexerCustomAction_1","setTransition","markPrecedenceDecisions","isVerifyATN","bypassStart","BasicBlockStartState_1","bypassStop","BlockEndState_1","excludeTransition","maybeLoopEndState","epsilonOnlyTransitions","removeTransition","matchState","BasicState_1","AtomTransition_1","isOptimize","optimizationCount","inlineSetRules","combineChainedEpsilons","preserveOrder","optimizeSets","identifyTailCalls","unicodeDeserializer","nsets","nintervals","readUnicode","rulePrecedenceDecisions","precedenceLoopbackStates","precedenceDecision","getTransitions","checkCondition","onlyHasEpsilonTransitions","starLoopEntryState","StarBlockStartState_1","RuleStartState_1","decisionState","condition","RangeTransition_1","PrecedencePredicateTransition_1","SetTransition_1","NotSetTransition_1","WildcardTransition_1","BASIC","RULE_START","TOKEN_START","TokensStartState_1","BLOCK_END","LexerChannelAction_1","LexerModeAction_1","LexerMoreAction_1","LexerPopModeAction_1","LexerPushModeAction_1","LexerSkipAction_1","LexerTypeAction_1","feature","actualUuid","featureIndex","toInt32","inlinedCalls","ruleToInlineTransition","middleState","numberOfOptimizedTransitions","getOptimizedTransition","matchTransition","matchTarget","isEpsilon","optimizedTransitions","effective","intermediateState","setRuleIndex","label","isOptimized","removeOptimizedTransition","addOptimizedTransition","removedEdges","nextTransition","intermediate","removedPaths","decisions","setTransitions","epsTransition","blockEndState","matchSet","intervals","newTransition","matchInterval","setOptimizedState","tailCall","testTailCall","optimizedTailCall","optimizedPath","reachable","worklist","transitionCount","leastSigBits","lessSigBits","moreSigBits","mostSigBits","UUID_1","BASE_SERIALIZED_UUID","ATNSimulator","_ERROR","DFAState_1","ATNConfigSet_1","EMPTY_FULL_STATE_KEY","ATNState","transitions","getStateNumber","setOptimizedTransition","ATNStateType","AbstractPredicateTransition","Transition_1","ActionTransition","isCtxDependent","minVocabSymbol","maxVocabSymbol","AmbiguityInfo","useContext","DecisionEventInfo_1","AtomTransition","BasicBlockStartState","BasicState","BlockEndState","BlockStartState","ConflictInfo","_conflictedAlts","ContextSensitivityInfo","DecisionEventInfo","fullCtx","DecisionInfo","invocations","timeInPrediction","SLL_TotalLook","SLL_MinLook","SLL_MaxLook","LL_TotalLook","LL_MinLook","LL_MaxLook","contextSensitivities","errors","ambiguities","predicateEvals","SLL_ATNTransitions","SLL_DFATransitions","LL_Fallback","LL_ATNTransitions","LL_DFATransitions","DecisionState","EpsilonTransition","_outermostPrecedenceReturn","ErrorInfo","InvalidState","LL1Analyzer","getDecisionLookahead","look","lookBusy","_LOOK","HIT_PRED","r","calledRuleStack","seeThruPreds","addEOF","isEmptyLocal","removed","newContext","AbstractPredicateTransition_1","complement","LexerATNSimulator","optimize_tail_calls","prevAccept","SimState","copyState","simulator","s0","matchATN","execATN","old_mode","s0_closure","computeStartState","suppressEdge","hasSemanticContext","addDFAState","predict","toLexerString","ds0","isAcceptState","captureSimState","getExistingTargetState","computeTargetState","ATNSimulator_1","ERROR","failOrAccept","getTarget","reach","OrderedATNConfigSet_1","getReachableConfigSet","addDFAEdge","dfaState","charPos","closure","skipAlt","currentAltReachedAcceptState","getTokenName","ti","getReachableTarget","fixOffsetBeforeMatch","treatEofAsEpsilon","MIN_CHAR_VALUE","MAX_CHAR_VALUE","initialContext","EMPTY_FULL","speculative","returnStateNumber","getEpsilonTarget","pt","evaluatePredicate","LexerActionExecutor_1","savedCharPositionInLine","savedLine","settings","q","setTarget","proposed","existing","firstConfigWithRuleStopState","newState","acceptStateInfo","AcceptStateInfo_1","getDFA","LexerActionExecutor","_lexerActions","hash","updatedLexerActions","isPositionDependent","LexerIndexedCustomAction_1","requiresSeek","LexerChannelAction","LexerCustomAction","_actionIndex","LexerIndexedCustomAction","_offset","_action","LexerModeAction","LexerMoreAction","LexerPopModeAction","LexerPushModeAction","LexerSkipAction","LexerTypeAction","LookaheadEventInfo","LoopEndState","NotSetTransition","OrderedATNConfigSet","ParseInfo","atnSimulator","getDecisionInfo","getLLDecisions","LL","getTotalTimeInPrediction","getTotalSLLLookaheadOps","getTotalLLLookaheadOps","getTotalSLLATNLookaheadOps","getTotalLLATNLookaheadOps","getTotalATNLookaheadOps","getDFASize","MIN_INTEGER_VALUE","ParserATNSimulator","parser","predictionMode","PredictionMode_1","force_global_context","always_try_local_context","enable_global_context_dfa","optimize_unique_closure","optimize_ll1","tail_call_preserves_sll","treat_sllk1_conflict_as_ambiguity","reportAmbiguities","userWantsCtxSensitive","_parser","outerContext","isPrecedenceDfa","ll_1","isContextSensitive","SLL","getStartState","getLookaheadName","execDFA","getPrecedenceStartState","SimulatorState_1","remainingContext","s0full","skipTailCalls","getContextTarget","dfa_debug","remainingOuterContext","isContextSymbol","initialState","predicates","errorState","handleNoViableAlt","dipsIntoOuterContext","isExactConflict","conflictIndex","evalSemanticContext","cardinality","nextSetBit","LL_EXACT_AMBIG_DETECTION","noViableAlt","nextState","computeReachSet","setDFAEdge","D","attemptFullContext","predPredictions","fullContextState","maxAlt","filteredConfigs","altToPred","getPredsForAmbigAlts","getPredicatePredictions","filteredAlts","remainingGlobalContext","contextElements","stepIntoGlobal","closureConfigs","hasMoreContext","isOutermostConfigSet","reachIntermediate","skippedStopStates","uniqueAlt","removeAllConfigsNotInRuleStopState","hasConfigInRuleStopState","nextContextElement","IntegerList_1","allConfigsInRuleStopStates","globalContext","setContextSensitive","previousContext","applyPrecedenceFilter","setPrecedenceStartState","setContextTarget","statesFromAlt1","configSet","updatedContext","evalPrecedence","predicateDFAState","nalts","getConflictingAltsFromConfigSet","nPredAlts","Arrays_1","pairs","containsPredicate","pred","PredPrediction","complete","predictions","evaluatedResult","evalSemanticContextImpl","parserCallStack","sourceConfigs","collectPredicates","currentConfigs","closureBusy","closureImpl","hasMoreContexts","getRuleName","nonEmptySize","suppress","continueCollecting","newDepth","precedenceTransition","predTransition","newSemCtx","and","isConflicted","configset","STATE_ALT_SORT_COMPARATOR","minAlt","representedAlts","currentState","nonStopStateNumber","currentAlt","firstIndexCurrentState","lastIndexCurrentStateMinAlt","joinedCheckContext","joinedCheckContext2","lastIndexCurrentStateCurrentAlt","config2","check","ConflictInfo_1","VocabularyImpl_1","EMPTY_VOCABULARY","dumpDeadEndConfigs","nvae","getUniqueAlt","configWithAltAtStopState","fromState","contextTransitions","toConfigs","setContextSymbol","addDFAContextState","returnContext","contextConfigs","enableDfa","createDFAState","added","retry_debug","diff","PlusBlockStartState","PlusLoopbackState","PrecedencePredicateTransition","PrecedencePredicate","PredicateEvalInfo","semctx","evalResult","PredicateTransition","Predicate","PredictionContext","SingletonPredictionContext","perm","last","localBuffer","bits","mask","parents","returnStates","fullContext","addEmptyContext","removeEmptyContext","context0","context1","context0size","context1size","merged","parentsList","returnStatesList","leftIndex","rightIndex","canReturnLeft","canReturnRight","ArrayPredictionContext","updated","EmptyPredictionContext","calculateEmptyHashCode","suffix","calculateHashCode","binarySearch","parents2","returnStates2","appendContextImpl","other","equalsImpl","selfWorkList","otherWorkList","currentSelf","currentOther","operands","IdentityCommutativePredictionContextOperands","selfSize","selfParent","otherParent","parentCount","updatedParents","updatedReturnStates","calculateSingleHashCode","PredictionContextCache","enableCache","childContexts","joinContexts","getAsCached","PredictionContextAndInt","_x","_y","PredictionMode","AltAndContextConfigEqualityComparator","_sllStopIndex","_llStopIndex","currentDecision","conflictingAltResolvedBySLL","numDecisions","DecisionInfo_1","hrtime","nanoseconds","SLL_k","SLL_MaxLookEvent","LookaheadEventInfo_1","LL_k","LL_MaxLookEvent","reachState","ErrorInfo_1","previousD","existingTargetState","targetState","PredicateEvalInfo_1","ContextSensitivityInfo_1","AmbiguityInfo_1","getCurrentState","RangeTransition","RuleStartState","RuleStopState","RuleTransition","ruleStart","SemanticContext","_NONE","AND","opnds","OR","filterPrecedencePredicates","collection","compareTo","Operator","reduced","items","differs","evaluated","SetTransition","SimulatorState","StarBlockStartState","StarLoopEntryState","StarLoopbackState","TokensStartState","Transition","WildcardTransition","AcceptStateInfo","_prediction","DFA","nextStateNumber","precedenceDfa","getEdgeMap","getOrAdd","DFASerializer_1","LexerDFASerializer_1","DFASerializer","edges","edgeKeys","keys","contextEdges","getContextEdgeMap","contextEdgeKeys","entry","contextSymbol","getStateString","getEdgeLabel","getContextLabel","output","EMPTY_LOCAL_STATE_KEY","stateStr","DFAState","contextSymbols","_acceptStateInfo","LexerDFASerializer","__exportStar","MapKeyEqualityComparator","keyComparator","Array2DHashMap","keyComparer","backingStore","containsKey","bucket","element","INITAL_CAPACITY","LOAD_FACTOR","Array2DHashSet","comparatorOrSet","initialCapacity","threshold","floor","comparator","buckets","DefaultEqualityComparator_1","createBuckets","expand","getOrAddImpl","getBucket","newTable","oldSize","newBucket","containsFast","asElementType","toTableString","capacity","ArrayEqualityComparator","Arrays","fromIndex","toIndex","binarySearch0","low","high","mid","midVal","EMPTY_DATA","getIndex","bitNumber","unIndex","findLSBSet","word","bit","findMSBSet","bitsFor","fromBit","toBit","POP_CNT","stride","BitSet","arg","v","words","lastWord","andNot","flip","intersects","smallerLength","bound","previousSetBit","nextClearBit","ignore","minWords","dest","longer","previousClearBit","temp","_setBits","byteLength","xor","BitSetIterator","util","inspect","custom","ch","isSupplementaryCodePoint","DefaultEqualityComparator","MAX_ARRAY_SIZE","IntegerList","_data","ensureCapacity","list","xi","removeAt","copyWithin","removeRange","trimToSize","newLength","tmp","resultArray","resultIdx","calculatedPreciseResultSize","codePoint","newResultArray","charArraySize","IntegerStack","Interval","startsBeforeDisjoint","startsBeforeNonDisjoint","startsAfter","startsAfterDisjoint","startsAfterNonDisjoint","adjacent","properlyContains","union","intersection","differenceNotProperlyContained","_INVALID","cache","INTERVAL_POOL_MAX_VALUE","IntervalSet","_intervals","addRange","addition","bigger","complementRange","maxElement","EMPTY_SET","vocabularyIS","subtract","myIntervals","theirIntervals","mySize","theirSize","mine","theirs","el","elemAreChar","elementName","numIntervals","firstInterval","toIntegerList","toSet","oldb","_COMPLETE_CHAR_SET","_EMPTY_SET","resultI","rightI","resultInterval","rightInterval","beforeCurrent","afterCurrent","MultiMap","elementsForKey","getPairs","MurmurHash","seed","hashString","str","imul","numberOfWords","ObjectEqualityComparator","ParseCancellationException","cause","getCause","UUID","Uint32Array","segments","parseInt","escapeSpaces","separator","ErrorNode","RuleNode","TerminalNode","_symbol","Trees","getNodeText","payload","kids","ancestors","unshift","u","findAllNodes","findTokens","nodes","_findAllNodes","recurse","startTokenIndex","stopTokenIndex","getRootOfSubtreeEnclosingRegion","stopToken","root","range","isAncestorOf","abbrev","findNodeSuchThat","Chunk","ParseTreeMatch","labels","mismatchedNode","_tree","_pattern","_labels","_mismatchedNode","parseTrees","getAll","succeeded","ParseTreePattern","patternTree","_matcher","_patternRuleIndex","_patternTree","findAll","xpath","subtrees","XPath_1","escape","escapeRE","_lexer","setDelimiters","escapeLeft","RegExp","MultiMap_1","matchImpl","ParseTreeMatch_1","tokenList","tokenize","tokenSrc","ListTokenSource_1","CommonTokenStream_1","parserInterp","ParserInterpreter_1","BailErrorStrategy_1","CannotInvokeStartRule","StartRuleDoesNotConsumeFullPattern","ParseTreePattern_1","TokenTagToken_1","tokenTagToken","ruleTagToken","getRuleTagToken","childMatch","RuleTagToken_1","chunks","chunk","TagChunk_1","tagChunk","firstChar","tag","toUpperCase","toLowerCase","ruleImaginaryTokenType","textChunk","CharStreams_1","starts","stops","ntags","TextChunk_1","ruleOrToken","colon","afterLastTag","unescaped","RuleTagToken","bypassTokenType","_ruleName","TagChunk","_tag","Chunk_1","TextChunk","TokenTagToken","_tokenName","XPath","path","elements","XPathLexer_1","XPathLexerErrorListener_1","loop","ROOT","ANYWHERE","anywhere","invert","BANG","pathElement","getXPathElement","TOKEN_REF","RULE_REF","WILDCARD","wordToken","XPathWildcardAnywhereElement_1","XPathWildcardElement_1","STRING","XPathTokenAnywhereElement_1","XPathTokenElement_1","XPathRuleAnywhereElement_1","XPathRuleElement_1","evaluate","dummyRoot","work","XPathElement","nodeName","inv","XPathLexer","_ATN","VOCABULARY","_serializedATN","ID_action","__ATN","_LITERAL_NAMES","_SYMBOLIC_NAMES","_serializedATNSegment0","_serializedATNSegment1","XPathLexerErrorListener","XPathRuleAnywhereElement","findAllRuleNodes","XPathElement_1","XPathRuleElement","getChildren","XPathTokenAnywhereElement","findAllTokenNodes","XPathTokenElement","XPathWildcardAnywhereElement","getDescendants","XPathWildcardElement","objectAssign","require","compare","isBuffer","global","Buffer","_isBuffer","hasOwn","pSlice","functionsHaveNames","foo","pToString","isView","arrbuf","ArrayBuffer","DataView","ok","regex","getName","func","isFunction","truncate","something","rawname","fail","actual","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","multiline","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","actualVisitedObjects","isPrimitive","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","isError","generatedMessage","getMessage","captureStackTrace","out","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","ctor","superCtor","super_","TempCtor","readUInt8","formatRegExp","format","isString","Number","stringify","_","isNull","isObject","deprecate","isUndefined","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","ret","primitive","formatPrimitive","simple","isNumber","visibleKeys","arrayToHash","val","getOwnPropertyNames","formatError","Date","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","reduce","prev","cur","numLinesEst","ar","objectToString","d","pad","debuglog","NODE_DEBUG","pid","isNullOrUndefined","isSymbol","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","origin","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","propIsEnumerable","propertyIsEnumerable","toObject","shouldUseNative","assign","test1","test2","test3","letter","symbols","Prism","languages","clike","lookbehind","greedy","inside","_self","lang","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","encode","content","alias","objId","deepClone","id","getLanguage","exec","className","parentElement","setLanguage","language","classList","currentScript","document","scripts","getElementsByTagName","isActive","defaultActivation","no","plain","plaintext","extend","redef","insert","grammar","newToken","DFS","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","querySelectorAll","highlightElement","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","postMessage","immediateClose","highlight","rest","LinkedList","addAfter","head","matchGrammar","tail","all","callbacks","matchedStr","matchPattern","pos","lookbehindLength","startNode","startPos","rematch","patterns","patternObj","flags","currentNode","removeCount","matchStr","after","removeFrom","nestedRematch","newNode","classes","attributes","aliases","addEventListener","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","javascript","markup","addInlined","addAttribute","js","aa","encodeURIComponent","ba","ca","da","ea","fa","createElement","ha","ia","ja","B","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","oa","pa","qa","na","ma","isNaN","removeAttribute","setAttributeNS","xlinkHref","ra","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","for","E","Ma","Ka","La","Na","trim","Oa","Pa","prepareStackTrace","h","Qa","_render","Ra","$$typeof","_payload","_init","Sa","Ta","Va","_valueTracker","Ua","getValue","setValue","stopTracking","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","ownerDocument","eb","db","Children","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","lb","mb","nb","ob","namespaceURI","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","setProperty","ub","menuitem","area","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","vb","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","$b","memoizedState","dehydrated","ac","cc","bc","sibling","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","ad","bd","cd","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","search","tel","url","week","me","ne","oe","listeners","pe","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ge","Ie","Je","Ke","Le","nextSibling","Me","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","end","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","Yb","G","$e","af","bf","random","cf","df","capture","passive","Nb","w","z","ef","ff","parentWindow","gf","hf","J","K","Q","L","je","ke","char","jf","kf","lf","mf","autoFocus","nf","__html","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","H","Cf","M","N","Df","Ef","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","O","eg","fg","gg","hg","ig","jg","kg","ReactCurrentBatchConfig","lg","mg","ng","og","pg","qg","rg","_currentValue","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","Ag","Bg","Cg","A","C","Dg","Eg","Fg","Component","refs","Gg","Kg","isMounted","_reactInternals","enqueueSetState","Hg","Ig","Jg","enqueueReplaceState","enqueueForceUpdate","Lg","shouldComponentUpdate","isPureReactComponent","Mg","updater","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","ref","_owner","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","dh","eh","documentElement","tagName","fh","gh","hh","P","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","ReactCurrentDispatcher","wh","xh","R","S","T","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","useState","getSnapshot","subscribe","useEffect","setSnapshot","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useCallback","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","ReactCurrentOwner","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","ri","pendingContext","Bi","Di","Ei","si","retryLane","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","yi","zi","isBackwards","rendering","renderingStartTime","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","Ni","Oi","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","createRange","setStart","removeAllRanges","setEnd","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","isReactComponent","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","sk","uk","hk","_calculateChangedBits","unstable_observedBits","unmount","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","pk","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","__REACT_DEVTOOLS_GLOBAL_HOOK__","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","checkDCE","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","React","KEYCODE_Z","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","navigator","platform","isMacLike","Editor","_recordCurrentState","_this","_recordChange","_getLines","record","overwrite","_history","extras","startsWith","_updateInput","onValueChange","_applyEdits","_undoEdit","_redoEdit","_handleKeyDown","insertSpaces","ignoreTabKey","onKeyDown","blur","tabCharacter","linesBeforeCaret","startLine","endLine","nextValue","startLineText","updatedSelection","hasSelection","endsWith","indent","chars","setState","_handleChange","padding","textareaId","textareaClassName","maxLength","minLength","placeholder","required","onFocus","onBlur","onKeyUp","preClassName","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","_this2","editor","textarea","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","history","session","textAlign","boxSizing","overflow","resize","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","margin","border","background","fontFamily","fontSize","fontStyle","fontVariantLigatures","letterSpacing","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","__self","__source","jsx","jsxs","forceUpdate","_status","_result","default","IsSomeRendererActing","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","memo","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","GenStateSuspendedStart","invoke","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","reject","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","skipTempReset","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","port2","port1","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","shallowEqual","objA","objB","compareContext","keysA","keysB","bHasOwnProperty","valueA","valueB","getOwnPropertyDescriptors","descriptors","kCustomPromisifiedSymbol","callbackifyOnRejected","newReason","promisify","original","promiseResolve","promiseReject","promise","defineProperties","callbackify","callbackified","maybeCb","nextTick","rej","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","chunkId","promises","miniCssF","inProgress","dataWebpackPrefix","needAttach","getAttribute","charset","timeout","onScriptComplete","onerror","onload","doneFns","installedChunks","installedChunkData","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","some","chunkLoadingGlobal","_taggedTemplateLiteral","strings","raw","freeze","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_i","_s","_arr","_n","_d","_nonIterableRest","stylis_min","use","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","WebkitLineClamp","reactPropsRegex","memoize","interpolations","EMPTY_ARRAY","EMPTY_OBJECT","getComponentName","isStyledComponent","styledComponentId","SC_ATTR","REACT_APP_SC_ATTR","IS_BROWSER","DISABLE_SPEEDY","SC_DISABLE_SPEEDY","REACT_APP_SC_DISABLE_SPEEDY","throwStyledComponentsError","DefaultGroupedTag","groupSizes","indexOfGroup","insertRules","rules","oldBuffer","newSize","throwStyledError","insertRule","clearGroup","endIndex","deleteRule","getGroup","css","getRule","groupIDRegister","reverseRegister","nextFreeGroup","getGroupForId","getIdForGroup","setGroupForId","SELECTOR","MARKER_RE","rehydrateNamesFromContent","sheet","names","registerName","rehydrateSheetFromTag","parts","part","getTag","getNonce","__webpack_nonce__","makeStyleTag","prevStyle","childNodes","__VERSION__","nonce","CSSOMTag","styleSheets","ownerNode","rule","_error","cssRules","cssText","TextTag","refNode","VirtualTag","_target","SHOULD_REHYDRATE","isServer","useCSSOMInjection","StyleSheet","globalStyles","gs","server","registerId","reconstructWithOptions","withNames","allocateGSInstance","hasNameForId","groupNames","clearNames","clearRules","clearTag","AD_REPLACER_R","getAlphabeticChar","generateAlphabeticName","abs","phash","isStaticRules","SEED","ComponentStyle","componentId","baseStyle","staticRulesId","isStatic","NODE_ENV","baseHash","generateAndInjectStyles","executionContext","styleSheet","stylis","cssStatic","flatten","generateName","cssStaticFormatted","dynamicHash","partRule","partChunk","partString","cssFormatted","COMMENT_REGEX","COMPLEX_SELECTOR_PREFIX","createStylisInstance","_componentId","_selector","_selectorRegexp","_consecutiveSelfRefRegExp","Stylis","parsingRules","parseRulesPlugin","toSheet","selectors","column","ns","at","delimiter","selfReferenceReplacer","string","stringifyRules","flatCSS","cssStr","parsedRules","acc","plugin","StyleSheetContext","StylisContext","masterSheet","masterStylis","useStyleSheet","useStylis","StyleSheetManager","stylisPlugins","setPlugins","contextStyleSheet","disableCSSOMInjection","disableVendorPrefixes","shallowequal","Keyframes","stylisInstance","resolvedName","uppercaseCheck","uppercasePattern","msPattern","prefixAndLowerCase","hyphenateStyleName","isFalsish","ruleSet","isPlainObject","objToCssArray","prevKey","isCss","hyphenate","unitless","addTag","interleave","originalConsoleError","providedTheme","theme","escapeRegex","dashesAtEnds","isTag","isValidKey","mixin","mixinDeep","ThemeContext","identifiers","createStyledComponent","isTargetStyledComp","isCompositeComponent","attrs","parentComponentId","generateComponentId","finalAttrs","shouldForwardProp","filterFn","elementToBeCreated","WrappedStyledComponent","componentStyle","forwardedComponent","forwardedRef","componentAttrs","foldedComponentIds","resolvedAttrs","attrDef","resolvedAttrDef","determineTheme","generatedClassName","warnTooManyClasses","refToForward","$as","as","isTargetTag","computedProps","propsForElement","validAttr","withComponent","previousComponentId","optionsToCopy","newComponentId","_foldedDefaultProps","merge","hoist","styled","constructWithOptions","componentConstructor","templateFunction","withConfig","StyledComponent","domElement","GlobalStyle","createStyles","removeStyles","renderStyles","ServerStyleSheet","_emitSheetCSS","SC_ATTR_VERSION","getStyleTags","sealed","getStyleElement","seal","collectStyles","interleaveWithNodeStream","TerminalContainer","TerminalWrapper","Terminal","FireLexer","T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","T__10","T__11","T__12","T__13","T__14","T__15","T__16","T__17","T__18","T__19","T__20","T__21","T__22","T__23","LET","PRINT","INSIDE","NUMBER","IDENTIFIER","WS","COMMENT","LINE_COMMENT","FireParser","_la","CompilationUnitContext","RULE_compilationUnit","stmt","StmtContext","RULE_stmt","assignStmt","printStmt","relationStmt","ifThenDoStmt","RelationStmtContext","RULE_relationStmt","variableName","AssignStmtContext","RULE_assignStmt","primitiveEntity","PrintStmtContext","RULE_printStmt","IfThenDoStmtContext","RULE_ifThenDoStmt","objectChildReference","JsonContext","RULE_json","jsonObject","JsonObjectContext","RULE_jsonObject","keyValuePair","ObjectChildReferenceContext","RULE_objectChildReference","VariableNameContext","RULE_variableName","KeyValuePairContext","RULE_keyValuePair","ValueOperatorsContext","RULE_valueOperators","OperatorNumberPairContext","RULE_operatorNumberPair","valueOperators","PrimitiveEntityContext","RULE_primitiveEntity","ValueContext","RULE_value","ArrContext","RULE_arr","BoolContext","RULE_bool","enterCompilationUnit","exitCompilationUnit","enterStmt","exitStmt","enterRelationStmt","exitRelationStmt","enterAssignStmt","exitAssignStmt","enterPrintStmt","exitPrintStmt","enterIfThenDoStmt","exitIfThenDoStmt","enterJson","exitJson","enterJsonObject","exitJsonObject","enterObjectChildReference","exitObjectChildReference","enterVariableName","exitVariableName","enterKeyValuePair","exitKeyValuePair","enterValueOperators","exitValueOperators","visitValueOperators","enterOperatorNumberPair","exitOperatorNumberPair","visitOperatorNumberPair","enterPrimitiveEntity","exitPrimitiveEntity","enterValue","exitValue","enterArr","exitArr","enterBool","exitBool","Container","TerminalLine","filterByType","FireErrorListener","errorMessages","RunButton","ButtonWrapper","EditorWrapper","App","setCode","codeQueue","setCodeQueue","parserErrorListener","lexerErrorListener","compilationUnit","pushQueue","importFile","getElementById","click","file","files","reader","FileReader","readAsText","focusTextArea","hightlightWithLineNumbers","alertInvocation","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"sourceRoot":""}